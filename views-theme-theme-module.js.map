{"version":3,"sources":["./src/app/views/theme/admininfo/adminadd/adminadd.component.html","./src/app/views/theme/admininfo/admininfo/admininfo.component.html","./src/app/views/theme/admininfo/adminview/adminview.component.html","./src/app/views/theme/admininfo/resetadmin/resetadmin.component.html","./src/app/views/theme/banner/banneradd.component.html","./src/app/views/theme/category/categoryadd.component.html","./src/app/views/theme/category/categorylist.component.html","./src/app/views/theme/customer/customer.component.html","./src/app/views/theme/customer/customeradd.component.html","./src/app/views/theme/productinfo/product/product.component.html","./src/app/views/theme/productinfo/productadd/productadd.component.html","./src/app/views/theme/productinfo/productlist.component.html","./src/app/views/theme/productinfo/quantityadd/quantityadd.component.html","./src/app/views/theme/resetpass/resetpass.component.html","./src/app/views/theme/settings/settings.component.html","./src/app/views/theme/shoperInfo/addressInfo/addressinfo.component.html","./src/app/views/theme/shoperInfo/basicinfo/basicinfo.component.html","./src/app/views/theme/shoperInfo/myinfo.component.html","./src/app/views/theme/shoperInfo/othersInfo/othersinfo.component.html","./src/app/views/theme/shoperInfo/shopperlist.component.html","./src/app/services/category.service.ts","./src/app/services/shopper.service.ts","./src/app/stores/product/product.selectors.ts","./src/app/stores/quantity/quantity.selectors.ts","./src/app/stores/settings/settings.selectors.ts","./src/app/views/theme/admininfo/adminadd/adminadd.component.scss","./src/app/views/theme/admininfo/adminadd/adminadd.component.ts","./src/app/views/theme/admininfo/admininfo.module.ts","./src/app/views/theme/admininfo/admininfo/admininfo.component.scss","./src/app/views/theme/admininfo/admininfo/admininfo.component.ts","./src/app/views/theme/admininfo/adminview/adminview.component.scss","./src/app/views/theme/admininfo/adminview/adminview.component.ts","./src/app/views/theme/admininfo/confirm-equal-validator.directive.ts","./src/app/views/theme/admininfo/resetadmin/resetadmin.component.scss","./src/app/views/theme/admininfo/resetadmin/resetadmin.component.ts","./src/app/views/theme/banner/banneradd.component.ts","./src/app/views/theme/category/categoryadd.component.ts","./src/app/views/theme/category/categorylist.component.ts","./src/app/views/theme/customer/customer.component.ts","./src/app/views/theme/customer/customeradd.component.ts","./src/app/views/theme/middlewares/protectedfield.directive.ts","./src/app/views/theme/productinfo/product/product.component.scss","./src/app/views/theme/productinfo/product/product.component.ts","./src/app/views/theme/productinfo/productadd/productadd.component.scss","./src/app/views/theme/productinfo/productadd/productadd.component.ts","./src/app/views/theme/productinfo/productinfo.module.ts","./src/app/views/theme/productinfo/productlist.component.ts","./src/app/views/theme/productinfo/quantityadd/quantityadd.component.scss","./src/app/views/theme/productinfo/quantityadd/quantityadd.component.ts","./src/app/views/theme/resetpass/resetpass.component.ts","./src/app/views/theme/settings/settings.component.ts","./src/app/views/theme/shoperInfo/addressInfo/addressinfo.component.ts","./src/app/views/theme/shoperInfo/basicinfo/basicinfo.component.ts","./src/app/views/theme/shoperInfo/myinfo.component.ts","./src/app/views/theme/shoperInfo/myinfo.module.ts","./src/app/views/theme/shoperInfo/othersInfo/othersinfo.component.ts","./src/app/views/theme/shoperInfo/shopperlist.component.ts","./src/app/views/theme/theme-routing.module.ts","./src/app/views/theme/theme.module.ts"],"names":[],"mappings":"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","file":"views-theme-theme-module.js","sourcesContent":["export default \"\\n  \\n           \\n            <!--------2nd Div Start-->\\n            <form [formGroup]=\\\"addAdminForm\\\" (ngSubmit)=\\\"addAdmin();\\\">\\n              <div class=\\\"basic_details\\\">\\n  \\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-sm-3 col-md-offset-1\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label>First Name<span class=\\\"star_class\\\">*</span></label>\\n                      <input class=\\\"form-control\\\" type=\\\"text\\\" id=\\\"first_name\\\" name=\\\"first_name\\\"\\n                        formControlName=\\\"firstName\\\" placeholder=\\\"Enter first name\\\" [(ngModel)]=\\\"first_name\\\"\\n                        [ngClass]=\\\"{ 'is-invalid': submitted && adminVal.firstName.errors }\\\" />\\n  \\n                      <div *ngIf=\\\"submitted && adminVal.firstName.errors\\\" class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"adminVal.firstName.errors.required\\\">\\n                          <div class=\\\"error_msg\\\"> First name is required</div>\\n                        </div>\\n  \\n                      </div>\\n                    </div>\\n                  </div>\\n  \\n                  <div class=\\\"col-sm-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label >Last Name<span class=\\\"star_class\\\">*</span></label>\\n  \\n                      <!----Validation Start-->\\n                      <input class=\\\"form-control\\\" type=\\\"text\\\" id=\\\"last_name\\\" name=\\\"last_name\\\" formControlName=\\\"lastName\\\"\\n                        placeholder=\\\"Enter last name\\\" [(ngModel)]=\\\"last_name\\\"\\n                        [ngClass]=\\\"{ 'is-invalid': submitted && adminVal.lastName.errors }\\\" />\\n  \\n                      <div *ngIf=\\\"submitted && adminVal.lastName.errors\\\" class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"adminVal.lastName.errors.required\\\">\\n                          <div class=\\\"error_msg\\\"> Last name is required</div>\\n                        </div>\\n  \\n                      </div>\\n  \\n                      <!----Validation End-->\\n                    </div>\\n                  </div>\\n  \\n  \\n  \\n                  <div class=\\\"col-sm-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"company\\\">Phone Number<span class=\\\"star_class\\\">*</span> </label>\\n  \\n                      <!----Validation Start-->\\n                      <input class=\\\"form-control\\\" type=\\\"text\\\" id=\\\"phone\\\" name=\\\"phone\\\" formControlName=\\\"phoneNumber\\\"\\n                        placeholder=\\\"Enter phone\\\" [(ngModel)]=\\\"phone\\\" maxlength=\\\"10\\\" minlength=\\\"10\\\"\\n                        (keypress)=\\\"numberOnly($event)\\\"\\n                        [ngClass]=\\\"{ 'is-invalid': submitted && adminVal.phoneNumber.errors }\\\" />\\n  \\n                      <div *ngIf=\\\"submitted && adminVal.phoneNumber.errors\\\" class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"adminVal.phoneNumber.errors.required\\\">\\n                          <div class=\\\"error_msg\\\">Phone is required</div>\\n                        </div>\\n  \\n                      </div>\\n  \\n                      <!----Validation End-->\\n                    </div>\\n                  </div>\\n  \\n                  <div class=\\\"col-sm-3\\\">\\n  \\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"name\\\">Gender<span class=\\\"star_class\\\">*</span></label>\\n                      <select class=\\\"form-control\\\" (change)=\\\"changeGender($event)\\\" ng-Model=\\\"gender\\\" name=\\\"gender\\\"\\n                        formControlName=\\\"genderName\\\"\\n                        [ngClass]=\\\"{ 'is-invalid': submitted && adminVal.genderName.errors }\\\">\\n                        <option value=\\\"\\\">--Choose Gender--</option>\\n                        <option *ngFor=\\\"let gender of genders\\\" [ngValue]=\\\"gender\\\">{{gender}}</option>\\n  \\n                      </select>\\n  \\n                      <div *ngIf=\\\"submitted && adminVal.genderName.errors\\\" class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"adminVal.genderName.errors.required\\\">\\n                          <div class=\\\"error_msg\\\">Choose gender</div>\\n                        </div>\\n                      </div>\\n  \\n  \\n                    </div>\\n  \\n                  </div>\\n  \\n  \\n  \\n                </div>\\n  \\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-sm-3 col-md-offset-1\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label>Password<span class=\\\"star_class\\\">*</span></label>\\n                      <div class=\\\"input-group mb-3 field_size_apple\\\">\\n  \\n                        <input [type]=\\\"addTextType ? 'text' : 'password'\\\" class=\\\"form-control\\\" id=\\\"add_password\\\" name=\\\"add_password\\\"\\n                        formControlName=\\\"addPassword\\\" placeholder=\\\"Enter password\\\" [(ngModel)]=\\\"add_password\\\" appProtectedfield\\n                        maxlength=\\\"10\\\" minlength=\\\"10\\\"\\n                        [ngClass]=\\\"{ 'is-invalid': submitted && adminVal.addPassword.errors }\\\" />\\n                         <!---------------Password Show Hide-->\\n                         <div class=\\\"input-group-append\\\">\\n                          <span class=\\\"input-group-text\\\">\\n                            <i class=\\\"fa\\\" [ngClass]=\\\"{\\n                          'fa-eye-slash': !addTextType,\\n                          'fa-eye': addTextType }\\\" (click)=\\\"toggleAddTextType()\\\"></i>\\n                          </span>\\n                        </div>\\n                        <!---------------Password Show Hide end-->\\n  \\n                       <div *ngIf=\\\"submitted && adminVal.addPassword.errors\\\" class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"adminVal.addPassword.errors.required\\\" >\\n                          <div class=\\\"error_msg\\\">Password is required</div>\\n                        </div>\\n                        <div *ngIf=\\\"adminVal.addPassword.errors.pattern\\\" >\\n                          <div class=\\\"error_msg\\\">  First is upper case</div>\\n                        </div>\\n                        <div *ngIf=\\\"adminVal.addPassword.errors.pattern\\\" >\\n                          <div class=\\\"error_msg\\\"> Next is number & character(1, 2, @)</div>\\n                            <div class=\\\"error_msg\\\">  (eg. Local2@code)</div>\\n                        </div>\\n                      </div>\\n  \\n                      </div>\\n                      \\n                      \\n                    </div>\\n                  </div>\\n  \\n                  <div class=\\\"col-sm-3 col-md-offset-1\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label>Confirm Password<span class=\\\"star_class\\\">*</span></label>\\n                      <div class=\\\"input-group mb-3 field_size_apple\\\">\\n  \\n                        <input [type]=\\\"confTextType ? 'text' : 'password'\\\" class=\\\"form-control\\\" id=\\\"conf_password\\\" name=\\\"conf_password\\\"\\n                        formControlName=\\\"confPassword\\\" placeholder=\\\"Enter confirm password\\\"  appProtectedfield\\n                        maxlength=\\\"10\\\" minlength=\\\"10\\\"\\n                        [(ngModel)]=\\\"conf_password\\\" appConfirmEqualValidatorDirective=\\\"addPassword\\\"\\n                        [ngClass]=\\\"{ 'is-invalid': submitted && adminVal.confPassword.errors }\\\" />\\n                         <!---------------Password Show Hide-->\\n                         <div class=\\\"input-group-append\\\">\\n                          <span class=\\\"input-group-text\\\">\\n                            <i class=\\\"fa\\\" [ngClass]=\\\"{\\n                          'fa-eye-slash': !confTextType,\\n                          'fa-eye': confTextType }\\\" (click)=\\\"toggleConfTextType()\\\"></i>\\n                          </span>\\n                        </div>\\n                        <!---------------Password Show Hide end-->\\n  \\n                       <div *ngIf=\\\"submitted && adminVal.confPassword.errors\\\" class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"adminVal.confPassword.errors.required\\\" >\\n                          <div class=\\\"error_msg\\\">Confirm password is required</div>\\n                        </div>\\n                        <div *ngIf=\\\"adminVal.confPassword.errors.pattern\\\" >\\n                          <div class=\\\"error_msg\\\">  Password pattern must be same</div>\\n                        </div>\\n                        <div *ngIf=\\\"adminVal.confPassword.errors.notEqual\\\" >\\n                          <div class=\\\"error_msg\\\"> Add & Confirm Password does not match</div>\\n                        </div>\\n                      </div>\\n  \\n                      </div>\\n                      \\n                      \\n                    </div>\\n                  </div>\\n  \\n  \\n                </div>\\n  \\n  \\n  \\n                <div class=\\\"row button_row\\\">\\n                  <div class=\\\"card-footer1 buttons\\\">\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-sm btn-success\\\"><i class=\\\"fa fa-dot-circle-o\\\"></i>\\n                      Submit</button>\\n                  </div>\\n                </div>\\n  \\n              </div>\\n            </form>\\n            <!------Basic Details Div2 End-->\\n  \\n  \";","export default \"<div class=\\\"animated fadeIn upper_space\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-12\\\">\\n        <div class=\\\"card\\\">\\n          <div class=\\\"card-header\\\">\\n            <strong>Admin Details</strong>\\n  \\n          </div>\\n  \\n  \\n          <div class=\\\"card-body\\\">\\n            <span class=\\\"pro_para\\\">Admin Information</span>\\n  \\n            <!--------First Div-->\\n            <app-adminview></app-adminview>\\n            <!------Basic Details Div1 End-->\\n  \\n            <span class=\\\"pro_para\\\">Add Admin</span>\\n            <!--------2nd Div Start-->\\n            <app-adminadd></app-adminadd>\\n            <!------Basic Details Div2 End-->\\n  \\n  \\n            <span class=\\\"pro_para\\\">Reset Admin Password(Optional)</span>\\n            <!--------3nd Div Start-->\\n           <app-resetadmin></app-resetadmin>\\n            <!------Basic Details Div3 End-->\\n  \\n  \\n          </div>\\n  \\n  \\n  \\n  \\n        </div>\\n      </div>\\n  \\n    </div>\\n  </div>\";","export default \"\\n  \\n            <!--------First Div-->\\n            <form>\\n              <div class=\\\"basic_details admin-view\\\">\\n  \\n                <div class=\\\"row view_form\\\">\\n  \\n  \\n                  <div class=\\\"col-sm-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"name\\\">First Name</label>\\n                      <input class=\\\"form-control\\\" id=\\\"f_name\\\" name=\\\"f_name\\\" value=\\\"Gupi\\\" disabled>\\n                    </div>\\n                  </div>\\n  \\n  \\n                  <div class=\\\"col-sm-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"ccnumber\\\">Last Name</label>\\n  \\n                      <input class=\\\"form-control\\\" id=\\\"l_name\\\" name=\\\"l_name\\\" value=\\\"Gayan\\\" disabled />\\n                    </div>\\n                  </div>\\n  \\n                  <div class=\\\"col-sm-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"name\\\">Phone Number</label>\\n                      <input class=\\\"form-control\\\" id=\\\"phone\\\" name=\\\"phone\\\" value=\\\"8961272806\\\" disabled />\\n                    </div>\\n                  </div>\\n  \\n                  <div class=\\\"col-sm-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"ccnumber\\\">Gender</label>\\n                      <input class=\\\"form-control\\\" id=\\\"gender\\\" name=\\\"gender\\\" value=\\\"Male\\\" disabled />\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </form>\\n            <!------Basic Details Div1 End-->\\n  \\n          \\n  \\n  \\n         \";","export default \"\\n            \\n  \\n            \\n  \\n            \\n            <!--------3nd Div Start-->\\n            <form [formGroup]=\\\"resetPassForm\\\" (ngSubmit)=\\\"resetPass();\\\">\\n              <div class=\\\"basic_details admin_reset_pass\\\">\\n          \\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-6 mx-auto\\\">\\n                    \\n                      \\n                        <div class=\\\"form-group\\\">\\n                          <label>Old Password<span class=\\\"star_class\\\">*</span></label>\\n                          <div class=\\\"input-group mb-3\\\">\\n                            <input [type]=\\\"oldTextType ? 'text' : 'password'\\\" class=\\\"form-control\\\" id=\\\"old_pass\\\"\\n                              name=\\\"old_pass\\\" formControlName=\\\"oldPass\\\"  placeholder=\\\"Enter old password\\\"\\n                              [(ngModel)]=\\\"first_name\\\" appProtectedfield maxlength=\\\"10\\\" minlength=\\\"10\\\"\\n                              [ngClass]=\\\"{ 'is-invalid': isPasswordSubmitte && passVal.oldPass.errors }\\\" />\\n          \\n                            <!---------------Password Show Hide-->\\n                            <div class=\\\"input-group-append\\\">\\n                              <span class=\\\"input-group-text\\\">\\n                                <i class=\\\"fa\\\" [ngClass]=\\\"{\\n                              'fa-eye-slash': !oldTextType,\\n                              'fa-eye': oldTextType }\\\" (click)=\\\"toggleOldTextType()\\\"></i>\\n                              </span>\\n                            </div>\\n                            <!---------------Password Show Hide end-->\\n          \\n                            <div *ngIf=\\\"isPasswordSubmitte && passVal.oldPass.errors\\\" class=\\\"invalid-feedback\\\">\\n                              <div *ngIf=\\\"passVal.oldPass.errors.required\\\" >\\n                                <div class=\\\"error_msg\\\">Old password is required</div>\\n                              </div>\\n                              <div *ngIf=\\\"passVal.oldPass.errors.pattern\\\" >\\n                                <div class=\\\"error_msg\\\">  First is upper case</div>\\n                              </div>\\n                              <div *ngIf=\\\"passVal.oldPass.errors.pattern\\\" >\\n                                <div class=\\\"error_msg\\\"> Next is number & character(1, 2, @)</div>\\n                                  <div class=\\\"error_msg\\\">  (eg. Local2@code)</div>\\n                              </div>\\n                            </div>\\n          \\n                          </div>\\n          \\n                        </div>\\n          \\n          \\n          \\n                        <div class=\\\"form-group\\\">\\n                          <label>New Password<span class=\\\"star_class\\\">*</span></label>\\n          \\n                          <!----Validation Start-->\\n                          <div class=\\\"input-group mb-3\\\">\\n                            <input [type]=\\\"newTextType ? 'text' : 'password'\\\" class=\\\"form-control\\\" id=\\\"new_pass\\\"\\n                              name=\\\"new_pass\\\" formControlName=\\\"newPass\\\" placeholder=\\\"Enter new password\\\"\\n                              [(ngModel)]=\\\"new_pass\\\" appProtectedfield maxlength=\\\"10\\\" minlength=\\\"10\\\"\\n                              [ngClass]=\\\"{ 'is-invalid': isPasswordSubmitte && passVal.newPass.errors }\\\" />\\n                              \\n                            <!---------------Password Show Hide-->\\n                            <div class=\\\"input-group-append\\\">\\n                              <span class=\\\"input-group-text\\\">\\n                                <i class=\\\"fa\\\" [ngClass]=\\\"{\\n                              'fa-eye-slash': !newTextType,\\n                              'fa-eye': newTextType }\\\" (click)=\\\"toggleNewTextType()\\\"></i>\\n                              </span>\\n                            </div>\\n                            <!---------------Password Show Hide end-->\\n          \\n                            <div *ngIf=\\\"isPasswordSubmitte && passVal.newPass.errors\\\" class=\\\"invalid-feedback\\\">\\n                              <div *ngIf=\\\"passVal.newPass.errors.required\\\" >\\n                                <div class=\\\"error_msg\\\">New password is required</div>\\n                              </div>\\n                              <div *ngIf=\\\"passVal.newPass.errors.pattern\\\" >\\n                                <div class=\\\"error_msg\\\">  First is upper case</div>\\n                              </div>\\n                              <div *ngIf=\\\"passVal.newPass.errors.pattern\\\" >\\n                                <div class=\\\"error_msg\\\"> Next is number & character(1, 2, @)</div>\\n                                  <div class=\\\"error_msg\\\">  (eg. Local2@code)</div>\\n                              </div>\\n                            </div>\\n                          </div>\\n                          <!----Validation End-->\\n          \\n                        </div>\\n          \\n                        <div class=\\\"form-group\\\">\\n                          <label>Confirm Password<span class=\\\"star_class\\\">*</span> </label>\\n          \\n                          <!----Validation Start-->\\n                          <div class=\\\"input-group mb-3\\\">\\n                            <input [type]=\\\"confirmTextType ? 'text' : 'password'\\\" class=\\\"form-control\\\" id=\\\"confirm_pass\\\"\\n                              name=\\\"confirm_pass\\\" formControlName=\\\"confirmPass\\\" placeholder=\\\"Enter confirm password\\\"\\n                              maxlength=\\\"10\\\" minlength=\\\"10\\\"\\n                              [(ngModel)]=\\\"confirm_pass\\\" appConfirmEqualValidatorDirective=\\\"newPass\\\" appProtectedfield\\n                              [ngClass]=\\\"{ 'is-invalid': isPasswordSubmitte && passVal.confirmPass.errors }\\\" />\\n          \\n                            <!---------------Password Show Hide-->\\n                            <div class=\\\"input-group-append\\\">\\n                              <span class=\\\"input-group-text\\\">\\n                                <i class=\\\"fa\\\" [ngClass]=\\\"{\\n                              'fa-eye-slash': !confirmTextType,\\n                              'fa-eye': confirmTextType\\n                            }\\\" (click)=\\\"toggleConfirmTextType()\\\"></i>\\n                              </span>\\n                            </div>\\n                            <!---------------Password Show Hide end-->\\n          \\n                            <div *ngIf=\\\"isPasswordSubmitte && passVal.confirmPass.errors\\\" class=\\\"invalid-feedback\\\">\\n                              <div *ngIf=\\\"passVal.confirmPass.errors.required\\\" >\\n                                <div class=\\\"error_msg\\\">Confirm password is required</div>\\n                              </div>\\n                              <div *ngIf=\\\"passVal.confirmPass.errors.pattern\\\" >\\n                                <div class=\\\"error_msg\\\">Password pattern must be same</div>\\n                              </div>\\n                              <div *ngIf=\\\"passVal.confirmPass.errors.notEqual\\\" >\\n                                <div class=\\\"error_msg\\\">New & Confirm Password does not match</div>\\n                              </div>\\n          \\n                            </div>\\n                          </div>\\n                          <!----Validation End-->\\n                        </div>\\n          \\n                        <div class=\\\"row button_row\\\">\\n                          <div class=\\\"card-footer1 buttons\\\">\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-sm btn-success\\\"><i class=\\\"fa fa-dot-circle-o\\\"></i>\\n                              Submit</button>\\n                          </div>\\n                        </div>\\n                    \\n                  </div>\\n          \\n          \\n          \\n          \\n                </div>\\n          \\n          \\n          \\n                \\n          \\n              </div>\\n            </form>\\n            <!------Basic Details Div3 End-->\\n  \\n  \\n          \";","export default \"<div class=\\\"banner_images upper_space\\\">\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-6\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\">\\n        <strong>Banner Add</strong>\\n      </div>\\n      <form id=\\\"bannerImage\\\" name=\\\"bannerImage\\\"  [formGroup]=\\\"bannerImageForm\\\" (ngSubmit)=\\\"bannerSubmit()\\\">\\n        <div class=\\\"card-body\\\">\\n            <div class=\\\"form-group field_inn\\\">\\n              <label class=\\\"form-col-form-label\\\" for=\\\"inputSuccess1\\\">Display Image Here</label>\\n              <div class=\\\"display_image\\\">\\n\\n                <img *ngFor=\\\"let url of urls\\\" [src]=\\\"url\\\" width=\\\"100\\\" height=\\\"100\\\"  />\\n\\n              </div>\\n            \\n\\n            </div>\\n            <div class=\\\"form-group field_inn1\\\">\\n              <label class=\\\"form-col-form-label\\\" for=\\\"inputError1\\\">Upload Image Here<span class=\\\"star_class\\\">*</span></label>\\n\\n              \\n                 <!----Validation Start-->\\n                 <input type=\\\"file\\\" class=\\\"form-control\\\" id=\\\"banner_image\\\" [(ngModel)]=\\\"banner_image\\\"\\n                 formControlName=\\\"bannerImg\\\"\\n                 [ngClass]=\\\"{ 'is-invalid': submitted && bannerval.bannerImg.errors }\\\"\\n                 (change)=\\\"onSelectFile($event)\\\" multiple accept=\\\"image/*\\\" />\\n\\n                 <div *ngIf=\\\"submitted && bannerval.bannerImg.errors\\\" class=\\\"invalid-feedback\\\">\\n                  <div *ngIf=\\\"bannerval.bannerImg.errors.required\\\">\\n                    <div class=\\\"error_msg\\\"> Banner image is required</div>\\n                  </div>\\n                  </div>\\n                <!----Validation End-->\\n\\n                 \\n\\n\\n            </div>\\n          </div>\\n\\n\\n\\n            <div class=\\\"card-footer buttons \\\">\\n              <!--button type=\\\"submit\\\" class=\\\"btn btn-sm btn-primary\\\"><i class=\\\"fa fa-dot-circle-o\\\"></i> Submit</button-->\\n          <button type=\\\"submit\\\" class=\\\"btn btn-sm btn-primary \\\" >\\n            <i class=\\\"fa fa-dot-circle-o\\\"></i> Add\\n          </button>\\n          \\n          </div>\\n\\n          \\n        \\n      </form>\\n    </div>\\n  </div><!--/.col-->\\n  <div class=\\\"col-sm-6\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\">\\n        <strong>Banner List </strong> \\n      </div>\\n      <div class=\\\"card-body\\\">\\n\\n        <div class=\\\"scrolling_div\\\">\\n          \\n        <table class=\\\"table table-bordered\\\">\\n          <thead>\\n            <tr>\\n              <th>Sl.No</th>\\n              <th>Banner Image</th>\\n              <th>Banner Name</th>\\n              \\n              <th colspan=2>Action</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr>\\n              <td>1</td>\\n              <td><img alt=\\\"admin@bootstrapmaster.com\\\" class=\\\"img-avatar\\\" src=\\\"assets/img/avatars/6.jpg\\\"></td>\\n              <td>head.jpg</td>\\n              \\n              \\n              <td>\\n                <!--a href=\\\"\\\" onclick=\\\"return confirm ('Do you want to edit ??')\\\" class=\\\"badge badge-primary\\\"><i class=\\\"cui-pencil icons font-2xl mt-4\\\"></i></a--> &nbsp; \\n                <a href=\\\"\\\" onclick=\\\"return confirm ('Are you sure ??')\\\" class=\\\"badge badge-danger\\\"><i class=\\\"cui-trash icons font-2xl mt-4\\\"></i></a>\\n              </td>\\n            </tr>\\n\\n            <tr>\\n              <td>2</td>\\n              <td><img alt=\\\"admin@bootstrapmaster.com\\\" class=\\\"img-avatar\\\" src=\\\"assets/img/avatars/6.jpg\\\"></td>\\n              <td>head.jpg</td>\\n              \\n              \\n              <td>\\n                <!--a href=\\\"\\\" onclick=\\\"return confirm ('Do you want to edit ??')\\\" class=\\\"badge badge-primary\\\"><i class=\\\"cui-pencil icons font-2xl mt-4\\\"></i></a--> &nbsp; \\n                <a href=\\\"\\\" onclick=\\\"return confirm ('Are you sure ??')\\\" class=\\\"badge badge-danger\\\"><i class=\\\"cui-trash icons font-2xl mt-4\\\"></i></a>\\n              </td>\\n            </tr>\\n          \\n           \\n           \\n           \\n           \\n          </tbody>\\n        </table>\\n  \\n      </div> <!------scrolling_div----->\\n  \\n  \\n        <ul class=\\\"pagination\\\">\\n          <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">Prev</a></li>\\n          <li class=\\\"page-item active\\\">\\n            <a class=\\\"page-link\\\" href=\\\"#\\\">1</a>\\n          </li>\\n          <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">2</a></li>\\n          <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">3</a></li>\\n          <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">4</a></li>\\n          <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">Next</a></li>\\n        </ul>\\n      </div>\\n    </div>\\n  </div><!--/.col-->\\n\\n  \\n</div></div>\\n\\n\\n\\n\";","export default \"<div class=\\\"animated fadeIn upper_space\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <strong>Category Details</strong>\\n\\n\\n        </div>\\n\\n        <form id=\\\"categoryDetails\\\" name=\\\"categoryDetails\\\" [formGroup]=\\\"categoryDetailsForm\\\"\\n          (ngSubmit)=\\\"categoryDetails()\\\">\\n\\n          <div class=\\\"card-body\\\">\\n           \\n\\n            <div class=\\\"basic_details\\\">\\n\\n              <div class=\\\"row\\\">\\n\\n\\n                <div class=\\\"col-sm-6\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label for=\\\"name\\\">Category Name<span class=\\\"star_class\\\">*</span></label>\\n\\n\\n                    <input class=\\\"form-control\\\" type=\\\"text\\\" id=\\\"cat_name\\\" name=\\\"cat_name\\\"\\n                      formControlName=\\\"categoryName\\\" placeholder=\\\"Enter category name\\\"\\n                      [(ngModel)]=\\\"cat_name\\\" \\n                      [ngClass]=\\\"{ 'is-invalid': submitted && catVal.categoryName.errors }\\\" />\\n\\n                    <div *ngIf=\\\"submitted && catVal.categoryName.errors\\\" class=\\\"invalid-feedback\\\">\\n                      <div *ngIf=\\\"catVal.categoryName.errors.required\\\">\\n                        <div class=\\\"error_msg\\\"> Category name is required</div>\\n                      </div>\\n\\n                    </div>\\n\\n\\n                  </div>\\n                </div>\\n\\n\\n\\n                <div class=\\\"col-sm-6\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label for=\\\"ccnumber\\\">SEO Url(Optional)</label>\\n                    <input type=\\\"text\\\" id=\\\"cat_meta\\\" name=\\\"cat_meta\\\" [(ngModel)]=\\\"cat_meta\\\"\\n                      class=\\\"form-control\\\" placeholder=\\\"Enter seo url\\\" formControlName=\\\"seoURL\\\">\\n\\n                  </div>\\n                </div>\\n              </div>\\n\\n\\n\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-12\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label for=\\\"ccnumber\\\">Category Description<span class=\\\"star_class\\\">*</span></label>\\n\\n                    <angular-editor id=\\\"cat_detailse\\\" name=\\\"cat_detailse\\\" formControlName=\\\"categoryDescription\\\"\\n                      [placeholder]=\\\"'Enter description here...'\\\" [(ngModel)]=\\\"cat_detailse\\\"\\n                      [ngClass]=\\\"{ 'is-invalid': submitted && catVal.categoryDescription.errors }\\\">\\n                    </angular-editor>\\n\\n                    <div *ngIf=\\\"submitted && catVal.categoryDescription.errors\\\" class=\\\"invalid-feedback\\\">\\n                      <div *ngIf=\\\"catVal.categoryDescription.errors.required\\\">\\n                        <div class=\\\"error_msg\\\"> Description is required(Max 400 - Min 4)</div>\\n                      </div>\\n\\n                      <div *ngIf=\\\"catVal.categoryDescription.errors.minLength\\\">\\n                        <div class=\\\"error_msg\\\">Text length(Min 4)</div>\\n                      </div>\\n\\n                    </div>\\n\\n                  </div>\\n                </div>\\n              </div>\\n\\n\\n              <div class=\\\"row\\\">\\n\\n\\n                <div class=\\\"form-group col-sm-3 \\\">\\n                  <label for=\\\"city\\\">Category Image<span class=\\\"star_class\\\">*</span></label>\\n\\n                  <input type=\\\"file\\\" class=\\\"form-control\\\" name=\\\"cat_img_loc\\\" id=\\\"cat_img_loc\\\"\\n                    [(ngModel)]=\\\"local_cat_img_loc\\\" formControlName=\\\"categoryImg\\\"\\n                    [ngClass]=\\\"{ 'is-invalid': submitted && catVal.categoryImg.errors }\\\" (change)=\\\"preview(file.files)\\\"\\n                    #file accept=\\\"image/*\\\" />\\n\\n                  <div *ngIf=\\\"submitted && catVal.categoryImg.errors\\\" class=\\\"invalid-feedback\\\">\\n                    <div *ngIf=\\\"catVal.categoryImg.errors.required\\\">\\n                      <div class=\\\"error_msg\\\"> Category image is required</div>\\n                    </div>\\n                  </div>\\n\\n\\n\\n\\n\\n                </div>\\n                <div class=\\\"form-group col-sm-3\\\">\\n\\n\\n                  <img class=\\\"img-avatar fox\\\" *ngIf=\\\"imgURL\\\" [src]=\\\"imgURL\\\" width=\\\"100\\\" height=\\\"100\\\" />\\n                </div>\\n\\n\\n              </div>\\n\\n            </div>\\n            <!------Basic Details Div-->\\n\\n\\n\\n          </div>\\n\\n\\n          <div class=\\\"card-footer buttons\\\">\\n            <button type=\\\"submit\\\"  class=\\\"btn btn-sm btn-success\\\"\\n            ><i class=\\\"fa fa-dot-circle-o\\\"></i> Submit</button>\\n            <!--button type=\\\"reset\\\" class=\\\"btn btn-sm btn-danger\\\" [disabled]=\\\"!categoryDetails.valid\\\"><i\\n                class=\\\"fa fa-ban\\\"></i> Reset</button-->\\n          </div>\\n\\n        </form>\\n\\n\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\";","export default \"\\n<div class=\\\"animated fadeIn upper_space\\\">\\n\\n  <div class=\\\"col-lg-12\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\">\\n        <div class=\\\"row align-items-center\\\">\\n          <div class=\\\"col-md-3\\\">\\n            <i class=\\\"fa fa-align-justify\\\"></i> Category List\\n          </div>\\n          <div class=\\\"col-md-6 mb-3 mb-xl-0 input-group mb-3\\\">\\n            <div class=\\\"input-group-prepend\\\">\\n              <span class=\\\"input-group-text\\\"><i class=\\\"icon-magnifier\\\"></i></span>\\n            </div>\\n\\n            <input class=\\\"form-control\\\" name=\\\"valuetosearch\\\" placeholder=\\\"Search..\\\" type=\\\"text\\\">\\n          </div>\\n\\n          <div class=\\\"col-md-3\\\">\\n            <button class=\\\"btn btn-block btn-success\\\" [routerLink]=\\\"['/theme/categoryadd']\\\" type=\\\"button\\\">Add\\n              Category</button>\\n          </div>\\n        </div>\\n\\n      </div>\\n\\n      <!--Progress Bar----->\\n      \\n      <!--Progress Bar End----->\\n\\n      <div class=\\\"card-body\\\">\\n        \\n        <div class=\\\"scrolling_div\\\">\\n          \\n          <table class=\\\"table table-bordered\\\" >\\n            <thead>\\n              <tr>\\n                <th>Sl.No</th>\\n                <th>Category Name</th>\\n                <th>Category Meta</th>\\n                <th>Category Description</th>\\n                <th>Category Image</th>\\n                <th colspan=2>Action</th>\\n              </tr>\\n            </thead>\\n           \\n            <tbody >\\n              \\n              <tr  *ngFor=\\\"let category of categoryData; let i = index\\\">\\n                <!--td>{{category.cat_id}}</td-->\\n                <td>{{i+1}}</td>\\n                <td>{{category.cat_name}}</td>\\n                <td>{{category.cat_meta}}</td>\\n                <td>{{category.cat_detailse}}</td>\\n                <td><img alt=\\\"admin@bootstrapmaster.com\\\" class=\\\"img-avatar\\\" src=\\\"assets/img/avatars/6.jpg\\\"></td>\\n\\n                <td><button \\n                  class=\\\"badge badge-primary ox mx-2\\\"\\n                  mwlConfirmationPopover\\n                  [popoverTitle]=\\\"updateTitle\\\"\\n                  [popoverMessage]=\\\"updateMessage\\\"\\n                  placement=\\\"top\\\"\\n                  (confirm)=\\\"confirmUpdated(category.cat_id)\\\"\\n                  (cancel)=\\\"cancelUpdated = true\\\"\\n                 >\\n                  <i class=\\\"cui-pencil icons font-2xl mt-4\\\"></i></button> \\n\\n                  <button type=\\\"button\\\"\\n                  class=\\\"badge badge-danger mx-2\\\"\\n                  mwlConfirmationPopover\\n                  [popoverTitle]=\\\"popoverTitle\\\"\\n                  [popoverMessage]=\\\"popoverMessage\\\"\\n                  placement=\\\"top\\\"\\n                  (confirm)=\\\"confirmDeleted(category.cat_id)\\\"\\n                  (cancel)=\\\"cancelDeleted = true\\\"><i\\n                      class=\\\"cui-trash icons font-2xl mt-4\\\"></i></button>\\n\\n                      \\n                </td>\\n              </tr>\\n\\n\\n\\n            </tbody>\\n          </table>\\n        </div>\\n        <!------scrolling_div--(click)=\\\"deleteCatecory(category.cat_id)\\\"-\\n                  (click)=\\\"updateCategoryClick(category.cat_id)\\\"-->\\n\\n        <ul class=\\\"pagination\\\">\\n          <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">Prev</a></li>\\n          <li class=\\\"page-item active\\\">\\n            <a class=\\\"page-link\\\" href=\\\"#\\\">1</a>\\n          </li>\\n          <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">2</a></li>\\n          <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">3</a></li>\\n          <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">4</a></li>\\n          <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">Next</a></li>\\n        </ul>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<!-----mwlConfirmationPopover\\n                  [popoverUpdateTitle]=\\\"popoverUpdateTitle\\\"\\n                  [popoverUpdateMessage]=\\\"popoverUpdateMessage\\\"\\n                  placement=\\\"left\\\"\\n                  (confirm)=\\\"confirmUpdated()\\\"\\n                  (cancel)=\\\"cancelUpdated = true\\\"-->\\n\\n\";","export default \"\\n\\n<div class=\\\"animated fadeIn upper_space\\\">\\n<div class=\\\"col-lg-12\\\">\\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-header\\\">\\n      <div class=\\\"row align-items-center\\\">\\n        <div class=\\\"col-4\\\">\\n          <i class=\\\"fa fa-align-justify\\\"></i> Customer List\\n        </div>\\n        \\n        <div class=\\\"col-12 col-sm-12 col-md-2 col-xl mb-3 mb-xl-0 input-group mb-3\\\">\\n          <div class=\\\"input-group-prepend\\\">\\n            <span class=\\\"input-group-text\\\"><i class=\\\"icon-magnifier\\\"></i></span>\\n          </div>\\n          \\n           <input class=\\\"form-control\\\" name=\\\"valuetosearch\\\" id=\\\"myInput\\\" placeholder=\\\"Search..\\\" type=\\\"text\\\">\\n        </div>\\n        \\n        <div class=\\\"col-lg-3\\\">\\n          <button class=\\\"btn btn-block btn-success\\\" routerLink=\\\"/theme/customeradd\\\" type=\\\"button\\\">Add Customer</button>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"card-body\\\">\\n\\n        <div class=\\\"scrolling_div\\\">\\n\\n\\n      <table class=\\\"table table-bordered\\\">\\n        <thead>\\n          <tr>\\n            <th>Sl.No</th>\\n            <th>Customer-Id</th>\\n            <th>Date registered</th>\\n            <th>Customer Name</th>\\n            <th>Phone Number</th>\\n            <th>Address</th>\\n            <th>Street</th>\\n            <th>Status</th>\\n            <th colspan=2>Action</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr>\\n            <td>1</td>\\n            <td>012</td>\\n            <td>2012/01/01</td>\\n            <td>Binod Singh</td>\\n            <td>+91-7875454515</td>\\n            <td>Jadavpur</td>\\n            <td>Golipure</td>\\n            <td>\\n              <span class=\\\"badge badge-success\\\">Active</span>\\n            </td>\\n            <td><a href=\\\"\\\" onclick=\\\"return confirm ('Do you want to edit ??')\\\" class=\\\"badge badge-primary\\\"><i class=\\\"cui-pencil icons font-2xl mt-4\\\"></i></a> &nbsp; \\n              <a href=\\\"\\\" onclick=\\\"return confirm ('Are you sure ??')\\\" class=\\\"badge badge-danger\\\"><i class=\\\"cui-trash icons font-2xl mt-4\\\"></i></a>\\n            </td>\\n          </tr>\\n          <tr>\\n            <td>1</td>\\n            <td>012</td>\\n            <td>2012/01/01</td>\\n            <td>Binod Singh</td>\\n            <td>+91-7875454515</td>\\n            <td>Jadavpur</td>\\n            <td>Golipure</td>\\n            <td>\\n              <span class=\\\"badge badge-success\\\">Active</span>\\n            </td>\\n            <td><a href=\\\"\\\" onclick=\\\"return confirm ('Do you want to edit ??')\\\" class=\\\"badge badge-primary\\\"><i class=\\\"cui-pencil icons font-2xl mt-4\\\"></i></a> &nbsp; \\n              <a href=\\\"\\\" onclick=\\\"return confirm ('Are you sure ??')\\\" class=\\\"badge badge-danger\\\"><i class=\\\"cui-trash icons font-2xl mt-4\\\"></i></a>\\n            </td>\\n          </tr>\\n          <tr>\\n            <td>1</td>\\n            <td>012</td>\\n            <td>2012/01/01</td>\\n            <td>Binod Singh</td>\\n            <td>+91-7875454515</td>\\n            <td>Jadavpur</td>\\n            <td>Golipure</td>\\n            <td>\\n              <span class=\\\"badge badge-success\\\">Active</span>\\n            </td>\\n            <td><a href=\\\"\\\" onclick=\\\"return confirm ('Do you want to edit ??')\\\" class=\\\"badge badge-primary\\\"><i class=\\\"cui-pencil icons font-2xl mt-4\\\"></i></a> &nbsp; \\n              <a href=\\\"\\\" onclick=\\\"return confirm ('Are you sure ??')\\\"  class=\\\"badge badge-danger\\\"><i class=\\\"cui-trash icons font-2xl mt-4\\\"></i></a>\\n            </td>\\n          </tr>\\n          <tr>\\n            <td>1</td>\\n            <td>012</td>\\n            <td>2012/01/01</td>\\n            <td>Binod Singh</td>\\n            <td>+91-7875454515</td>\\n            <td>Jadavpur</td>\\n            <td>Golipure</td>\\n            <td>\\n              <span class=\\\"badge badge-success\\\">Active</span>\\n            </td>\\n            <td><a href=\\\"\\\" onclick=\\\"return confirm ('Do you want to edit ??')\\\" class=\\\"badge badge-primary\\\"><i class=\\\"cui-pencil icons font-2xl mt-4\\\"></i></a> &nbsp; \\n              <a href=\\\"\\\" onclick=\\\"return confirm ('Are you sure ??')\\\" class=\\\"badge badge-danger\\\"><i class=\\\"cui-trash icons font-2xl mt-4\\\"></i></a>\\n            </td>\\n          </tr>\\n          <tr>\\n            <td>1</td>\\n            <td>012</td>\\n            <td>2012/01/01</td>\\n            <td>Binod Singh</td>\\n            <td>+91-7875454515</td>\\n            <td>Jadavpur</td>\\n            <td>Golipure</td>\\n            <td>\\n              <span class=\\\"badge badge-success\\\">Active</span>\\n            </td>\\n            <td><a href=\\\"\\\" onclick=\\\"return confirm ('Do you want to edit ??')\\\" class=\\\"badge badge-primary\\\"><i class=\\\"cui-pencil icons font-2xl mt-4\\\"></i></a> &nbsp; \\n              <a href=\\\"\\\" onclick=\\\"return confirm ('Are you sure ??')\\\" class=\\\"badge badge-danger\\\"><i class=\\\"cui-trash icons font-2xl mt-4\\\"></i></a>\\n            </td>\\n          </tr>\\n         \\n        </tbody>\\n      </table>\\n    </div> <!------scrolling_div----->\\n\\n      <ul class=\\\"pagination\\\">\\n        <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">Prev</a></li>\\n        <li class=\\\"page-item active\\\">\\n          <a class=\\\"page-link\\\" href=\\\"#\\\">1</a>\\n        </li>\\n        <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">2</a></li>\\n        <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">3</a></li>\\n        <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">4</a></li>\\n        <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">Next</a></li>\\n      </ul>\\n    </div>\\n  </div>\\n</div>\\n\\n</div>\\n\\n\";","export default \"  <div class=\\\"animated fadeIn upper_space\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-12\\\">\\n\\n          \\n            <div class=\\\"card\\\">\\n              <div class=\\\"card-header\\\">\\n                <strong>Customer Information Details</strong>\\n               <!--small>Fill up The Form Below</small-->\\n              </div>\\n\\n\\n              <form id=\\\"customerAdd\\\" name=\\\"customerAdd\\\" (ngSubmit)=\\\"customerAdd.valid && onSubmit()\\\" >\\n                  <!----------First Section Body Start-->\\n                  \\n                  <div class=\\\"card-body\\\">\\n                    \\n                    <h2 class=\\\"local_class1\\\">Basic Information</h2>\\n                    <div class=\\\"basic_details\\\">\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col-sm-4\\\">\\n                        <div class=\\\"form-group\\\" >\\n                          <label for=\\\"name\\\">First Name</label>\\n                          <input class=\\\"form-control\\\" id=\\\"first_name\\\" placeholder=\\\"Enter your first name\\\" type=\\\"text\\\">\\n                        </div>\\n                      </div>\\n\\n                      <div class=\\\"col-sm-4\\\">\\n                        <div class=\\\"form-group\\\">\\n                          <label for=\\\"name\\\">Middle Name</label>\\n                          <input class=\\\"form-control\\\" id=\\\"middle_name\\\" placeholder=\\\"Enter your middle name\\\" type=\\\"text\\\">\\n                        </div>\\n                      </div>\\n\\n                      <div class=\\\"col-sm-4\\\">\\n                        <div class=\\\"form-group\\\">\\n                          <label for=\\\"name\\\">Last Name</label>\\n                          <input class=\\\"form-control\\\" id=\\\"last_name\\\" placeholder=\\\"Enter your last name\\\" type=\\\"text\\\">\\n                        </div>\\n                      </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n\\n                      <div class=\\\"col-sm-4\\\">\\n                        <div class=\\\"form-group\\\">\\n                          <label for=\\\"gender\\\">Gender</label>\\n                          <select id=\\\"gender\\\" name=\\\"gender\\\" class=\\\"form-control\\\">\\n                            <option value=\\\"0\\\">Please select</option>\\n                            <option value=\\\"1\\\">Male</option>\\n                            <option value=\\\"2\\\">Female</option>\\n                            <option value=\\\"3\\\">Others</option>\\n                          </select>\\n                  \\n                        </div>\\n                      </div>\\n\\n\\n                      <div class=\\\"col-sm-4\\\">\\n                        <div class=\\\"form-group\\\">\\n                          <label for=\\\"ccnumber\\\">Email</label>\\n                          <input type=\\\"email\\\" id=\\\"nf-email\\\" name=\\\"nf-email\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Email\\\" autocomplete=\\\"email\\\">\\n                  \\n                        </div>\\n                      </div>\\n                      <div class=\\\"col-sm-4\\\">\\n                        <div class=\\\"form-group\\\">\\n                          <label for=\\\"ccnumber\\\">Phone Number</label>\\n                          <input type=\\\"tel\\\" id=\\\"phone\\\" name=\\\"phone\\\" class=\\\"form-control\\\" placeholder=\\\"Enter phone number\\\" autocomplete=\\\"phone\\\">\\n                  \\n                        </div>\\n                      </div>\\n                    </div> <!------Basic Details Div-->\\n\\n                  </div>\\n                  \\n                   \\n\\n\\n                      \\n                \\n                \\n                    <!----------First Section Body End-->\\n\\n                      <!----------Second Section Body Start-->\\n                      \\n\\n                        \\n                      <h2 class=\\\"local_class1\\\">Address Details</h2>\\n                      <div class=\\\"basic_details\\\">\\n                          <div class=\\\"row\\\">\\n                            <div class=\\\"form-group col-sm-4\\\">\\n                              <label for=\\\"company\\\">House Number/ Flat Number</label>\\n                              <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"house_flat_number\\\" placeholder=\\\"Enter house or flat number\\\">\\n                            </div>\\n                            <div class=\\\"form-group col-sm-4\\\">\\n                              <label for=\\\"street\\\">Street Name</label>\\n                              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"street_name\\\" placeholder=\\\"Enter street name\\\">\\n                            </div>\\n\\n                            <div class=\\\"form-group col-sm-4\\\">\\n                              <label for=\\\"city\\\">Country</label>\\n                              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"country\\\" value=\\\"India\\\" readonly >\\n                          </div>\\n                          \\n                          </div>\\n                          <div class=\\\"row\\\">\\n                             \\n                              <div class=\\\"form-group col-sm-4\\\">\\n                                <label for=\\\"street\\\">State/ Region</label>\\n                                <!--input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"street_name\\\" placeholder=\\\"Enter state name\\\"-->\\n          \\n                                <select id=\\\"state\\\" name=\\\"state\\\" class=\\\"form-control\\\">\\n                                  <option value=\\\"0\\\">Please select</option>\\n                                  <option value=\\\"1\\\">Option #1</option>\\n                                  <option value=\\\"2\\\">Option #2</option>\\n                                  <option value=\\\"3\\\">Option #3</option>\\n                                </select>\\n                              </div>\\n\\n                              <div class=\\\"form-group col-sm-4\\\">\\n                                <label for=\\\"street\\\">City</label>\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"street_name\\\" placeholder=\\\"Enter city\\\">\\n                              </div>\\n\\n                              <div class=\\\"col-sm-4\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"city\\\">Postal Code/ Pin Code/ Zip Code</label>\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"postal_code\\\" placeholder=\\\"Enter postal code\\\">\\n                                  \\n                                </div>\\n                              </div>\\n                             \\n                            </div>\\n\\n                            </div><!------Basic Details Div-->\\n\\n                            \\n          \\n                           \\n          \\n                            \\n                       \\n\\n\\n                     \\n\\n                      <!----------Second Section Body End-->\\n\\n                    <!----------Third Section Body Start-->\\n                    <h2 class=\\\"local_class1\\\">Other Details</h2>\\n\\n                    <div class=\\\"basic_details\\\">\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"form-group col-sm-4 upload_sec\\\">\\n                          <label for=\\\"city\\\">Customer Image</label>\\n                          <input type=\\\"file\\\" class=\\\"form-control\\\" id=\\\"customer_image\\\" placeholder=\\\"\\\">\\n                      </div>\\n                      <div class=\\\"form-group col-sm-2 image_tag\\\">\\n                        <img alt=\\\"\\\" class=\\\"img-avatar\\\" src=\\\"assets/img/avatars/6.jpg\\\">\\n                    </div>\\n                      <div class=\\\"form-group col-sm-4\\\">\\n  \\n                      <label for=\\\"street\\\">Status</label>\\n                      <div class=\\\"col-md-9 col-form-label\\\">\\n                        <div class=\\\"form-check form-check-inline mr-1\\\">\\n                          <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"active_checkbox\\\" value=\\\"active\\\" checked>\\n                          <label class=\\\"form-check-label\\\" for=\\\"inline-checkbox1\\\">Active</label>\\n                        </div>\\n                        <div class=\\\"form-check form-check-inline mr-1\\\">\\n                          <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"inactive_checkbox\\\" value=\\\"inactive\\\">\\n                          <label class=\\\"form-check-label\\\" for=\\\"inline-checkbox2\\\">Inactive</label>\\n                        </div>\\n                      \\n                      </div>\\n\\n\\n                    </div>\\n                  \\n                      \\n  \\n                      </div>\\n  \\n\\n                    </div><!------Basic Details Div-->\\n\\n\\n                      <!----------Third Section Body End-->\\n\\n                \\n                    </div>\\n              <div class=\\\"card-footer buttons\\\">\\n                <button type=\\\"submit\\\" class=\\\"btn btn-sm btn-primary\\\"><i class=\\\"fa fa-dot-circle-o\\\"></i> Submit</button>\\n                <button type=\\\"reset\\\" class=\\\"btn btn-sm btn-danger\\\"><i class=\\\"fa fa-ban\\\"></i> Reset</button>\\n              </div>\\n              \\n            \\n</form>\\n\\n\\n\\n          </div>\\n\\n        </div>\\n    </div>\\n\\n\\n\\n   \\n     \\n\\n\\n\\n \\n   \";","export default \"<div class=\\\"animated fadeIn upper_space\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <strong>Product Details</strong>\\n\\n        </div>\\n\\n\\n        <div class=\\\"card-body\\\">\\n          <span class=\\\"pro_para\\\">Product Information</span>\\n\\n          <!--------First Div-->\\n          <app-productadd></app-productadd>\\n          <!------Basic Details Div1 End-->\\n\\n          <span class=\\\"pro_para\\\">Add Quantity</span>\\n          <!--------2nd Div Start-->\\n           <app-quantityadd></app-quantityadd>\\n          <!------Basic Details Div2 End-->\\n\\n\\n\\n\\n\\n        </div>\\n\\n\\n\\n\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\";","export default \"<!--------First Div-->\\n<form [formGroup]=\\\"productInfoForm\\\" (ngSubmit)=\\\"productInfo();\\\">\\n  <div class=\\\"basic_details\\\">\\n    <!---For_Edit Button-->\\n    <!--div class=\\\"row\\\">\\n      <div class=\\\"col-sm-12\\\">\\n        <div class=\\\"form-groups\\\">\\n          <button type=\\\"submit\\\" class=\\\"btn btn-sm btn-primary info_edit basic_label\\\" name=\\\"editbutton\\\"\\n            id=\\\"editbutton\\\" (click)=\\\"catShowHide()\\\">\\n            <i class=\\\"cui-pencil icons font-2xl mt-4\\\"></i></button>\\n\\n        </div>\\n      </div>\\n    </div-->\\n    <!---For_Edit Button-->\\n    <!----ALWAYS NAME AND ID SAME AS POST MAN KEY {{product_code}}-->\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-3\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"name\\\">Category Name<span class=\\\"star_class\\\">*</span></label>\\n          <select class=\\\"form-control\\\" name=\\\"categoryName\\\" id=\\\"categoryName\\\" (change)=\\\"changeCategory($event)\\\" \\n          formControlName=\\\"category_id\\\" ng-model=\\\"category_id\\\"\\n          [ngClass]=\\\"{ 'is-invalid': submitted && pval.category_id.errors }\\\">\\n            <option value=\\\"\\\">--Choose Category--</option>\\n            <option *ngFor=\\\"let category of categories\\\" [ngValue]=\\\"category.cat_id\\\">\\n              {{category.cat_name}}\\n            </option>\\n          </select>\\n\\n            <div *ngIf=\\\"submitted && pval.category_id.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"pval.category_id.errors.required\\\">\\n              <div class=\\\"error_msg\\\">Choose category </div>\\n            </div>\\n            </div>\\n\\n\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-sm-3\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"name\\\">Product Code</label>\\n          <input class=\\\"form-control\\\" id=\\\"product_code\\\" name=\\\"product_code\\\"  type=\\\"text\\\"\\n          formControlName='product_code' [(ngModel)]='product_code' placeholder=\\\"Product code\\\">\\n        </div>\\n      </div>\\n\\n\\n      <div class=\\\"col-sm-3\\\">\\n        <div class=\\\"form-group\\\" >\\n          <label for=\\\"ccnumber\\\">Product Name<span class=\\\"star_class\\\">*</span></label>\\n\\n          <input class=\\\"form-control\\\"  type=\\\"text\\\" id=\\\"product_name\\\" name=\\\"product_name\\\" \\n          formControlName=\\\"product_name\\\"\\n          placeholder=\\\"Product name\\\"  [(ngModel)]=\\\"product_name\\\"\\n          [ngClass]=\\\"{ 'is-invalid': submitted && pval.product_name.errors }\\\"/>\\n\\n            <div *ngIf=\\\"submitted && pval.product_name.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"pval.product_name.errors.required\\\">\\n              <div class=\\\"error_msg\\\"> Product Name is required</div>\\n            </div>\\n              \\n            </div>\\n\\n\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-sm-3\\\">\\n        <div class=\\\"form-group\\\" >\\n          <label for=\\\"name\\\">Brand Name<span class=\\\"star_class\\\">*</span></label>\\n          <!----Validation Start-->\\n          <input class=\\\"form-control\\\"  type=\\\"text\\\" id=\\\"product_brand_name\\\" name=\\\"product_brand_name\\\" \\n          formControlName=\\\"product_brand_name\\\"\\n          placeholder=\\\"Enter brand name\\\" [(ngModel)]=\\\"product_brand_name\\\"\\n          [ngClass]=\\\"{ 'is-invalid': submitted && pval.product_brand_name.errors }\\\"/>\\n\\n            <div *ngIf=\\\"submitted && pval.product_brand_name.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"pval.product_brand_name.errors.required\\\">\\n              <div class=\\\"error_msg\\\"> Product Name is required</div>\\n            </div>\\n              \\n            </div>\\n\\n          <!----Validation End-->\\n        </div>\\n      </div>\\n\\n\\n    </div>\\n\\n\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-12\\\">\\n        <div class=\\\"form-group\\\" >\\n          <label for=\\\"ccnumber\\\">Product Description<span class=\\\"star_class\\\">*</span></label>\\n\\n          \\n          <angular-editor id=\\\"product_details\\\" name=\\\"product_details\\\"\\n            formControlName=\\\"product_details\\\" [placeholder]=\\\"'Enter description here...'\\\"\\n            [(ngModel)]=\\\"product_details\\\" \\n            [ngClass]=\\\"{ 'is-invalid': submitted && pval.product_details.errors }\\\">\\n          </angular-editor>\\n          \\n          <div *ngIf=\\\"submitted && pval.product_details.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"pval.product_details.errors.required\\\">\\n              <div class=\\\"error_msg\\\"> Description is required(Max 400 - Min 4)</div>\\n            </div>\\n\\n            <div *ngIf=\\\"pval.product_details.errors.minLength\\\">\\n              <div class=\\\"error_msg\\\">Text length(Min 4)</div>\\n            </div>\\n              \\n            </div>\\n\\n         \\n\\n        </div>\\n      </div>\\n    </div>\\n\\n\\n\\n\\n    <div class=\\\"row\\\">\\n      \\n      <div class=\\\"form-group col-sm-3 \\\" >\\n        <label for=\\\"city\\\">Product Image<span class=\\\"star_class\\\">*</span></label>\\n\\n\\n        \\n        <input type=\\\"file\\\" class=\\\"form-control\\\" name=\\\"product_img\\\" id=\\\"product_img\\\" \\n        [(ngModel)]=\\\"product_img\\\" formControlName=\\\"product_img\\\"\\n          [ngClass]=\\\"{ 'is-invalid': submitted && pval.product_img.errors }\\\"\\n          (change)=\\\"preview(file.files)\\\" #file accept=\\\"image/*\\\" />\\n\\n          <div *ngIf=\\\"submitted && pval.product_img.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"pval.product_img.errors.required\\\">\\n              <div class=\\\"error_msg\\\"> product image is required</div>\\n            </div>\\n            </div>\\n\\n      </div>\\n      <div class=\\\"form-group col-sm-5 \\\">\\n        <img class=\\\"img-avatar fox\\\" *ngIf=\\\"imgURL\\\" [src]=\\\"imgURL\\\" width=\\\"100\\\" height=\\\"100\\\" />\\n      </div>\\n      \\n    </div>\\n    \\n    <div class=\\\"row button_row\\\">\\n      <div class=\\\"card-footer1 buttons\\\">\\n        <button type=\\\"submit\\\"  class=\\\"btn btn-sm btn-success\\\"><i\\n            class=\\\"fa fa-dot-circle-o\\\"></i> Submit</button>\\n      </div>\\n    </div>\\n\\n\\n  </div>\\n</form>\\n<!------Basic Details Div1 End-->\";","export default \"\\n<div class=\\\"animated fadeIn upper_space\\\">\\n\\n<div class=\\\"col-lg-12\\\">\\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-header\\\">\\n    \\n      <div class=\\\"row align-items-center\\\">\\n        <div class=\\\"col-md-3\\\">\\n          <i class=\\\"fa fa-align-justify\\\"></i> Product List\\n        </div>\\n        <div class=\\\"col-md-6 mb-3 mb-xl-0 input-group mb-3\\\">\\n          <div class=\\\"input-group-prepend\\\">\\n            <span class=\\\"input-group-text\\\"><i class=\\\"icon-magnifier\\\"></i></span>\\n          </div>\\n          \\n           <input class=\\\"form-control\\\" name=\\\"valuetosearch\\\" id=\\\"myInput\\\" placeholder=\\\"Search..\\\" type=\\\"text\\\">\\n        </div>\\n        \\n        <div class=\\\"col-md-3\\\">\\n          <button class=\\\"btn btn-block btn-success\\\" routerLink=\\\"/theme/product\\\" type=\\\"button\\\">Add Product</button>\\n        </div>\\n      </div>\\n\\n    </div>\\n    <!-----Product Information List-->\\n    <div class=\\\"card-body\\\">\\n    \\n      <div class=\\\"scrolling_div\\\">\\n\\n      <table class=\\\"table table-bordered\\\">\\n        <thead>\\n          <tr>\\n            <th>Sl.No</th>\\n            <th>Product Code </th>\\n            <th>Product Name</th>\\n            <th>Brand Name</th>\\n            <th>Price</th>\\n            <th colspan=2>Action</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor='let product of (productData$ | async);index as i'>\\n          <!--tr *ngFor='let product of prodata;index as i'-->\\n            <td>{{i+1}}</td>\\n            <td>{{product.productCode}}</td>\\n            <td>{{product.productName}}</td>\\n            <td>{{product.brandName}}</td>\\n            <td>{{product.price}}{{\\\" \\\"}}{{product.unit}}</td>\\n            <td>\\n              <button \\n              (click)=\\\"editProduct(product.id)\\\"\\n              class=\\\"badge badge-primary\\\"><i class=\\\"cui-pencil icons font-2xl mt-4\\\"></i></button> &nbsp; \\n\\n              <button \\n              class=\\\"badge badge-danger\\\" \\n              (click)=\\\"deleteProduct(product.id)\\\"\\n             \\n              ><i class=\\\"cui-trash icons font-2xl mt-4\\\"></i></button>\\n              <!------always use 'id' for State management Using NGRX  \\n----->\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div> <!------scrolling_div-- --->\\n\\n      <ul class=\\\"pagination\\\">\\n        <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">Prev</a></li>\\n        <li class=\\\"page-item active\\\">\\n          <a class=\\\"page-link\\\" href=\\\"#\\\">1</a>\\n        </li>\\n        <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">2</a></li>\\n        <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">3</a></li>\\n        <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">4</a></li>\\n        <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">Next</a></li>\\n      </ul>\\n    </div>\\n\\n    <!-----Product Information List End-->\\n\\n    <hr/>\\n<!-----Product Quantity List-->\\n    \\n    <!-----Product Quantity List End-->\\n  </div>\\n</div>\\n</div>\\n\";","export default \"<form [formGroup]=\\\"manageQtyForm\\\" (ngSubmit)=\\\"manageQty();\\\">\\n  <div class=\\\"basic_details\\\">\\n\\n    <!---For_Edit Button-->\\n    <!--div class=\\\"row\\\">\\n      <div class=\\\"col-sm-12\\\">\\n        <div class=\\\"form-groups\\\">\\n          <button type=\\\"submit\\\" class=\\\"btn btn-sm btn-primary info_edit basic_label\\\" name=\\\"editbutton\\\"\\n            id=\\\"editbutton\\\" (click)=\\\"basicShowHide()\\\">\\n            <i class=\\\"cui-pencil icons font-2xl mt-4\\\"></i></button>\\n\\n        </div>\\n      </div>\\n    </div-->\\n    <!---For_Edit Button-->\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-3 col-md-offset-1\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"ccnumber\\\">Existing Quantity</label>\\n          <label class=\\\"form-control\\\" name=\\\"qty_exist\\\" id=\\\"qty_exist\\\">1000</label>\\n\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-sm-3\\\">\\n        <div class=\\\"form-group\\\" >\\n          <label for=\\\"ccnumber\\\">Product Quantity<span class=\\\"star_class\\\">*</span></label>\\n          \\n          <!----Validation Start-->\\n          <input class=\\\"form-control\\\"  type=\\\"text\\\" id=\\\"quantity\\\" name=\\\"quantity\\\" formControlName=\\\"quantity\\\"\\n          placeholder=\\\"Enter quantity\\\" (keypress)=\\\"numberOnly($event)\\\" [(ngModel)]=\\\"quantity\\\" \\n          [ngClass]=\\\"{ 'is-invalid': isPasswordSubmitte && mval.quantity.errors }\\\"/>\\n\\n            <div *ngIf=\\\"isPasswordSubmitte && mval.quantity.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"mval.quantity.errors.required\\\">\\n              <div class=\\\"error_msg\\\"> Product quantity is required</div>\\n            </div>\\n              \\n            </div>\\n\\n          <!----Validation End-->\\n        </div>\\n      </div>\\n      \\n     \\n      \\n      <div class=\\\"col-sm-3\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"company\\\">Price<span class=\\\"star_class\\\">*</span> </label>\\n         \\n          <!----Validation Start-->\\n          <input class=\\\"form-control\\\"  type=\\\"text\\\" id=\\\"price\\\" name=\\\"price\\\" formControlName=\\\"price\\\"\\n          placeholder=\\\"Enter price\\\" [(ngModel)]=\\\"price\\\" (keypress)=\\\"numberDotOnly($event)\\\"\\n          [ngClass]=\\\"{ 'is-invalid': isPasswordSubmitte && mval.price.errors }\\\"/>\\n\\n            <div *ngIf=\\\"isPasswordSubmitte && mval.price.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"mval.price.errors.required\\\">\\n              <div class=\\\"error_msg\\\">Product price is required</div>\\n            </div>\\n              \\n            </div>\\n\\n          <!----Validation End-->\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-sm-3\\\">\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"name\\\">Selling Unit<span class=\\\"star_class\\\">*</span></label>\\n          <select class=\\\"form-control\\\" (change)=\\\"changeUnit($event)\\\" \\n          formControlName=\\\"sellingUnitId\\\" ng-Model=\\\"sellunit\\\" name=\\\"sellunit\\\"\\n          [ngClass]=\\\"{ 'is-invalid': isPasswordSubmitte && mval.sellingUnitId.errors }\\\">\\n            <option value=\\\"\\\">--Choose Unit--</option>\\n            <!--option *ngFor=\\\"let sellunit of sellunits\\\" [ngValue]=\\\"sellunit\\\">{{sellunit}}</option-->\\n            <option *ngFor=\\\"let sellunit of sellingUnits\\\" [ngValue]=\\\"sellunit.su_id\\\">{{sellunit.unit}}</option>\\n            <!---'su_id' and 'unit' taken from db table--->\\n          </select>\\n\\n            <div *ngIf=\\\"isPasswordSubmitte && mval.sellingUnitId.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"mval.sellingUnitId.errors.required\\\">\\n              <div class=\\\"error_msg\\\">Choose unit</div>\\n            </div>\\n            </div>\\n\\n\\n        </div>\\n\\n      </div>\\n\\n    </div>\\n\\n \\n\\n    <div class=\\\"row button_row\\\">\\n      <div class=\\\"card-footer1 buttons\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-sm btn-success\\\"><i class=\\\"fa fa-dot-circle-o\\\"></i>\\n          Submit</button>\\n      </div>\\n    </div>\\n\\n  </div>\\n</form>\";","export default \"<div class=\\\"animated fadeIn upper_space\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <strong>Reset Password</strong>\\n\\n        </div>\\n\\n\\n        <div class=\\\"card-body\\\">\\n          \\n          <!--------3nd Div Start-->\\n          <form [formGroup]=\\\"resetPassForm\\\" (ngSubmit)=\\\"resetPass();\\\">\\n            <div class=\\\"basic_details admin_reset_pass\\\">\\n        \\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-6 mx-auto\\\">\\n                  \\n                    \\n                      <div class=\\\"form-group\\\">\\n                        <label>Old Password<span class=\\\"star_class\\\">*</span></label>\\n                        <div class=\\\"input-group mb-3\\\">\\n                          <input [type]=\\\"oldTextType ? 'text' : 'password'\\\" class=\\\"form-control\\\" id=\\\"old_pass\\\"\\n                            name=\\\"old_pass\\\" formControlName=\\\"oldPass\\\"  placeholder=\\\"Enter old password\\\"\\n                            [(ngModel)]=\\\"first_name\\\" appProtectedfield maxlength=\\\"10\\\" minlength=\\\"10\\\"\\n                            [ngClass]=\\\"{ 'is-invalid': isPasswordSubmitte && passVal.oldPass.errors }\\\" />\\n        \\n                          <!---------------Password Show Hide-->\\n                          <div class=\\\"input-group-append\\\">\\n                            <span class=\\\"input-group-text\\\">\\n                              <i class=\\\"fa\\\" [ngClass]=\\\"{\\n                            'fa-eye-slash': !oldTextType,\\n                            'fa-eye': oldTextType }\\\" (click)=\\\"toggleOldTextType()\\\"></i>\\n                            </span>\\n                          </div>\\n                          <!---------------Password Show Hide end-->\\n        \\n                          <div *ngIf=\\\"isPasswordSubmitte && passVal.oldPass.errors\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"passVal.oldPass.errors.required\\\" >\\n                              <div class=\\\"error_msg\\\">Old password is required</div>\\n                            </div>\\n                            <div *ngIf=\\\"passVal.oldPass.errors.pattern\\\" >\\n                              <div class=\\\"error_msg\\\">  First is upper case</div>\\n                            </div>\\n                            <div *ngIf=\\\"passVal.oldPass.errors.pattern\\\" >\\n                              <div class=\\\"error_msg\\\"> Next is number & character(1, 2, @)</div>\\n                                <div class=\\\"error_msg\\\">  (eg. Local2@code)</div>\\n                            </div>\\n                          </div>\\n        \\n                        </div>\\n        \\n                      </div>\\n        \\n        \\n        \\n                      <div class=\\\"form-group\\\">\\n                        <label>New Password<span class=\\\"star_class\\\">*</span></label>\\n        \\n                        <!----Validation Start-->\\n                        <div class=\\\"input-group mb-3\\\">\\n                          <input [type]=\\\"newTextType ? 'text' : 'password'\\\" class=\\\"form-control\\\" id=\\\"new_pass\\\"\\n                            name=\\\"new_pass\\\" formControlName=\\\"newPass\\\" placeholder=\\\"Enter new password\\\"\\n                            [(ngModel)]=\\\"new_pass\\\" appProtectedfield maxlength=\\\"10\\\" minlength=\\\"10\\\"\\n                            [ngClass]=\\\"{ 'is-invalid': isPasswordSubmitte && passVal.newPass.errors }\\\" />\\n                            \\n                          <!---------------Password Show Hide-->\\n                          <div class=\\\"input-group-append\\\">\\n                            <span class=\\\"input-group-text\\\">\\n                              <i class=\\\"fa\\\" [ngClass]=\\\"{\\n                            'fa-eye-slash': !newTextType,\\n                            'fa-eye': newTextType }\\\" (click)=\\\"toggleNewTextType()\\\"></i>\\n                            </span>\\n                          </div>\\n                          <!---------------Password Show Hide end-->\\n        \\n                          <div *ngIf=\\\"isPasswordSubmitte && passVal.newPass.errors\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"passVal.newPass.errors.required\\\" >\\n                              <div class=\\\"error_msg\\\">New password is required</div>\\n                            </div>\\n                            <div *ngIf=\\\"passVal.newPass.errors.pattern\\\" >\\n                              <div class=\\\"error_msg\\\">  First is upper case</div>\\n                            </div>\\n                            <div *ngIf=\\\"passVal.newPass.errors.pattern\\\" >\\n                              <div class=\\\"error_msg\\\"> Next is number & character(1, 2, @)</div>\\n                                <div class=\\\"error_msg\\\">  (eg. Local2@code)</div>\\n                            </div>\\n                          </div>\\n                        </div>\\n                        <!----Validation End-->\\n        \\n                      </div>\\n        \\n                      <div class=\\\"form-group\\\">\\n                        <label>Confirm Password<span class=\\\"star_class\\\">*</span> </label>\\n        \\n                        <!----Validation Start-->\\n                        <div class=\\\"input-group mb-3\\\">\\n                          <input [type]=\\\"confirmTextType ? 'text' : 'password'\\\" class=\\\"form-control\\\" id=\\\"confirm_pass\\\"\\n                            name=\\\"confirm_pass\\\" formControlName=\\\"confirmPass\\\" placeholder=\\\"Enter confirm password\\\"\\n                            maxlength=\\\"10\\\" minlength=\\\"10\\\"\\n                            [(ngModel)]=\\\"confirm_pass\\\" appConfirmEqualValidatorDirective=\\\"newPass\\\" appProtectedfield\\n                            [ngClass]=\\\"{ 'is-invalid': isPasswordSubmitte && passVal.confirmPass.errors }\\\" />\\n        \\n                          <!---------------Password Show Hide-->\\n                          <div class=\\\"input-group-append\\\">\\n                            <span class=\\\"input-group-text\\\">\\n                              <i class=\\\"fa\\\" [ngClass]=\\\"{\\n                            'fa-eye-slash': !confirmTextType,\\n                            'fa-eye': confirmTextType\\n                          }\\\" (click)=\\\"toggleConfirmTextType()\\\"></i>\\n                            </span>\\n                          </div>\\n                          <!---------------Password Show Hide end-->\\n        \\n                          <div *ngIf=\\\"isPasswordSubmitte && passVal.confirmPass.errors\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"passVal.confirmPass.errors.required\\\" >\\n                              <div class=\\\"error_msg\\\">Confirm password is required</div>\\n                            </div>\\n                            <div *ngIf=\\\"passVal.confirmPass.errors.pattern\\\" >\\n                              <div class=\\\"error_msg\\\">Password pattern must be same</div>\\n                            </div>\\n                            <div *ngIf=\\\"passVal.confirmPass.errors.notEqual\\\" >\\n                              <div class=\\\"error_msg\\\">New & Confirm Password does not match</div>\\n                            </div>\\n        \\n                          </div>\\n                        </div>\\n                        <!----Validation End-->\\n                      </div>\\n        \\n                      <div class=\\\"row button_row\\\">\\n                        <div class=\\\"card-footer1 buttons\\\">\\n                          <button type=\\\"submit\\\" class=\\\"btn btn-sm btn-success\\\"><i class=\\\"fa fa-dot-circle-o\\\"></i>\\n                            Submit</button>\\n                        </div>\\n                      </div>\\n                  \\n                </div>\\n        \\n        \\n        \\n        \\n              </div>\\n        \\n        \\n        \\n              \\n        \\n            </div>\\n          </form>\\n          <!------Basic Details Div3 End-->\\n\\n\\n        </div>\\n\\n\\n\\n\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\";","export default \"<div class=\\\"animated fadeIn upper_space\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <strong>Settings Information</strong>\\n\\n        </div>\\n\\n\\n        <div class=\\\"card-body\\\">\\n\\n          <!--------2nd Div Start-->\\n          <form [formGroup]=\\\"socialInfoForm\\\" (ngSubmit)=\\\"socialInfo();\\\">\\n            <div class=\\\"basic_details\\\">\\n\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-3 col-md-offset-1\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label>Address<span class=\\\"star_class\\\">*</span></label>\\n                    <input class=\\\"form-control\\\" type=\\\"text\\\" id=\\\"address\\\" name=\\\"address\\\"\\n                      formControlName=\\\"address\\\" placeholder=\\\"Enter address\\\" [(ngModel)]=\\\"address\\\"\\n                      [ngClass]=\\\"{ 'is-invalid': submitted && socialVal.address.errors }\\\" />\\n\\n                    <div *ngIf=\\\"submitted && socialVal.address.errors\\\" class=\\\"invalid-feedback\\\">\\n                      <div *ngIf=\\\"socialVal.address.errors.required\\\">\\n                        <div class=\\\"error_msg\\\"> Address is required</div>\\n                      </div>\\n\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-sm-3\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label >Support Email<span class=\\\"star_class\\\">*</span></label>\\n\\n                    <!----Validation Start-->\\n                    <input class=\\\"form-control\\\" type=\\\"text\\\" id=\\\"email\\\" name=\\\"email\\\" formControlName=\\\"email\\\"\\n                      placeholder=\\\"Enter support email\\\" [(ngModel)]=\\\"email\\\"\\n                      [ngClass]=\\\"{ 'is-invalid': submitted && socialVal.email.errors }\\\" />\\n\\n                    <div *ngIf=\\\"submitted && socialVal.email.errors\\\" class=\\\"invalid-feedback\\\">\\n                      <div *ngIf=\\\"socialVal.email.errors.required\\\">\\n                        <div class=\\\"error_msg\\\"> Email is required</div>\\n                      </div>\\n                      <div *ngIf=\\\"socialVal.email.errors.pattern\\\" >\\n                        <div class=\\\"error_msg\\\">Type valid email</div>\\n                      </div>\\n\\n                    </div>\\n\\n                    <!----Validation End-->\\n                  </div>\\n                </div>\\n\\n\\n\\n                <div class=\\\"col-sm-3\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label >Primary Phone<span class=\\\"star_class\\\">*</span> </label>\\n\\n                    <!----Validation Start-->\\n                    <input class=\\\"form-control\\\" type=\\\"text\\\" id=\\\"supportPhone\\\" name=\\\"supportPhone\\\" formControlName=\\\"supportPhone\\\"\\n                      placeholder=\\\"Enter phone\\\" [(ngModel)]=\\\"supportPhone\\\" maxlength=\\\"10\\\" minlength=\\\"10\\\"\\n                      (keypress)=\\\"numberOnly($event)\\\"\\n                      [ngClass]=\\\"{ 'is-invalid': submitted && socialVal.supportPhone.errors }\\\" />\\n\\n                    <div *ngIf=\\\"submitted && socialVal.supportPhone.errors\\\" class=\\\"invalid-feedback\\\">\\n                      <div *ngIf=\\\"socialVal.supportPhone.errors.required\\\">\\n                        <div class=\\\"error_msg\\\">phone is required</div>\\n                      </div>\\n                      <div *ngIf=\\\"socialVal.supportPhone.errors.pattern\\\">\\n                        <div class=\\\"error_msg\\\">Type valid phone number</div>\\n                      </div>\\n\\n                    </div>\\n\\n                    <!----Validation End-->\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-sm-3\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label >Alternative Phone</label>\\n\\n                    <!----Validation Start-->\\n                    <input class=\\\"form-control\\\" type=\\\"text\\\" id=\\\"altPhone\\\" name=\\\"altPhone\\\"\\n                     formControlName=\\\"altPhone\\\"\\n                      placeholder=\\\"Enter phone\\\" [(ngModel)]=\\\"altPhone\\\" maxlength=\\\"10\\\" minlength=\\\"10\\\"\\n                      (keypress)=\\\"numberOnly($event)\\\"\\n                      [ngClass]=\\\"{ 'is-invalid': submitted && socialVal.altPhone.errors }\\\" />\\n\\n                    <div *ngIf=\\\"submitted && socialVal.altPhone.errors\\\" class=\\\"invalid-feedback\\\">\\n                      <!--div *ngIf=\\\"socialVal.altPhone.errors.required\\\">\\n                        <div class=\\\"error_msg\\\">phone is required</div>\\n                      </div-->\\n                      <div *ngIf=\\\"socialVal.altPhone.errors.pattern\\\">\\n                        <div class=\\\"error_msg\\\">Type valid phone number</div>\\n                      </div>\\n\\n                    </div>\\n\\n                    <!----Validation End-->\\n                  </div>\\n                </div>\\n\\n\\n\\n              </div>\\n\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-3 col-md-offset-1\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label >Facebook </label>\\n\\n                    <!----Validation Start-->\\n                    <input class=\\\"form-control\\\" type=\\\"text\\\" id=\\\"facebookUrl\\\" name=\\\"facebookUrl\\\" formControlName=\\\"facebookUrl\\\"\\n                      placeholder=\\\"Enter facebook url\\\" [(ngModel)]=\\\"facebook_url\\\" \\n                      \\n                      [ngClass]=\\\"{ 'is-invalid': submitted && socialVal.facebookUrl.errors }\\\" />\\n\\n                    <div *ngIf=\\\"submitted && socialVal.facebookUrl.errors\\\" class=\\\"invalid-feedback\\\">\\n                      <!--div *ngIf=\\\"socialVal.facebookUrl.errors.required\\\">\\n                        <div class=\\\"error_msg\\\">Facebook is required</div>\\n                      </div-->\\n\\n                    </div>\\n\\n                    <!----Validation End-->\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-sm-3 \\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label >Twitter </label>\\n\\n                    <!----Validation Start-->\\n                    <input class=\\\"form-control\\\" type=\\\"text\\\" id=\\\"twitterUrl\\\" name=\\\"twitterUrl\\\" formControlName=\\\"twitterUrl\\\"\\n                      placeholder=\\\"Enter twitter url\\\" [(ngModel)]=\\\"twitterUrl\\\" \\n                      \\n                      [ngClass]=\\\"{ 'is-invalid': submitted && socialVal.twitterUrl.errors }\\\" />\\n\\n                    <div *ngIf=\\\"submitted && socialVal.twitterUrl.errors\\\" class=\\\"invalid-feedback\\\">\\n                      <!--div *ngIf=\\\"socialVal.twitterUrl.errors.required\\\">\\n                        <div class=\\\"error_msg\\\">Twitter is required</div>\\n                      </div-->\\n\\n                    </div>\\n\\n                    <!----Validation End-->\\n                  </div>\\n                </div>\\n\\n               \\n\\n                <div class=\\\"col-sm-3 \\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label >Youtube </label>\\n\\n                    <!----Validation Start-->\\n                    <input class=\\\"form-control\\\" type=\\\"text\\\" id=\\\"youtubeUrl\\\" name=\\\"youtubeUrl\\\" formControlName=\\\"youtubeUrl\\\"\\n                      placeholder=\\\"Enter youtube url\\\" [(ngModel)]=\\\"youtubeUrl\\\" \\n                      \\n                      [ngClass]=\\\"{ 'is-invalid': submitted && socialVal.youtubeUrl.errors }\\\" />\\n\\n                    <div *ngIf=\\\"submitted && socialVal.youtubeUrl.errors\\\" class=\\\"invalid-feedback\\\">\\n                      <!--div *ngIf=\\\"socialVal.youtubeUrl.errors.required\\\">\\n                        <div class=\\\"error_msg\\\">Youtube is required</div>\\n                      </div-->\\n\\n                    </div>\\n\\n                    <!----Validation End-->\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"col-sm-3 \\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label >Instagram</label>\\n\\n                    \\n                    <input class=\\\"form-control\\\" type=\\\"text\\\" id=\\\"instagramUrl\\\" name=\\\"instagramUrl\\\" \\n                      placeholder=\\\"Enter instagram url\\\" formControlName=\\\"instagramUrl\\\" [(ngModel)]=\\\"instagramUrl\\\"  />\\n\\n                   \\n                  </div>\\n                </div>\\n\\n\\n              </div>\\n\\n\\n\\n              <div class=\\\"row button_row\\\">\\n                <div class=\\\"card-footer1 buttons\\\">\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-sm btn-success\\\"><i class=\\\"fa fa-dot-circle-o\\\"></i>\\n                    Submit</button>\\n                </div>\\n              </div>\\n\\n            </div>\\n          </form>\\n          <!------Basic Details Div2 End-->\\n\\n\\n        </div>\\n\\n\\n\\n\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\";","export default \"<span class=\\\"pro_para\\\">Shop Address Details</span>\\n<div class=\\\"basic_details shopper_details\\\">\\n    <!---For_Edit Button-->\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-12\\\">\\n            <div class=\\\"form-groups\\\">\\n                <button type=\\\"submit\\\" class=\\\"btn btn-sm btn-primary info_edit address_pencil\\\" name=\\\"editbutton\\\"\\n                    id=\\\"editbutton\\\" (click)=\\\"addressShowHide()\\\">\\n                    <i class=\\\"cui-pencil icons font-2xl mt-4\\\"></i></button>\\n\\n            </div>\\n        </div>\\n    </div>\\n    <!---For_Edit Button-->\\n    <form [formGroup]=\\\"addressInfoForm\\\" (ngSubmit)=\\\"addressInfo();\\\">\\n\\n\\n        <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-sm-4\\\">\\n                <label for=\\\"company\\\">Shop Name<span class=\\\"star_class\\\">*</span></label>\\n                <!----Validation Start-->\\n                <input type=\\\"text\\\" placeholder=\\\"Enter shop name\\\" class=\\\"form-control address_input\\\" id=\\\"shop_name\\\"\\n                    formControlName=\\\"shopName\\\" name=\\\"shop_name\\\" [(ngModel)]=\\\"shop_name\\\"\\n                    [ngClass]=\\\"{ 'is-invalid': addressSubmitted && addressVal.shopName.errors }\\\" />\\n\\n\\n                <div *ngIf=\\\"addressSubmitted && addressVal.shopName.errors\\\" class=\\\"invalid-feedback\\\">\\n                    <div *ngIf=\\\"addressVal.shopName.errors.required\\\">\\n                        <div class=\\\"error_msg\\\"> Shop Name is required</div>\\n                    </div>\\n                </div>\\n                <!----Validation End-->\\n\\n            </div>\\n            <div class=\\\"form-group col-sm-4\\\">\\n                <label for=\\\"street\\\">Street Name<span class=\\\"star_class\\\">*</span></label>\\n\\n\\n                <input type=\\\"text\\\" placeholder=\\\"Enter street name\\\" class=\\\"form-control address_input\\\" id=\\\"street\\\"\\n                    [(ngModel)]=\\\"street\\\" formControlName=\\\"streetName\\\"\\n                    [ngClass]=\\\"{'is-invalid' : addressSubmitted && addressVal.streetName.errors}\\\" />\\n                <div *ngIf=\\\"addressSubmitted && addressVal.streetName.errors\\\" class=\\\"invalid-feedback\\\">\\n                    <div *ngIf=\\\"addressVal.streetName.errors.required\\\">\\n                        <div class=\\\"error_msg\\\"> Street Name is required</div>\\n                    </div>\\n\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-sm-4\\\">\\n                <label for=\\\"country\\\">Country<span class=\\\"star_class\\\">*</span></label>\\n\\n                <select name=\\\"country\\\" id=\\\"country\\\" (change)=\\\"changeCountryVal($event)\\\" formControlName=\\\"countryName\\\"\\n                    class=\\\"form-control address_input\\\" ng-model=\\\"country\\\"\\n                    [ngClass]=\\\"{ 'is-invalid': addressSubmitted && addressVal.countryName.errors }\\\">\\n                    <option value=\\\"\\\">---Please select---</option>\\n                    <option *ngFor=\\\"let country of countries\\\" [ngValue]=\\\"country.c_id\\\">{{country.country}}</option>\\n                </select>\\n                <div *ngIf=\\\"addressSubmitted && addressVal.countryName.errors\\\" class=\\\"invalid-feedback\\\">\\n                    <div *ngIf=\\\"addressVal.countryName.errors.required\\\">\\n                        <div class=\\\"error_msg\\\">Choose your country </div>\\n                    </div>\\n                </div>\\n\\n            </div>\\n\\n        </div>\\n        <div class=\\\"row\\\">\\n\\n            <div class=\\\"form-group col-sm-4\\\">\\n                <label for=\\\"State\\\">State<span class=\\\"star_class\\\">*</span></label>\\n\\n\\n                <select name=\\\"state\\\" id=\\\"state\\\" ng-model=\\\"state\\\" class=\\\"form-control address_input\\\"\\n                    (change)=\\\"changeState($event)\\\" formControlName=\\\"stateName\\\"\\n                    [ngClass]=\\\"{ 'is-invalid': addressSubmitted && addressVal.stateName.errors }\\\">\\n                    <option value=\\\"\\\">---Please select---</option>\\n                    <option *ngFor=\\\"let state of states\\\" [ngValue]=\\\"state.s_id\\\">{{state.state}}</option>\\n                </select>\\n\\n\\n                <div *ngIf=\\\"addressSubmitted && addressVal.stateName.errors\\\" class=\\\"invalid-feedback\\\">\\n                    <div *ngIf=\\\"addressVal.stateName.errors.required\\\">\\n                        <div class=\\\"error_msg\\\"> State is required</div>\\n                    </div>\\n\\n                </div>\\n\\n            </div>\\n\\n            <div class=\\\"form-group col-sm-4\\\">\\n                <label for=\\\"street\\\">City<span class=\\\"star_class\\\">*</span></label>\\n\\n\\n                <input type=\\\"text\\\" placeholder=\\\"Enter city name\\\" class=\\\"form-control address_input\\\" id=\\\"city\\\"\\n                    [(ngModel)]=\\\"city\\\" formControlName=\\\"cityName\\\"\\n                    [ngClass]=\\\"{ 'is-invalid': addressSubmitted && addressVal.cityName.errors }\\\" />\\n\\n                <div *ngIf=\\\"addressSubmitted && addressVal.cityName.errors\\\" class=\\\"invalid-feedback\\\">\\n                    <div *ngIf=\\\"addressVal.cityName.errors.required\\\">\\n                        <div class=\\\"error_msg\\\"> City is required</div>\\n                    </div>\\n\\n                </div>\\n\\n            </div>\\n\\n            <div class=\\\"col-sm-4\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"city\\\">Postal/ Pin/ Zip<span class=\\\"star_class\\\">*</span></label>\\n\\n                    <input type=\\\"text\\\" name=\\\"zip\\\" placeholder=\\\"Enter zip code\\\" class=\\\"form-control address_input\\\"\\n                        [(ngModel)]=\\\"zip\\\" formControlName=\\\"zipCode\\\"\\n                        [ngClass]=\\\"{ 'is-invalid': addressSubmitted && addressVal.zipCode.errors }\\\" />\\n\\n                    <div *ngIf=\\\"addressSubmitted && addressVal.zipCode.errors\\\" class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"addressVal.zipCode.errors.required\\\">\\n                            <div class=\\\"error_msg\\\"> Pin code is required</div>\\n                        </div>\\n                        <div *ngIf=\\\"addressVal.zipCode.errors.pattern\\\">\\n                            <div class=\\\"error_msg\\\">Type valid pin code</div>\\n                        </div>\\n\\n                    </div>\\n                </div>\\n            </div>\\n\\n        </div>\\n        <!-----------Buttons start-->\\n\\n        <button class=\\\"btn btn-sm btn-primary button_edit address_btn\\\" type=\\\"submit\\\">\\n            <i class=\\\"fa fa-dot-circle-o\\\"></i>&nbsp;Save\\n        </button>\\n        <!-----------Buttons end-->\\n    </form>\\n</div>\";","export default \"<span class=\\\"pro_para\\\">Basic Information</span>\\n\\n<div class=\\\"basic_details shopper_details\\\">\\n    <!---For_Edit Button-->\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-12\\\">\\n            <div class=\\\"form-groups\\\">\\n                <button type=\\\"submit\\\" class=\\\"btn btn-sm btn-primary info_edit basic_pencil\\\" name=\\\"editbutton\\\"\\n                    id=\\\"editbutton\\\" (click)=\\\"basicShowHide()\\\">\\n                    <i class=\\\"cui-pencil icons font-2xl mt-4\\\"></i></button>\\n\\n            </div>\\n        </div>\\n    </div>\\n    <!---For_Edit Button-->\\n    <form id=\\\"basicInfo\\\" name=\\\"basicInfo\\\" [formGroup]=\\\"basicInfoForm\\\" (ngSubmit)=\\\"basicInfo()\\\">\\n\\n\\n\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-4\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label>First Name<span class=\\\"star_class\\\">*</span></label>\\n\\n                    <!----Validation Start-->\\n\\n                    <input class=\\\"form-control basic_input\\\" type=\\\"text\\\" placeholder=\\\"Enter first name\\\" id=\\\"f_name\\\"\\n                        formControlName=\\\"firstName\\\" [(ngModel)]=\\\"f_name\\\"\\n                        [ngClass]=\\\"{ 'is-invalid': submitted && basicVal.firstName.errors }\\\" />\\n\\n\\n                    <div *ngIf=\\\"submitted && basicVal.firstName.errors\\\" class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"basicVal.firstName.errors.required\\\">\\n                            <div class=\\\"error_msg\\\"> First Name is required</div>\\n                        </div>\\n\\n                    </div>\\n\\n                    <!----Validation End-->\\n\\n                </div>\\n            </div>\\n\\n            <div class=\\\"col-sm-4\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label>Middle Name(Optional)</label>\\n\\n                    <input type=\\\"text\\\" class=\\\"form-control basic_input\\\" [(ngModel)]=\\\"m_name\\\" name=\\\"m_name\\\" id=\\\"m_name\\\"\\n                        formControlName=\\\"middleName\\\" placeholder=\\\"Enter middle name\\\">\\n\\n                    <!----Validation Start-->\\n\\n\\n                    <!----Validation End-->\\n                </div>\\n            </div>\\n\\n            <div class=\\\"col-sm-4\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"name\\\">Last Name<span class=\\\"star_class\\\">*</span></label>\\n\\n                    <input type=\\\"text\\\" placeholder=\\\"Enter last name\\\" class=\\\"form-control basic_input\\\" id=\\\"l_name\\\"\\n                        formControlName=\\\"lastName\\\" [(ngModel)]=\\\"l_name\\\"\\n                        [ngClass]=\\\"{ 'is-invalid': submitted && basicVal.lastName.errors }\\\" />\\n\\n\\n                    <div *ngIf=\\\"submitted && basicVal.lastName.errors\\\" class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"basicVal.lastName.errors.required\\\">\\n                            <div class=\\\"error_msg\\\"> Last Name is required</div>\\n                        </div>\\n                    </div>\\n\\n\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n\\n            <div class=\\\"col-sm-4\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"gender\\\">Gender<span class=\\\"star_class\\\">*</span></label>\\n\\n\\n\\n                    <select id=\\\"gender\\\" class=\\\"form-control basic_input\\\" id=\\\"gender\\\" ng-Model=\\\"gender\\\"\\n                        (change)=\\\"changeGender($event)\\\" formControlName=\\\"genderName\\\"\\n                        [ngClass]=\\\"{ 'is-invalid': submitted && basicVal.genderName.errors }\\\">\\n                        <option value=\\\"\\\"> ---Select Gender---</option>\\n                        <option [ngValue]=\\\"gender\\\" *ngFor=\\\"let gender of genders\\\"> {{gender}}</option>\\n                    </select>\\n                    <div *ngIf=\\\"submitted && basicVal.genderName.errors\\\" class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"basicVal.genderName.errors.required\\\">\\n                            <div class=\\\"error_msg\\\"> Gender is required</div>\\n                        </div>\\n                    </div>\\n\\n\\n                </div>\\n            </div>\\n\\n\\n            <div class=\\\"col-sm-4\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"ccnumber\\\">Email(Optional)</label>\\n\\n                    <input type=\\\"text\\\" placeholder=\\\"Enter valid email\\\" class=\\\"form-control basic_input\\\" id=\\\"email\\\"\\n                        [(ngModel)]=\\\"email\\\" formControlName=\\\"Email\\\"\\n                        [ngClass]=\\\"{'is-invalid': submitted && basicVal.Email.errors}\\\" />\\n                    <div *ngIf=\\\"submitted && basicVal.Email.errors\\\" class=\\\"invalid-feedback\\\">\\n\\n                        <div *ngIf=\\\"basicVal.Email.errors.pattern\\\">\\n                            <div class=\\\"error_msg\\\"> Type valid email</div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"col-sm-4\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"ccnumber\\\">Phone Number<span class=\\\"star_class\\\">*</span></label>\\n\\n\\n\\n                    <input type=\\\"text\\\" placeholder=\\\"Enter phone number\\\" class=\\\"form-control basic_input\\\" id=\\\"phone\\\"\\n                        [(ngModel)]=\\\"phone\\\" formControlName=\\\"phoneNumber\\\" minlength=\\\"10\\\" maxLength=\\\"10\\\"\\n                        [ngClass]=\\\"{'is-invalid': submitted && basicVal.phoneNumber.errors}\\\" />\\n                    <div *ngIf=\\\"submitted && basicVal.phoneNumber.errors\\\" class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"basicVal.phoneNumber.errors.required\\\">\\n                            <div class=\\\"error_msg\\\"> Phone is required</div>\\n                        </div>\\n                        <div *ngIf=\\\"basicVal.phoneNumber.errors.pattern\\\">\\n                            <div class=\\\"error_msg\\\"> Type valid Phone number</div>\\n                        </div>\\n                    </div>\\n\\n                </div>\\n            </div>\\n        </div>\\n        <!------Basic Details Div-->\\n        <!-----------Buttons start-->\\n\\n        <button class=\\\"btn btn-sm btn-primary button_edit basic_btn\\\" type=\\\"submit\\\">\\n            <i class=\\\"fa fa-dot-circle-o\\\"></i>&nbsp;Save\\n        </button>\\n        <!-----------Buttons end-->\\n\\n    </form>\\n</div>\\n<!----------First_Section Body End-->\";","export default \"<div class=\\\"animated fadeIn upper_space\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12\\\">\\n\\n\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <strong>Shopper Information Details</strong> &nbsp;&nbsp;&nbsp;\\n\\n        </div>\\n        <div class=\\\"card-body\\\">\\n\\n          <app-basicinfo></app-basicinfo>\\n\\n          <app-addressinfo></app-addressinfo>\\n\\n          <app-othersinfo></app-othersinfo>\\n\\n        </div>\\n\\n      </div>\\n\\n    </div>\\n  </div>\";","export default \"<span class=\\\"pro_para\\\">Other Details</span>\\n\\n<div class=\\\"basic_details shopper_details\\\">\\n    <!---For_Edit Button-->\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-12\\\">\\n            <div class=\\\"form-groups\\\">\\n                <button type=\\\"submit\\\" class=\\\"btn btn-sm btn-primary info_edit image_label\\\" name=\\\"editbutton\\\"\\n                    id=\\\"editbutton\\\" (click)=\\\"imageShowHide()\\\">\\n                    <i class=\\\"cui-pencil icons font-2xl mt-4\\\"></i></button>\\n\\n            </div>\\n        </div>\\n    </div>\\n    <!---For_Edit Button-->\\n    <form id=\\\"imageInfo\\\" name=\\\"imageInfo\\\" [formGroup]=\\\"imageInfoForm\\\" (ngSubmit)=\\\"imageInfo()\\\">\\n\\n        <div class=\\\"row\\\">\\n\\n\\n\\n\\n            <div class=\\\"form-group col-sm-2 upload_sec\\\">\\n                <label for=\\\"city\\\">Shop Image<span class=\\\"star_class\\\">*</span></label>\\n\\n                <!----Validation Start-->\\n                <input type=\\\"file\\\" class=\\\"form-control image_edit\\\" id=\\\"shop_image\\\" [(ngModel)]=\\\"shop_image\\\"\\n                    formControlName=\\\"shopImage\\\" [ngClass]=\\\"{ 'is-invalid': imageSubmitted && imgVal.shopImage.errors }\\\"\\n                    (change)=\\\"shopPreview(shopfile.files)\\\" #shopfile accept=\\\"image/*\\\" />\\n\\n                <div *ngIf=\\\"imageSubmitted && imgVal.shopImage.errors\\\" class=\\\"invalid-feedback\\\">\\n                    <div *ngIf=\\\"imgVal.shopImage.errors.required\\\">\\n                        <div class=\\\"error_msg\\\"> Image is required</div>\\n                    </div>\\n\\n                </div>\\n\\n\\n            </div>\\n            <div class=\\\"form-group col-sm-3 image_tag\\\">\\n                <img class=\\\"img-avatar fox url_img\\\" *ngIf=\\\"shopImgURL\\\" [src]=\\\"shopImgURL\\\" width=\\\"100\\\" height=\\\"100\\\" />\\n            </div>\\n\\n        </div>\\n\\n        <!-----------Buttons start-->\\n\\n        <button class=\\\"btn btn-sm btn-primary button_edit image_edit\\\" type=\\\"submit\\\" (click)=\\\"imageSave()\\\">\\n            <i class=\\\"fa fa-dot-circle-o\\\"></i>&nbsp;Save\\n        </button>\\n        <!-----------Buttons end-->\\n    </form>\\n</div>\";","export default \"\\n\\n<div class=\\\"animated fadeIn upper_space\\\">\\n<div class=\\\"col-lg-12\\\">\\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-header\\\">\\n    \\n      <div class=\\\"row align-items-center\\\">\\n        <div class=\\\"col-md-3\\\">\\n          <i class=\\\"fa fa-align-justify\\\"></i> Shopper List\\n        </div>\\n        <div class=\\\"col-md-6 mb-3 mb-xl-0 input-group mb-3\\\">\\n          <div class=\\\"input-group-prepend\\\">\\n            <span class=\\\"input-group-text\\\"><i class=\\\"icon-magnifier\\\"></i></span>\\n          </div>\\n          \\n           <input class=\\\"form-control\\\" name=\\\"valuetosearch\\\" id=\\\"myInput\\\" placeholder=\\\"Search..\\\" type=\\\"text\\\">\\n        </div>\\n        \\n        <div class=\\\"col-md-3\\\">\\n          <button class=\\\"btn btn-block btn-success\\\" routerLink=\\\"/theme/myinfo\\\" type=\\\"button\\\">Add Shopper</button>\\n        </div>\\n      </div>\\n\\n    </div>\\n    \\n    <div class=\\\"card-body\\\">\\n\\n      <div class=\\\"scrolling_div\\\">\\n        \\n      <table class=\\\"table table-bordered\\\">\\n        <thead>\\n          <tr>\\n            <th>Sl.No</th>\\n            \\n            <th>Shopper Name</th>\\n            \\n            <th>Shop Name</th>\\n            <th>Phone Number</th>\\n            <th>Gender</th>\\n            <th>Shop Image</th>\\n            <th colspan=2>Action</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor= \\\"let obj of userData; let j=index\\\">\\n            <td>{{ obj.u_id }}</td>\\n            <td>{{ obj.f_name }}{{\\\" \\\"}}{{ obj.l_name }}</td>\\n            <td>{{ obj.phone }}</td>\\n            <td>{{ obj.gender }}</td>\\n            <td>{{ obj.u_type }}</td>\\n            <td><img alt=\\\"admin@bootstrapmaster.com\\\" class=\\\"img-avatar\\\" src=\\\"assets/img/avatars/6.jpg\\\"></td>\\n            \\n         \\n            \\n            <td><a href=\\\"\\\" onclick=\\\"return confirm ('Do you want to edit ??')\\\" class=\\\"badge badge-primary\\\"><i class=\\\"cui-pencil icons font-2xl mt-4\\\"></i></a> &nbsp; \\n              <a href=\\\"\\\" onclick=\\\"return confirm ('Are you sure ??')\\\" class=\\\"badge badge-danger\\\"><i class=\\\"cui-trash icons font-2xl mt-4\\\"></i></a>\\n            </td>\\n          </tr>\\n        \\n         \\n        \\n         \\n         \\n          \\n        \\n         \\n         \\n        </tbody>\\n      </table>\\n\\n    </div> <!------scrolling_div----->\\n\\n\\n      <ul class=\\\"pagination\\\">\\n        <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">Prev</a></li>\\n        <li class=\\\"page-item active\\\">\\n          <a class=\\\"page-link\\\" href=\\\"#\\\">1</a>\\n        </li>\\n        <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">2</a></li>\\n        <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">3</a></li>\\n        <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">4</a></li>\\n        <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">Next</a></li>\\n      </ul>\\n    </div>\\n  </div>\\n</div>\\n</div>\\n\";","import { Injectable } from '@angular/core';\nimport { HttpClient} from \"@angular/common/http\"; //Needed\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n\n  url = \"api\";\n\n  constructor(private http : HttpClient) { }\n\n  //Category API Start\n\n  addCategoryData(categoryData: any){\n\n    return this.http.post(this.url+\"/addcategory\", categoryData);\n    \n  }\n\n  updateCategoryData(cat_id, categoryData){\n\n    console.log(\"updatePascal\", cat_id);\n    return this.http.put(\"api/putcategory/\"+cat_id, categoryData);\n    \n  }\n\n  getCategoryList(){\n   return this.http.get('api/getcategory/');\n  }\n\n  daleteCategorydata(cat_id){\n    return this.http.delete(\"api/delcategory/\"+cat_id);\n\n  }\n\n   //For update category single api\n\n   getOneCategory(cat_id: number){\n    console.log(\"service Get\", cat_id);\n    return this.http.get('api/singlecategory/'+cat_id); // \"cat_id\" taken from component add\n\n   }\n\n\n\n\n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient} from \"@angular/common/http\"; //Needed\nimport { Observable } from 'rxjs';\nimport { map, tap, catchError } from 'rxjs/operators';\n\n\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShopperService {\n\n  \n  url = \"api\";\n\n  constructor( private http : HttpClient ) { }\n\n \n//All apis for add-edit-delete-fetch\n  getUserData(){\n\n    //return this.http.get('https://jsonplaceholder.typicode.com/posts');\n    return this.http.get(this.url + \"/getuser\");\n  }\n\n  createData(userInfo){\n\n    return this.http.post(this.url + \"/adduser\", userInfo);\n  }\n\n  //get single user data\n\n  getSingleUserData(u_id){\n\n    \n    return this.http.get(`api/singleuser/${6}`);\n   \n    \n  }\n\n//All apis for add-edit-delete-fetch end\n  getState(){\n    return this.http.get(this.url+\"/getstate\");\n  }\n\n  getCountry(){\n    return this.http.get(this.url+\"/getcountry\");\n  }\n\n\n   \n\n\n  \n\n\n\n\n}\n","import { createFeatureSelector, createSelector, ActionReducerMap } from '@ngrx/store';\nimport * as ProductReducer from './product.reducer';\n\n//Make state interface\nexport interface State{\n    product: ProductReducer.ProductState;\n};\n\n//Connect with reducer\nexport const reducers: ActionReducerMap<State> = {\n    product: ProductReducer.reducer,\n};\n\n//Create Feature selector & Select these\nexport const selectProductfeature = createFeatureSelector<ProductReducer.ProductState>(\n    ProductReducer.productFeatureKey\n);\n\n//Selecting only entity or other state (Create)\nexport const selectProductEntities = createSelector(\n    selectProductfeature,\n    (ProductReducer) => ProductReducer.entities\n);\n\n//Single Value Id\nexport const currentSingleProductId = createSelector(\n    selectProductfeature,\n    //Coming from reducer selector which is exported\n    ProductReducer.getSelectedProductId\n);\n\n//Single Product Value based id\nexport const singleProductBasedOnId = createSelector(\n    selectProductfeature,\n    currentSingleProductId,\n    (state, pid) =>{\n    console.log('state',state,\"id\",pid);\n    return state.entities[pid]\n    } \n\n);\n\nexport const productTest = createSelector(\n    selectProductfeature, \n    ProductReducer.selectIds\n\n);\n\n//get state and  convert entity object into array\nexport const productTestAll = createSelector(\n    selectProductEntities, (entities) =>\n  Object.keys(entities).map((k) => entities[k])\n);\n\n//same as converting to array like upper function\n//Get all data\nexport const selectProducts = createSelector(\n    \n    selectProductfeature,\n   \n    /* (e)=>{\n        console.log('Selector->>',e)\n        return e;\n    }, */\n    \n    ProductReducer.selectAll,\n);\n\n","import { createFeatureSelector, createSelector, ActionReducerMap } from '@ngrx/store';\nimport * as fromQuantityReducer from './quantity.reducer';\n\n//make state interface\nexport interface State{\n    quantity: fromQuantityReducer.QuantityState;\n};\n\n//Connect with reducer\nexport const reducers: ActionReducerMap<State> = {\n    quantity: fromQuantityReducer.reducer,\n};\n\n//Selecting & making feature selector\nexport const selectQuantityFeature = \ncreateFeatureSelector<fromQuantityReducer.QuantityState>(\n    fromQuantityReducer.quantityFeatureKey\n);\n\n//Selecting only entity or other state (Create)\nexport const selectQuantityEntities = createSelector(\n    selectQuantityFeature,\n    (fromQuantityReducer) => fromQuantityReducer.entities\n);\n\n//Single Value Id\nexport const currentSingleQuantityId = createSelector(\n    selectQuantityFeature,\n    //Coming from reducer selector which is exported\n    fromQuantityReducer.getSelectdQuantityId\n);\n\n//Single Data Value based id\nexport const singleQuantityBasedOnId = createSelector(\n    selectQuantityFeature,\n    currentSingleQuantityId,\n    (state, id) => state.entities[id]\n\n);\n\nexport const Test = createSelector(\n    selectQuantityFeature, \n    fromQuantityReducer.selectIds\n\n);\n\n//get state and  convert entity object into array\nexport const TestAll = createSelector(\n    selectQuantityEntities, (entities) =>\n  Object.keys(entities).map((k) => entities[k])\n);\n\n//same as converting to array like upper function\nexport const selectQuantity = createSelector(\n    selectQuantityFeature,\n    fromQuantityReducer.selectAll\n);\n\n","import { createFeatureSelector, createSelector, ActionReducerMap } from '@ngrx/store';\nimport * as fromSettings from '../settings/settings.reducer';\n\n//make state interface\nexport interface State{\n    settings: fromSettings.SettingsState;\n};\n\n//Connect with reducer\nexport const reducers: ActionReducerMap<State> = {\n    settings: fromSettings.reducer,\n};\n\n//Selecting feature selector\nexport const selectSettingsFeature = \ncreateFeatureSelector<fromSettings.SettingsState>(\n    fromSettings.settingsFeatureKey\n);\n\n//Selecting only entity or other state (Create)\nexport const selectSettingsEntities = createSelector(\n    selectSettingsFeature,\n    (fromSettings) => fromSettings.entities\n);\n\n//Single Value Id\nexport const currentSingleSettingsId = createSelector(\n    selectSettingsFeature,\n    //Coming from reducer selector which is exported\n    fromSettings.getSelectdSettingsId\n);\n//Single Settings Value based id\nexport const singleSettingsBasedOnId = createSelector(\n    selectSettingsFeature,\n    currentSingleSettingsId,\n    (state, id) => state.entities[id]\n\n);\n\nexport const Test = createSelector(\n    selectSettingsFeature, \n    fromSettings.selectIds\n\n);\n\n//get state and  convert entity object into array\nexport const TestAll = createSelector(\n    selectSettingsEntities, (entities) =>\n  Object.keys(entities).map((k) => entities[k])\n);\n\n//same as converting to array like upper function\nexport const selectSettings = createSelector(\n    selectSettingsFeature,\n    fromSettings.selectAll\n);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3RoZW1lL2FkbWluaW5mby9hZG1pbmFkZC9hZG1pbmFkZC5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { ShopperService } from '../../../../services/shopper.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-adminadd',\n  templateUrl: './adminadd.component.html',\n  styleUrls: ['./adminadd.component.scss']\n})\nexport class AdminaddComponent implements OnInit {\n\n // Password show and hide\n addTextType: boolean;\n confTextType: boolean;\n \n gender: string;\n genders: any = ['Male', 'Female', 'Others']\n addAdminForm: FormGroup;\n \n submitted = false;\n\n //testsub = false;\n\n constructor(public formBuilder: FormBuilder, \n             private router: Router, private shopperData: ShopperService, \n             private route: ActivatedRoute,// For Edit data\n             private httpClient: HttpClient, private toastr: ToastrService ) { }\n\n ngOnInit(): void {\n\n   \n\n\n   this.addAdminValidation();\n   \n\n}\n\n\n\naddAdminValidation(){\n\n this.addAdminForm = this.formBuilder.group({\n   firstName: ['', Validators.required],\n   lastName: ['', Validators.required],\n   phoneNumber: ['', Validators.required],\n   genderName: ['', Validators.required],\n   addPassword: ['', [Validators.required, Validators.pattern(\"((?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%]).{8,12})\")]],\n   confPassword: ['', [Validators.required, Validators.pattern(\"((?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%]).{8,12})\")]]\n\n  });\n\n}\n\n get adminVal() {\n return this.addAdminForm.controls;\n }\n \n addAdmin(){\n  \n   \n     this.submitted = true;\n \n   if (this.addAdminForm.invalid) {\n     console.log(this.addAdminForm)\n   return;\n   }\n\n \n alert('form fields are validated successfully!');\n }\n\n\n\n\n // Toggle Eye button  \n toggleAddTextType(){\n   this.addTextType = !this.addTextType;\n }\n // Toggle Eye button  \n toggleConfTextType(){\n   this.confTextType = !this.confTextType;\n }\n \n\n\n\n\n\n changeGender(gender) {\n\n\n   this.gender = gender.target.value.split(' ')[1];\n   \n }\n\n \n\n\n//Numeric accepted\nnumberOnly(event): boolean {\n \n const charCode = (event.which) ? event.which : event.keyCode;\n if (charCode > 31 && (charCode < 48 || charCode > 57)) { \n   return false;\n }\n \n   return true;\n \n}\n\n\n\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// required modules\nimport { ThemeRoutingModule } from '../theme-routing.module';\nimport { FormsModule, ReactiveFormsModule, NgForm } from '@angular/forms'; //Needed\n\n//protected-Field & Equal-field validation Directive\nimport { ConfirmEqualValidatorDirective } from './confirm-equal-validator.directive';\nimport { ProtectedfieldDirective } from '../middlewares/protectedfield.directive';\n\n\nimport { AdminviewComponent } from './adminview/adminview.component';\nimport { AdminaddComponent } from './adminadd/adminadd.component';\nimport { ResetadminComponent } from './resetadmin/resetadmin.component';\nimport { AdmininfoComponent } from './admininfo/admininfo.component';\n\n\n\n@NgModule({\n  declarations: [\n    //Directives\n    ConfirmEqualValidatorDirective,\n    ProtectedfieldDirective,\n\n    //All Components\n    AdminviewComponent, \n    AdminaddComponent, \n    ResetadminComponent, \n    AdmininfoComponent,\n    \n    \n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n   // NgForm,\n    ThemeRoutingModule\n  ]\n})\nexport class AdminInfoModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3RoZW1lL2FkbWluaW5mby9hZG1pbmluZm8vYWRtaW5pbmZvLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-admininfo',\n  templateUrl: './admininfo.component.html',\n  styleUrls: ['./admininfo.component.scss']\n})\nexport class AdmininfoComponent implements OnInit {\n\n  \n\n  //testsub = false;\n\n  constructor( ) { }\n\n  ngOnInit(): void {\n\n \n }\n \n\n\n \n\n}\n","export default \".row.view_form .col-sm-3 {\\n  border-right: 1px solid #000;\\n}\\n\\n.row.view_form .col-sm-3:last-child {\\n  border: none !important;\\n}\\n\\n.row.view_form input {\\n  border: none;\\n  font-size: 20px;\\n  background: no-repeat;\\n  text-align: center;\\n  color: #a71710 !important;\\n  font-weight: 500;\\n}\\n\\n.row.view_form .form-group {\\n  text-align: center;\\n}\\n\\n.row.view_form label {\\n  letter-spacing: 1px;\\n}\\n\\n.basic_details.admin-view label {\\n  color: #00000085;\\n}\\n\\n@media (max-width: 760px) {\\n  .row.view_form .col-sm-3 {\\n    border-right: none !important;\\n    border-bottom: 1px solid #000 !important;\\n    margin-top: 16px !important;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3MvdGhlbWUvYWRtaW5pbmZvL2FkbWludmlldy9hZG1pbnZpZXcuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSw0QkFBQTtBQUNKOztBQUVBO0VBQ0ksdUJBQUE7QUFDSjs7QUFFQTtFQUNJLFlBQUE7RUFDQSxlQUFBO0VBQ0EscUJBQUE7RUFDQSxrQkFBQTtFQUNBLHlCQUFBO0VBQ0EsZ0JBQUE7QUFDSjs7QUFFQTtFQUNJLGtCQUFBO0FBQ0o7O0FBRUE7RUFDSSxtQkFBQTtBQUNKOztBQUVBO0VBQ0ksZ0JBQUE7QUFDSjs7QUFFQTtFQUVJO0lBQ0ksNkJBQUE7SUFDQSx3Q0FBQTtJQUNBLDJCQUFBO0VBQU47QUFDRiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3RoZW1lL2FkbWluaW5mby9hZG1pbnZpZXcvYWRtaW52aWV3LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnJvdy52aWV3X2Zvcm0gLmNvbC1zbS0zIHtcbiAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAjMDAwO1xufVxuXG4ucm93LnZpZXdfZm9ybSAuY29sLXNtLTM6bGFzdC1jaGlsZCB7XG4gICAgYm9yZGVyOiBub25lICFpbXBvcnRhbnQ7XG59XG5cbi5yb3cudmlld19mb3JtIGlucHV0IHtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgZm9udC1zaXplOiAyMHB4O1xuICAgIGJhY2tncm91bmQ6IG5vLXJlcGVhdDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgY29sb3I6ICNhNzE3MTAgIWltcG9ydGFudDtcbiAgICBmb250LXdlaWdodDogNTAwO1xufVxuXG4ucm93LnZpZXdfZm9ybSAuZm9ybS1ncm91cCB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4ucm93LnZpZXdfZm9ybSBsYWJlbCB7XG4gICAgbGV0dGVyLXNwYWNpbmc6IDFweDtcbn1cblxuLmJhc2ljX2RldGFpbHMuYWRtaW4tdmlldyBsYWJlbCB7XG4gICAgY29sb3I6ICMwMDAwMDA4NTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDc2MHB4KXtcbiAgICBcbiAgICAucm93LnZpZXdfZm9ybSAuY29sLXNtLTMge1xuICAgICAgICBib3JkZXItcmlnaHQ6IG5vbmUgIWltcG9ydGFudDtcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICMwMDAgIWltcG9ydGFudDtcbiAgICAgICAgbWFyZ2luLXRvcDogMTZweCAhaW1wb3J0YW50O1xuICAgIH1cbn1cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4iXX0= */\";","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { ShopperService } from '../../../../services/shopper.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-adminview',\n  templateUrl: './adminview.component.html',\n  styleUrls: ['./adminview.component.scss']\n})\nexport class AdminviewComponent implements OnInit {\n\n \n\n //testsub = false;\n\n constructor(public formBuilder: FormBuilder, \n             private router: Router, private shopperData: ShopperService, \n             private route: ActivatedRoute,// For Edit data\n             private httpClient: HttpClient, private toastr: ToastrService ) { }\n\n ngOnInit(): void {\n\n\n}\n\n\n}\n","import { Validator, NG_VALIDATORS, AbstractControl } from '@angular/forms';\nimport { Directive, Input } from '@angular/core';\n\n\n\n@Directive({\n\n    selector: '[appConfirmEqualValidatorDirective]',\n    providers: [{\n\n        provide: NG_VALIDATORS,\n        useExisting: ConfirmEqualValidatorDirective,\n        multi: true\n\n    }]\n})\n\nexport class ConfirmEqualValidatorDirective implements Validator{\n\n    @Input() appConfirmEqualValidatorDirective: string;\n\n    validate( control: AbstractControl ): {[Key:string]: any} | null {\n\n        const controlToCompare = control.parent.get(this.appConfirmEqualValidatorDirective);\n        if(controlToCompare && controlToCompare.value !== control.value){\n\n            return {'notEqual': true };\n        }\n\n        return null;\n\n    }\n\n\n} ","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3RoZW1lL2FkbWluaW5mby9yZXNldGFkbWluL3Jlc2V0YWRtaW4uY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { ShopperService } from '../../../../services/shopper.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-resetadmin',\n  templateUrl: './resetadmin.component.html',\n  styleUrls: ['./resetadmin.component.scss']\n})\nexport class ResetadminComponent implements OnInit {\n\n  // Password show and hide\n  \n  oldTextType: boolean;\n  newTextType: boolean;\n  confirmTextType: boolean;\n  \n  resetPassForm : FormGroup;\n  \n  isPasswordSubmitte = false;\n\n  //testsub = false;\n\n  constructor(public formBuilder: FormBuilder, \n              private router: Router, private shopperData: ShopperService, \n              private route: ActivatedRoute,// For Edit data\n              private httpClient: HttpClient, private toastr: ToastrService ) { }\n\n  ngOnInit(): void {\n\n    \n    this.resetPassValidation();\n \n }\n \n\n  \n  resetPassValidation(){\n\n    this.resetPassForm = this.formBuilder.group({\n      oldPass: ['', [Validators.required, Validators.pattern(\"((?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%]).{8,12})\")]],\n      newPass: ['', [Validators.required, Validators.pattern(\"((?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%]).{8,12})\")]],\n      confirmPass: ['', [Validators.required, Validators.pattern(\"((?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%]).{8,12})\")]]\n  \n     });\n  \n   }\n\n   get passVal() {\n    return this.resetPassForm.controls;\n    }\n    \n    resetPass(){\n    this.isPasswordSubmitte = true;\n    if (this.resetPassForm.invalid) {\n    return;\n    }\n    alert('form fields are validated successfully!');\n    }\n\n\n\n  // Toggle Eye button\n    toggleOldTextType() {\n    this.oldTextType = !this.oldTextType;\n  }\n\n  // Toggle Eye button\n  toggleNewTextType() {\n    this.newTextType = !this.newTextType;\n  }\n  // Toggle Eye button\n  toggleConfirmTextType(){\n    this.confirmTextType = !this.confirmTextType;\n  }\n\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { FormGroup, FormControl, Validators, FormBuilder } from \"@angular/forms\";\n\n@Component({\n  templateUrl: \"banneradd.component.html\",\n})\nexport class BanneraddComponent implements OnInit {\n\n  submitted = false;\n  bannerImageForm: FormGroup;\n\n  ngOnInit() {\n\n    this.bannerValidation();\n  }\n\n  constructor(public formBuilder: FormBuilder ) {}\n\n  /*******Form Validation reactive */\n  bannerValidation(){\n\n    this.bannerImageForm = this.formBuilder.group({\n      bannerImg: ['', Validators.required]\n  \n     });\n  \n   }\n   \n    get bannerval() {\n    return this.bannerImageForm.controls;\n    }\n    \n    bannerSubmit(){\n    this.submitted = true;\n    // console.log(this.submitted)\n    if (this.bannerImageForm.invalid) {\n    return;\n    }\n    alert('form fields are validated successfully!');\n    }\n  \n\n  /* onSubmit() {\n    alert(JSON.stringify(this.myInfo.value));\n    alert(\"Image upload successfully\");\n  } */\n\n  /*******Form Validation reactive end */\n\n  \n\n  urls = [];\n\n  onSelectFile(event) {\n    if (event.target.files && event.target.files[0]) {\n      var filesAmount = event.target.files.length;\n      for (let i = 0; i < filesAmount; i++) {\n        var reader = new FileReader();\n\n        reader.onload = (event: any) => {\n          console.log(event.target.result);\n          this.urls.push(event.target.result);\n        };\n\n        reader.readAsDataURL(event.target.files[i]);\n      }\n    }\n  }\n\n  /* selectFiles(event){\n\n    if(event.target.files){\n      for(var i = 0; i< File.length; i++){\n        var reader = new FileReader();\n\n        reader.readAsDataURL(event.target.files[i])\n        reader.onload = (event:any) => {\n          this.urls.push(event.target.result)\n        }\n      }\n    }\n  }*/\n\n  \n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { FormGroup, FormControl, Validators, FormBuilder, } from \"@angular/forms\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { CategoryService } from \"../../../services/category.service\";\nimport { ToastrService } from \"ngx-toastr\";\n\n@Component({\n  templateUrl: \"categoryadd.component.html\",\n})\nexport class CategoryaddComponent implements OnInit {\n  \n  \n  catData: any;\n  cat_id: any;\n  imgURL: any;\n\n  //Insert Object\n  addCatValue: any;\n\n  //Taken from cat_table\n  cat_name: string;\n  cat_meta: string;\n  cat_detailse: string;\n  local_cat_img_loc: any;\n\n  //Form Validation\n  categoryDetailsForm: FormGroup;\n\n  submitted = false;\n\n  Edit: boolean = false;\n\n  constructor(\n    public formBuilder: FormBuilder,\n    private router: Router,\n    private httpClient: HttpClient,\n    private categoryService: CategoryService,\n    private toastr: ToastrService,\n    private route: ActivatedRoute //For data update needed\n  ) {}\n\n  ngOnInit() {\n    this.categoryInfoValidation();\n\n    //getSingleCatData for update\n    //'cat_id' defined theme.routing module\n    //Pass 'cat_id' to Categoryservice\n    //Immediate Invocable Function\n    (() => {\n      let cat_id = this.route.snapshot.params.cat_id;\n      if (cat_id) {\n        this.Edit = true;\n        this.cat_id = cat_id;\n        this.getSingleCatData();\n      }\n    })();\n\n  }\n\n//For Insert Variable Defined function\n  getData() {\n    return {\n      category_name: this.cat_name,\n      category_meta: this.cat_meta,\n      category_details: this.cat_detailse,\n      category_img_loc: this.local_cat_img_loc,\n    };\n  }\n//For Single Variable Defined function\n  setCatData(data: any) {\n    console.log(\" setting data \", data.cat_name);\n    (this.cat_name = data.cat_name),\n      (this.cat_meta = data.cat_meta),\n      (this.cat_detailse = data.cat_detailse),\n      (this.imgURL = data.cat_img_loc);\n  }\n\n  // Form Validation\n  categoryInfoValidation() {\n    this.categoryDetailsForm = this.formBuilder.group({\n      getCatId: [],\n      categoryName: [\"\", Validators.required],\n      seoURL: [],\n      categoryDescription: [\n        \"\",\n        [\n          Validators.required,\n          Validators.maxLength(400),\n          Validators.minLength(4),\n        ],\n      ],\n      categoryImg: [\"\", Validators.required],\n    });\n  }\n\n  get catVal() {\n    return this.categoryDetailsForm.controls;\n  }\n\n \n\n  categoryDetails() {\n    this.submitted = true;\n    if (this.categoryDetailsForm.invalid) {\n      return;\n    }\n    \n    //Need FormsModule & ReactiveFormsModule import in app.module.ts\n    //insert & Update here\n    if (this.Edit) {\n      this.updateCategory();\n      } else {\n        this.insertCategory(this.getData());\n      }\n    \n  }\n\n \n\n  //Insert Function\n  private insertCategory(objCategory) {\n    this.categoryService.addCategoryData(objCategory)\n    .subscribe((res: any) => {\n      this.addCatValue = res;\n\n      if(res.inserted){\n        this.toastr.success('Category inserted successfully', 'Success', {\n          timeOut: 1000*2,\n          progressBar: true\n\n        })\n\n      }else{\n\n      \n        this.toastr.error('category insert failed', 'Failure', {\n          timeOut: 1000*2,\n          progressBar: true\n\n        })\n      }\n\n\n      console.log(\"Add Cat-Value\", res);\n      \n    });\n\n\n  }\n\n   //Get single data for update\n   getSingleCatData() {\n    this.categoryService.getOneCategory(this.cat_id).subscribe((res) => {\n      console.log(\"One Cat Data\", res);\n      this.catData = res;\n      this.setCatData(this.catData[0]);\n      console.log(\"Full->>\", this.cat_name);\n    });\n  }\n\n  //Update data category\n  private updateCategory() {\n    this.categoryService\n      .updateCategoryData(this.cat_id, this.getData())\n      .subscribe((res: any) => {\n        \n        if(res.updated){\n          this.toastr.error('category update failed', 'Failure', {\n            timeOut: 1000*2,\n            progressBar: true\n  \n          })\n          \n  \n        }else{\n          this.toastr.success('Category updated successfully', 'Success', {\n            timeOut: 1000*2,\n            progressBar: true\n  \n          })\n          this.router.navigate(['/theme/categorylist']);\n          \n        }\n        console.log(\"UpdatedData\", res);\n        \n      });\n  }\n\n  \n\n   \n\n\n\n  //Single Image Preview\n\n  public imagePath;\n  preview(files) {\n    if (files.length === 0) return;\n\n    var mimeType = files[0].type;\n    if (mimeType.match(/image\\/*/) == null) {\n     \n      return;\n    }\n\n    var reader = new FileReader();\n    this.imagePath = files;\n    reader.readAsDataURL(files[0]);\n    reader.onload = (_event) => {\n      this.imgURL = reader.result;\n    };\n  }\n\n  //Single Image Upload End\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CategoryService } from '../../../services/category.service';\nimport { HttpClient } from '@angular/common/http';\nimport { ToastrService } from 'ngx-toastr';\n//import { ConfirmationDialogService } from '../../../middlewares/confirmation-dialog/confirmation-dialog.service'\nimport { NgxSpinnerService } from \"ngx-spinner\"; //For Spinner\n\n\n@Component({\n  templateUrl: 'categorylist.component.html'\n})\nexport class CategorylistComponent implements OnInit {\n\n  //List data property\n  categoryData: any;\n  //Delete Popup\n  popoverTitle = 'Delete Confirm';\n  popoverMessage = 'Do you want?';\n  cancelDeleted = false;\n\n  //For update Popup\n  public updateTitle: string = 'Update Confirm';\n  public updateMessage: string = 'Are you sure?';\n  public cancelUpdated: boolean = false;\n  \n\n  constructor(private categoryService: CategoryService,\n    private router: Router, private httpClient: HttpClient,\n    private toastr: ToastrService, private spinner: NgxSpinnerService,\n    //private confirmationDialogService : ConfirmationDialogService,\n    ) { }\n\n\n  ngOnInit() {\n\n    this.getCategoryData();\n    \n\n  }\n \n\n  //Get data to display list\n  public getCategoryData() {\n    this.categoryService.getCategoryList().subscribe(categoryList => {\n\n      this.categoryData = categoryList;\n      \n     \n      \n   \n \n   \n      //console.log(\"List Data\", this.categoryData);\n    })\n\n  }\n\n  \n  \n  //Delete Popup Function\n  confirmDeleted(cat_id){\n   this.deleteCatecory(cat_id);\n  }\n  \n  //Delete catagory from list\n\n  public deleteCatecory(cat_id) {\n\n    // var deleteConfirm = confirm('Do you really want to ... ?');\n\n\n    this.categoryService.daleteCategorydata(cat_id)\n      .subscribe((catDelete: any) => {\n        console.log(\"Cat Delete\", catDelete);\n        if (catDelete.deleted) {\n\n          //Alert msg\n          this.toastr.success('category deleted successfully', 'Success', {\n            timeOut: 1000 * 2,\n            progressBar: true\n\n          })\n        }\n        else {\n\n          this.toastr.error('category deletion failed', 'Failure', {\n            timeOut: 1000 * 2,\n            progressBar: true\n\n          })\n\n        }\n\n        this.getCategoryData();\n      })\n    \n\n  }\n\n  //Popup Update Function\n  confirmUpdated(cat_id){\n    this.updateCategoryClick(cat_id)\n  }\n\n//Update catagory from list route\n  updateCategoryClick(cat_id) {\n\n    this.router.navigate(['/theme/categoryadd/edit/'+ cat_id]);\n\n  /* var updateData =  confirm(\"Do you want to update?\");\n  if(updateData){\n\n    this.router.navigate(['/theme/categoryadd/edit/'+ cat_id])\n  }\n */\n  }\n\n\n\n\n}\n\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\n@Component({\n  templateUrl: 'customer.component.html'\n})\nexport class CustomerComponent implements OnInit {\n\n\n    /*******Form Validation reactive */\n   \n    \n  \n  \n   \n  \n  \n  /*******Form Validation reactive end */\n\n\n\n\n\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n\n  }\n\n}\n\n\n","import { Component } from '@angular/core';\n\n@Component({\n  templateUrl: 'customeradd.component.html'\n})\nexport class CustomeraddComponent {\n\n  constructor() { }\n\n}\n","import { Directive, HostListener, OnInit } from '@angular/core';\n//import { RegService } from '../views/register/register.component';\n\n@Directive({\n  selector: '[appProtectedfield]'\n})\nexport class ProtectedfieldDirective implements OnInit {\n\n  @HostListener('paste', ['$event']) blockPaste(e: KeyboardEvent) {\n    e.preventDefault();\n  }\n\n  @HostListener('copy', ['$event']) blockCopy(e: KeyboardEvent) {\n    e.preventDefault();\n  }\n\n  @HostListener('cut', ['$event']) blockCut(e: KeyboardEvent) {\n    e.preventDefault();\n  }\n\n  constructor() { }\n\n  ngOnInit() {}\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3RoZW1lL3Byb2R1Y3RpbmZvL3Byb2R1Y3QvcHJvZHVjdC5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { ProductService } from '../../../../services/product.service';\nimport { ToastrService } from 'ngx-toastr';\n\n\n@Component({\n  selector: 'app-product',\n  templateUrl: './product.component.html',\n  styleUrls: ['./product.component.scss']\n})\nexport class ProductComponent implements OnInit {\n\n  \n  \n\n  constructor( \n    private route: ActivatedRoute,\n  ) { }\n\n  ngOnInit() {\n\n   \n \n }\n \n\n\n \n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3RoZW1lL3Byb2R1Y3RpbmZvL3Byb2R1Y3RhZGQvcHJvZHVjdGFkZC5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { CategoryService } from '../../../../services/category.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Store, select } from \"@ngrx/store\";\nimport { ProductService } from '../../../../services/product.service'\nimport { MainState } from '../../../../stores/index';\nimport * as ProductAction from '../../../../stores/product/product.actions';\nimport * as ProductSelector from 'app/stores/product/product.selectors';\nimport { Observable } from 'rxjs';\nimport { ProductModel } from '../model/product.model';\n\n\n\n\n@Component({\n  selector: 'app-productadd',\n  templateUrl: './productadd.component.html',\n  styleUrls: ['./productadd.component.scss']\n})\nexport class ProductaddComponent implements OnInit {\n  \n  cat_id: any;\n  category: string;\n  categories: any;\n  public imagePath;\n  imgURL: any;\n  //public message: string;\n  \n \n  productInfoForm: FormGroup;\n  submitted = false;\n\n  //For Insert and get single data\n  pid: any;\n  category_id: any;\n  product_code: any;\n  product_name: any;\n  product_brand_name: any;\n  product_details: any;\n  product_img: any;\n  productId: any;\n  categoryName: any;\n  EditProduct: boolean = false;\n\n  constructor(public formBuilder: FormBuilder, \n              private router: Router, private categoryService: CategoryService, \n              private route: ActivatedRoute,// For Edit data\n              private store: Store<MainState>,\n              private httpClient: HttpClient, private toastr: ToastrService ) { }\n\n  ngOnInit() {\n\n    this.cat_id=this.route.snapshot.params['cat_id'];// For Edit data\n    this.getCategoryList(); //Fetch Data Into Category Field\n    this.productInfoValidation();\n    this.getSingleValue();\n\n    //Immediate Invocable Function\n    (() => {\n      let pid = this.route.snapshot.params.pid;\n      if (pid) {\n        this.EditProduct = true;\n        this.pid = pid;\n        // this.getSingleValue();\n      }\n    })();\n\n    console.log('Main PID->', typeof this.pid);\n \n }\n \n  \n  productInfo(){\n  this.submitted = true;\n  // console.log(this.submitted)\n  if (this.productInfoForm.invalid) {\n  return;\n  }\n  //this.productInfoForm.reset();\n  //console.log('Print-data->', this.getData());\n\n  if (this.EditProduct) {\n    this.updateProduct();\n    } else {\n      this.productInsert();\n    }\n  }\n\n  //For Update\n  getSingleValue(){\n    const productValue$: Observable<ProductModel> = this.store.select(\n      ProductSelector.singleProductBasedOnId\n    )\n   \n    productValue$.subscribe(currentProduct =>{\n      console.log('getSingle-pro->', currentProduct);\n      if(currentProduct){\n        this.category_id= currentProduct.categoryName;\n        this.product_name = currentProduct.productName;\n        this.product_code= currentProduct.productCode;\n        this.product_brand_name= currentProduct.brandName;\n        this.product_details= currentProduct.productDetails;\n        this.imgURL = currentProduct.productImage;\n        this.pid= currentProduct.pid;\n      }\n    })\n  } \n \n //Update function\nupdateProduct() {\n  const updatedProduct = {\n    category_id: this.productInfoForm.get(\"category_id\").value,\n    product_code: this.productInfoForm.get(\"product_code\").value,\n    product_name: this.productInfoForm.get(\"product_name\").value,\n    product_brand_name: this.productInfoForm.get(\"product_brand_name\").value,\n    product_details: this.productInfoForm.get(\"product_details\").value,\n    product_img: this.productInfoForm.get(\"product_img\").value,\n    pid: this.pid\n  };\n\n  const pid = this.productInfoForm.get('pid').value;\n  console.log('Main Id-->', this.pid);\n  console.log('Update Data=>', updatedProduct);\n\n  this.store.dispatch(ProductAction.updateProduct({product:updatedProduct, pid:pid}));\n  this.toastr.success('Product update successfully', 'Success', {\n    timeOut: 1000*2,\n    progressBar: true\n\n  })\n  this.router.navigate(['/theme/productlist']);\n  //this.clientForm.reset();\n}\n\n\n\n  //For Insert\n  productInsert(){\n    const insertProduct = {\n      category_id: this.productInfoForm.get('category_id').value,\n      product_code: this.productInfoForm.get('product_code').value,\n      product_name: this.productInfoForm.get('product_name').value,\n      product_brand_name: this.productInfoForm.get('product_brand_name').value,\n      product_details: this.productInfoForm.get('product_details').value,\n      product_img: this.productInfoForm.get('product_img').value,\n    };\n\n   this.store.dispatch(ProductAction.createProduct({product: insertProduct}));\n    //{product: insertProduct} object distructering & 'product' coming from action\n    //this.productInfoForm.reset();\n    \n      this.toastr.success('Product inserted successfully', 'Success', {\n        timeOut: 1000*2,\n        progressBar: true\n\n      })\n    \n  }\n\n\n  productInfoValidation(){\n\n    this.productInfoForm = this.formBuilder.group({\n      category_id: ['', Validators.required],\n      product_code: [],\n      product_name: ['', Validators.required],\n      product_brand_name: ['', Validators.required],\n      product_details: ['', [Validators.required,  Validators.maxLength(400),Validators.minLength(4)]],\n      product_img: ['', Validators.required],\n      pid: null\n  \n     });\n  \n   }\n\n   get pval() {\n    return this.productInfoForm.controls;\n    }\n  \n\n  \n\n  //Category List For Dropdown\n  public getCategoryList(){\n    this.categoryService.getCategoryList().subscribe(categories=>{\n      this.categories = categories;\n      //console.log('All Category Data->', this.categories);\n    })\n  }\n\n\n  // Choose category using select dropdown\n  changeCategory(category) {\n\n\n    this.category = category.target.value.split(' ')[1];\n    \n  }\n\n \n//Single Image Upload\n\npreview(files) {\n  if (files.length === 0)\n    return;\n\n  var mimeType = files[0].type;\n  if (mimeType.match(/image\\/*/) == null) {\n    //this.message = \"Only images are supported.\";\n    return;\n  }\n\n  var reader = new FileReader();\n  this.imagePath = files;\n  reader.readAsDataURL(files[0]); \n  reader.onload = (_event) => { \n    this.imgURL = reader.result; \n  }\n}\n\n//Single Image Upload End\n\n\n\n \n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n// for getting ng model\n// required modules\nimport { HttpClientModule} from '@angular/common/http';\nimport { ThemeRoutingModule } from '../theme-routing.module';\nimport { FormsModule, ReactiveFormsModule, NgForm } from '@angular/forms'; //Needed\nimport { AngularEditorModule } from '@kolkov/angular-editor';\n//Components\nimport { ProductaddComponent } from './productadd/productadd.component';\nimport { QuantityaddComponent } from './quantityadd/quantityadd.component';\nimport { ProductComponent } from './product/product.component';\nimport { ProductlistComponent } from './productlist.component';\n\n\n\n@NgModule({\n  declarations: [ProductaddComponent, QuantityaddComponent, ProductComponent, ProductlistComponent],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ThemeRoutingModule,\n    AngularEditorModule,\n  ]\n})\nexport class ProductinfoModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Store, select } from '@ngrx/store';//Needed\nimport { Observable } from 'rxjs'; //Needed\nimport { Router } from '@angular/router';\n\nimport * as ProductSelector from '../../../stores/product/product.selectors';\nimport { ProductService } from '../../../services/product.service';\nimport { MainState } from '../../../stores/index';\nimport * as ProductAction from '../../../stores/product/product.actions';\nimport { ProductModel } from './model/product.model';\nimport { Console } from 'console';\nimport { tap } from 'rxjs/operators';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  templateUrl: 'productlist.component.html'\n})\nexport class ProductlistComponent implements OnInit {\n\n  productData$: Observable<ProductModel[]>;\n  pid: any;\n\n \nconstructor(\n    private productService: ProductService,\n    private router: Router,\n    private store: Store<MainState>, private toastr: ToastrService,\n    ) {}\n\n    ngOnInit(){\n\n      this.getProductData();\n    }\n\n\n    getProductData(){\n      //Get data dispatching from action\n      this.store.dispatch(ProductAction.loadProducts());\n      this.productData$ = this.store.pipe(select(ProductSelector.selectProducts));\n    }\n\n    deleteProduct(pid){\n\n      var delPop = confirm ('Do you want to delete ??');\n      if(delPop){\n        //console.log('Delete-Id>', pid);\n        this.store.dispatch(ProductAction.deleteProduct({pid:pid}));         \n          //Alert msg\n          this.toastr.success('category deleted successfully', 'Success', {\n            timeOut: 1000 * 2,\n            progressBar: true\n\n          })\n      }else{\n        this.toastr.error('category deletion failed', 'Failure', {\n          timeOut: 1000 * 2,\n          progressBar: true\n\n        })\n\n        this.getProductData();\n      }\n\n    }\n\n    editProduct(pid){\n      if(confirm ('Do you want to edit ??')){\n        console.log('Edit-Id>', pid);\n        this.store.dispatch(ProductAction.loadProduct({productId:pid})); \n        this.router.navigate(['/theme/product/edit/'+ pid]);\n        //'productId' taken from action \n      }\n    }\n  \n\n \n\n}\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3RoZW1lL3Byb2R1Y3RpbmZvL3F1YW50aXR5YWRkL3F1YW50aXR5YWRkLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { QuantityService } from '../../../../services/quantity.service';\nimport { ToastrService } from 'ngx-toastr';\n\n\nimport { from, Observable } from 'rxjs';\nimport { tap, map } from 'rxjs/operators';\n//NGRX Directory\nimport { Store, select } from \"@ngrx/store\";\nimport { MainState } from '../../../../stores/index';//Reducer add state file\nimport * as QuantityAction from '../../../../stores/quantity/quantity.actions';\nimport * as QuantitySelector from '../../../../stores/quantity/quantity.selectors';\nimport { QuantityModel } from '../model/quantity.model';\n\n@Component({\n  selector: 'app-quantityadd',\n  templateUrl: './quantityadd.component.html',\n  styleUrls: ['./quantityadd.component.scss']\n})\nexport class QuantityaddComponent implements OnInit {\n \n  \n  sellunit: string;\n  //Static drop down\n  //sellunits: any = ['Per Gm', 'Per Kg', 'Per Lit', 'Per ML', 'Per Piece'];\n  sellingUnits: any;\n  su_id: any;\n  pid: any;\n \n  manageQtyForm : FormGroup;\n  \n  isPasswordSubmitte = false;\n \n\n  constructor(public formBuilder: FormBuilder, \n              private router: Router, private quantityService: QuantityService, \n              private route: ActivatedRoute,// For Edit data\n              private httpClient: HttpClient, private toastr: ToastrService,\n              private store: Store<MainState> ) { }\n\n\n\n  ngOnInit(): void {\n\n    \n    \n    this.manageQtyValidation();\n\n    this.getAllSellingUnits();\n    //Using NGRX\n    //this.getSingleQuantity();\n\n    //Get single value \n    const quantity$: Observable<QuantityModel> = this.store.select(\n      QuantitySelector.singleQuantityBasedOnId\n    )\n      //Subscribe for update\n      quantity$.subscribe(currentQuantity => {\n        console.log('qty Value->', currentQuantity);\n        if(currentQuantity){\n          this.manageQtyForm.patchValue({\n            quantity: currentQuantity.quantity,\n            price: currentQuantity.price,\n            sellingUnitId: currentQuantity.sellingUnitId,\n            pid: currentQuantity.pid\n          })\n        }\n      })\n\n\n  }\n  //Without NGRX select all selling units for unit drop-down\n  public getAllSellingUnits(){\n\n    this.quantityService.getAllUnits().subscribe(resUnit => {\n      this.sellingUnits = resUnit;\n      //console.log('All Units-->', this.sellingUnits);\n    })\n  }\n\n  //Get single value for update\n /*  getSingleQuantity(){\n\n    \n\n  } */\n  \n  manageQtyValidation(){\n\n    this.manageQtyForm = this.formBuilder.group({\n      quantity: ['', Validators.required],\n      price: ['', Validators.required],\n      sellingUnitId: ['', Validators.required],\n      pid: null\n  \n      });\n  \n    }\n  \n    get mval() {\n    return this.manageQtyForm.controls;\n    }\n    \n    manageQty(){\n    this.isPasswordSubmitte = true;\n    if (this.manageQtyForm.invalid) {\n    return;\n    }\n    //alert('form fields are validated successfully!');\n    const updatedQuantity: QuantityModel = {\n      quantity: this.manageQtyForm.get('quantity').value,\n      price: this.manageQtyForm.get('price').value,\n      sellingUnitId: this.manageQtyForm.get('sellingUnitId').value,\n      pid: this.manageQtyForm.get('pid').value,\n    };\n    this.store.dispatch(QuantityAction.updateQuantity({quantity:updatedQuantity, pid:this.pid}))\n    }\n  \n    \n    changeUnit(sellunit){\n      \n      this.sellunit = sellunit.target.value;\n      \n    }\n \n \n  \n  //Numeric accepted\n  numberOnly(event): boolean {\n    \n    const charCode = (event.which) ? event.which : event.keyCode;\n    if (charCode > 31 && (charCode < 48 || charCode > 57)) { \n      return false;\n    }\n    \n      return true;\n    \n  }\n  \n   \n    //Numeric and dot accepted\n  numberDotOnly(event): boolean {\n    const charCode = (event.which) ? event.which : event.keyCode;\n    const dot = event.target;\n  \n     if (charCode == 46) { \n      //  console.log('chart',el);\n        if (dot.value.indexOf('.') === -1) { \n            return true; \n        } else { \n            return false; \n        } \n    } else { \n        if (charCode > 31 && (charCode < 48 || charCode > 57)) {\n      return false;\n    }\n    return true;\n  \n  }\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { ShopperService } from '../../../services/shopper.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { exitCode } from 'process';\n\n\n@Component({\n  templateUrl: 'resetpass.component.html'\n})\nexport class ResetPassComponent implements OnInit {\n\n  // Password show and hide\n  addTextType: boolean;\n  confTextType: boolean;\n  oldTextType: boolean;\n  newTextType: boolean;\n  confirmTextType: boolean;\n \n  resetPassForm : FormGroup;\n  isPasswordSubmitte = false;\n\n  //testsub = false;\n\n  constructor(public formBuilder: FormBuilder, \n              private router: Router, private shopperData: ShopperService, \n              private route: ActivatedRoute,// For Edit data\n              private httpClient: HttpClient, private toastr: ToastrService ) { }\n\n  ngOnInit() {\n\n    this.resetPassValidation();\n \n }\n \n\n\n  resetPassValidation(){\n\n    this.resetPassForm = this.formBuilder.group({\n      oldPass: ['', [Validators.required, Validators.pattern(\"((?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%]).{8,12})\")]],\n      newPass: ['', [Validators.required, Validators.pattern(\"((?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%]).{8,12})\")]],\n      confirmPass: ['', [Validators.required, Validators.pattern(\"((?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%]).{8,12})\")]]\n  \n     });\n  \n   }\n\n   get passVal() {\n    return this.resetPassForm.controls;\n    }\n    \n    resetPass(){\n    this.isPasswordSubmitte = true;\n    if (this.resetPassForm.invalid) {\n    return;\n    }\n    alert('form fields are validated successfully!');\n    }\n\n  // Toggle Eye button  \n  toggleAddTextType(){\n    this.addTextType = !this.addTextType;\n  }\n  // Toggle Eye button  \n  toggleConfTextType(){\n    this.confTextType = !this.confTextType;\n  }\n  \n\n\n  // Toggle Eye button\n    toggleOldTextType() {\n    this.oldTextType = !this.oldTextType;\n  }\n\n  // Toggle Eye button\n  toggleNewTextType() {\n    this.newTextType = !this.newTextType;\n  }\n  // Toggle Eye button\n  toggleConfirmTextType(){\n    this.confirmTextType = !this.confirmTextType;\n  }\n\n\n  \n  \n\n\n\n\n \n\n\n\n  \n\n}\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { ToastrService } from 'ngx-toastr';\n\nimport { SettingsService } from '../../../services/settings.service';\nimport { Settings } from './model/settings.model';\nimport { from, Observable } from 'rxjs';\nimport { tap, map } from 'rxjs/operators';\n//NGRX Directory\nimport { Store, select } from \"@ngrx/store\";\nimport { MainState } from '../../../stores/index';//Reducer add state file\nimport * as SettingsAction from '../../../stores/settings/settings.actions';\nimport * as SettingsSelector from '../../../stores/settings/settings.selectors';\n\n@Component({\n  templateUrl: 'settings.component.html'\n})\nexport class SettingsComponent implements OnInit {\n\n //For Validation\n  socialInfoForm: FormGroup;\n  submitted = false;\n\n  //Taken variable from form\n  address: string;\n  email: string;\n  supportPhone: string;\n  altPhone: string;\n  facebookUrl: string;\n  twitterUrl: string;\n  youtubeUrl: string;\n  instagramUrl: string;\n  sid: number;//For update\n  //Declare object\n  //settingsData$: Observable<Settings[]>;\n  settingsData$:any;\n  \n  \n  constructor(public formBuilder: FormBuilder, \n              private router: Router, \n              private route: ActivatedRoute,// For Edit data\n              private httpClient: HttpClient, private toastr: ToastrService,\n              private settingsService: SettingsService, \n              private store: Store<MainState> ) { }\n\n  ngOnInit() {\n\n    this.socialInfoValidation();\n    this.getSettingsData();\n   \n    //Get Data of settings\n     \n\n }\n  //Get Single value from actions and selectors with service using dispatch\n  getSettingsData(){\n    this.store.dispatch(SettingsAction.loadSettings()); \n    const settingsData = this.store.select(\n      \n      SettingsSelector.selectSettings\n    )\n    settingsData.subscribe(currentSettings => {\n      console.log('sty Value->', currentSettings);\n      if(currentSettings[0]){\n       \n        this.sid = currentSettings[0].sid;\n       \n        this.socialInfoForm.patchValue({\n         \n         address: currentSettings[0].address,\n          email: currentSettings[0].email,\n          supportPhone: currentSettings[0].supportPhone,\n          altPhone: currentSettings[0].altPhone,\n          facebookUrl: currentSettings[0].facebookUrl,\n          twitterUrl: currentSettings[0].twitterUrl,\n          youtubeUrl: currentSettings[0].youtubeUrl,\n          instagramUrl: currentSettings[0].instagramUrl,\n          sid: currentSettings[0].sid \n        })\n      }\n    })\n    \n  }\n\n\n socialInfoValidation(){\n\n  this.socialInfoForm = this.formBuilder.group({\n    address: ['', Validators.required],\n    email: ['', [Validators.required, Validators.pattern('^[^@\\\\s]+@[^@\\\\s]+\\\\.[^@\\\\s]+$')]],\n    supportPhone: ['', [Validators.required, Validators.pattern('^((\\\\+91-?)|0)?[0-9]{10}$')]],\n    altPhone: ['', [ Validators.pattern('^((\\\\+91-?)|0)?[0-9]{10}$')]],\n    facebookUrl: [],\n    twitterUrl: [],\n    youtubeUrl: [],\n    instagramUrl: [],\n    sid: null\n   });\n\n }\n \n  get socialVal() {\n  return this.socialInfoForm.controls;\n  }\n  \n  socialInfo(){\n  this.submitted = true;\n  // console.log(this.submitted)\n  if (this.socialInfoForm.invalid) {\n  return;\n  }\n  //alert('form fields are validated successfully!');\n      const updatedSettings = {\n        address: this.socialInfoForm.get('address').value,\n        email: this.socialInfoForm.get('email').value,\n        support_phone: this.socialInfoForm.get('supportPhone').value,\n        alt_phone: this.socialInfoForm.get('altPhone').value,\n        facebook_url: this.socialInfoForm.get('facebookUrl').value,\n        twitter_url: this.socialInfoForm.get('twitterUrl').value,\n        youtube_url: this.socialInfoForm.get('youtubeUrl').value,\n        instagram_url: this.socialInfoForm.get('instagramUrl').value,\n        sid: this.socialInfoForm.get('sid').value\n      };\n\n      const sid = this.socialInfoForm.get('sid').value;\n      //console.log('Main Id-->', this.sid);\n      //console.log('Update Data=>', updatedSettings);\n     \n      this.store.dispatch(SettingsAction.updateSetting({settings:updatedSettings, sid:this.sid}));\n       //Alert msg\n       this.toastr.success('Settings updated successfully', 'Success', {\n        timeOut: 1000 * 2,\n        progressBar: true\n\n      })\n  \n  \n  }\n\n\n //Numeric accepted\nnumberOnly(event): boolean {\n  \n  const charCode = (event.which) ? event.which : event.keyCode;\n  if (charCode > 31 && (charCode < 48 || charCode > 57)) { \n    return false;\n  }\n  \n    return true;\n  \n}\n \n\n}\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { FormGroup, FormControl, Validators, FormBuilder, Form } from \"@angular/forms\";\nimport { ToastrService } from \"ngx-toastr\";\n\nimport {ShopperService} from 'app/services/shopper.service'\n\n\n@Component({\n  selector: 'app-addressinfo',\n  templateUrl: './addressinfo.component.html',\n})\nexport class AddressinfoComponent implements OnInit {\n  addressInfoForm: FormGroup;\n  addressSubmitted = false;\n\n  country: string;\n  state: string;\n  states: any;\n  countries: any;\n\n  constructor(\n    private shopperData: ShopperService,\n    public formBuilder: FormBuilder,\n    private route: ActivatedRoute, //to get id for edit and view\n    private toastr: ToastrService\n  ) { }\n\n  ngOnInit(): void {\n    this.getStateValue();\n    this.getCountryValue();\n    this.addressInfoValidation();\n  }\n\n    //For State Selection And fetch to select field\n\n    public getStateValue() {\n      this.shopperData.getState().subscribe((states) => {\n        this.states = states;\n        console.log(\"All States\", this.states);\n      });\n    }\n\n    //For Country Selection And fetch to select field\n\n    public getCountryValue() {\n      this.shopperData.getCountry().subscribe((countries) => {\n        this.countries = countries;\n        console.log(\"All Country Data->\", this.countries);\n      });\n    }\n\n    changeCountryVal(country) {\n      this.country = country.target.value.split(\" \")[1];\n    }\n    changeState(state) {\n      this.state = state.target.value;\n    }\n\n    //Address validation\n  addressInfoValidation() {\n    this.addressInfoForm = this.formBuilder.group({\n      shopName: [\"\", Validators.required],\n      streetName: [\"\", Validators.required],\n      countryName: [\"\", Validators.required],\n      stateName: [\"\", Validators.required],\n      cityName: [\"\", Validators.required],\n      zipCode: [\"\", [Validators.required, Validators.pattern(\"[0-9]{4,6}\")]],\n    });\n  }\n\n  get addressVal() {\n    return this.addressInfoForm.controls;\n  }\n\n  addressInfo() {\n    this.addressSubmitted = true;\n    if (this.addressInfoForm.invalid) {\n      return;\n    }\n    //alert(\"form fields are validated successfully!\");\n\n     //After click on save button toggle to fields disable\n     var saveBtn = document.getElementsByClassName(\"address_btn\");\n     var editPencil = document.getElementsByClassName('address_pencil');\n     var invisibleBasicInput:any = document.getElementsByClassName('address_input');\n\n\n        editPencil[0].setAttribute('style', 'display : block');\n        saveBtn[0].setAttribute('style', 'display : none');\n\n       for(var i = 0; i!=invisibleBasicInput.length; i++){\n         invisibleBasicInput[i].removeAttribute(\"disabled\",true);\n       }\n     //Alert msg\n     console.dir(editPencil[0])\n     this.toastr.success('Details submitted successfully', 'Basic details editted', {\n       timeOut: 1000,\n       progressBar: false\n     })\n     //After click on save button toggle to fields disable End\n\n  }\n\n\n  addressShowHide() {\n    var saveBtn = document.getElementsByClassName(\"address_btn\");\n    var editPencil = document.getElementsByClassName(\"address_pencil\");\n    var invisibleAddressInput: any = document.getElementsByClassName(\"address_input\");\n\n    for (var i = 0; i != editPencil.length; i++) {\n      editPencil[i].setAttribute(\"style\", \"display : none\");\n      saveBtn[i].setAttribute(\"style\", \"display : block\");\n    }\n    for (var i = 0; i != invisibleAddressInput.length; i++) {\n      invisibleAddressInput[i].removeAttribute(\"disabled\", false);\n    }\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ToastrService } from \"ngx-toastr\";\nimport { FormGroup, FormControl, Validators, FormBuilder, Form } from \"@angular/forms\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\n\nimport { ShopperService } from \"app/services/shopper.service\"\n\n@Component({\n  selector: 'app-basicinfo',\n  templateUrl: './basicinfo.component.html',\n})\nexport class BasicinfoComponent implements OnInit {\n  genders: any = [\"Male\", \"Female\", \"Others\"];\n  gender: string;\n\n  //validation\n  basicInfoForm: FormGroup;\n  submitted = false;\n\n  //For get data fetch into field\n  userData: any;\n  viewData: any;\n  u_id: any;\n\n  //ngmodels\n  f_name:any;\n  m_name:any;\n  l_name:any;\n  email:any;\n  phone:any;\n\n\n  constructor(\n    public formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private toastr: ToastrService,\n    private shopperData: ShopperService,\n  ) { }\n\n  ngOnInit(): void {\n    this.getUserData();\n    this.u_id = this.route.snapshot.params[\"u_id\"];\n    this.basicInfoValidation();\n    this.disabledbydefault()\n  }\n\n  changeGender(gender) {\n    this.gender = gender.target.value.split(\" \")[1];\n  }\n  disabledbydefault() {\n    var invisibleBasicInput: any = document.getElementsByClassName( \"basic_input\");\n    var invisibleAddressInput: any = document.getElementsByClassName(\"address_input\" );\n\n    for (var i = 0; i != invisibleBasicInput.length; i++) {\n      invisibleBasicInput[i].setAttribute(\"disabled\", true);\n    }\n\n    for (var i = 0; i != invisibleAddressInput.length; i++) {\n      invisibleAddressInput[i].setAttribute(\"disabled\", true);\n    }\n  }\n\n  basicShowHide() {\n    var saveBtn = document.getElementsByClassName(\"basic_btn\");\n    var editPencil = document.getElementsByClassName(\"basic_pencil\");\n    var invisibleBasicInput: any = document.getElementsByClassName(\"basic_input\");\n\n    for (var i = 0; i != editPencil.length; i++) {\n      editPencil[i].setAttribute(\"style\", \"display : none\");\n      saveBtn[i].setAttribute(\"style\", \"display : block\");\n    }\n    for (var i = 0; i != invisibleBasicInput.length; i++) {\n      invisibleBasicInput[i].removeAttribute(\"disabled\", false);\n    }\n  }\n\n\n  //  Form Validation reactive\n  basicInfoValidation() {\n    this.basicInfoForm = this.formBuilder.group({\n      firstName: [\"\", Validators.required],\n      middleName: [],\n      lastName: [\"\", Validators.required],\n      genderName: [\"\", Validators.required],\n      Email: [\"\", [Validators.pattern(\"^[^@\\\\s]+@[^@\\\\s]+\\\\.[^@\\\\s]+$\")]],\n      phoneNumber: [\n        \"\",\n        [Validators.required, Validators.pattern(\"^((\\\\+91-?)|0)?[0-9]{10}$\")],\n      ],\n    });\n  }\n\n  get basicVal() {\n    return this.basicInfoForm.controls;\n  }\n\n\n  basicInfo() {\n    this.submitted = true;\n    if (this.basicInfoForm.invalid) {\n      return;\n    }\n    //alert('form fields are validated successfully!');\n     //After click on save button toggle to fields disable\n     var saveBtn = document.getElementsByClassName(\"basic_btn\");\n     var editPencil = document.getElementsByClassName(\"basic_pencil\");\n     var invisibleBasicInput: any = document.getElementsByClassName(\"basic_input\");\n     console.log('Invisible', invisibleBasicInput);\n\n     for (var i = 0; i != editPencil.length; i++) {\n       console.log('Invisible', invisibleBasicInput);\n       editPencil[i].setAttribute(\"style\", \"display : block\");\n       saveBtn[i].setAttribute(\"style\", \"display : none\");\n     }\n \n     for (var i = 0; i != invisibleBasicInput.length; i++) {\n      \n       invisibleBasicInput[i].removeAttribute(\"disabled\", true);\n       \n     }\n     \n     \n     \n //After click on save button toggle to fields disable End\n    //Alert msg\n    this.toastr.success(\n      \"Details submitted successfully\",\n      \"Basic details editted\",\n      {\n        timeOut: 1000,\n        progressBar: false,\n      }\n    );\n      \n\n   \n    \n  }\n\n\n\n  getUserData() {\n    this.shopperData.getUserData().subscribe((data) => {\n      this.userData = data;\n      console.log(\"all user details\", this.userData);\n    });\n  }\n\n}\n","import { Component, OnInit } from \"@angular/core\";\n\n\n@Component({\n  templateUrl: \"myinfo.component.html\",\n})\nexport class MyinfoComponent implements OnInit {\n\n  constructor(\n\n  ) {}\n\n  ngOnInit() {}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\n// required modules\nimport { ThemeRoutingModule } from '../theme-routing.module';\nimport { FormsModule, ReactiveFormsModule, NgForm } from '@angular/forms'; //Needed\nimport { AngularEditorModule } from '@kolkov/angular-editor';\n\n//Directive\n//import { ConfirmEqualValidatorDirective } from '../confirm-equal-validator.directive';\n//import { ProtectedfieldDirective } from '../middlewares/protectedfield.directive';\n\n//components\nimport {BasicinfoComponent} from './basicinfo/basicinfo.component';\nimport {AddressinfoComponent} from './addressInfo/addressinfo.component';\nimport {OthersinfoComponent} from './othersInfo/othersinfo.component';\nimport {MyinfoComponent} from './myinfo.component';\nimport { ShopperlistComponent } from './shopperlist.component';\n\n\n@NgModule({\n  declarations: [\n\n    //Directives\n    //ConfirmEqualValidatorDirective,\n    //ProtectedfieldDirective,\n\n    //Components\n    BasicinfoComponent,\n    AddressinfoComponent,\n    OthersinfoComponent,\n    MyinfoComponent,\n    ShopperlistComponent,\n  ],\n  imports: [\n    CommonModule,\n    ThemeRoutingModule,\n    FormsModule, //Needed\n    AngularEditorModule,\n    //NgForm, //Needed\n    ReactiveFormsModule, //Needed\n  ]\n})\nexport class MyinfoModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ToastrService } from \"ngx-toastr\";\nimport { FormGroup, FormControl, Validators, FormBuilder, Form } from \"@angular/forms\";\n\n@Component({\n  selector: 'app-othersinfo',\n  templateUrl: './othersinfo.component.html',\n})\nexport class OthersinfoComponent implements OnInit {\n    //First image preview\n    public imagePath;\n    imgURL: any = \"assets/img/avatars/6.jpg\";\n    public message: string;\n  \n    //Second image preview\n    public shopImagePath;\n    shopImgURL: any = \"assets/img/avatars/6.jpg\";\n    public shopMessage: string;\n    \n    //validation\n    imageInfoForm: FormGroup;\n    imageSubmitted = false;\n  \n  constructor(\n    private toastr: ToastrService,\n    public formBuilder: FormBuilder,\n  ) { }\n\n  ngOnInit(){\n    this.imageInfoValidation();\n  }\n  imageInfoValidation() {\n    this.imageInfoForm = this.formBuilder.group({\n      shopImage: [\"\", Validators.required],\n    });\n  }\n\n  get imgVal() {\n    return this.imageInfoForm.controls;\n  }\n\n  imageInfo() {\n    this.imageSubmitted = true;\n    if (this.imageInfoForm.invalid) {\n      return;\n    }\n    //alert(\"form fields are validated successfully!\");\n  }\n\n  imageShowHide() {\n    var ImageInputsAndSaveBtn = document.getElementsByClassName(\"image_edit\");\n    var labelx = document.getElementsByClassName(\"image_label\");\n\n    for (var i = 0; i != ImageInputsAndSaveBtn.length; i++) {\n      labelx[0].setAttribute(\"style\", \"display : none\");\n      ImageInputsAndSaveBtn[i].setAttribute(\"style\", \"display : block\");\n    }\n  }\n\n\n  imageSave() {\n    var hiddeninputs = document.getElementsByClassName(\"image_edit\");\n\n    var labelx = document.getElementsByClassName(\"image_label\");\n\n    for (var i = 0; i != hiddeninputs.length; i++) {\n      labelx[0].setAttribute(\"style\", \"display : block\");\n      hiddeninputs[i].setAttribute(\"style\", \"display: none\");\n    }\n\n    //Alert msg\n    this.toastr.success(\n      \"Details submitted successfully\",\n      \"Other details editted\",\n      {\n        timeOut: 1000,\n        progressBar: false,\n      }\n    );\n  }\n\n   //Single Image Preview Upload\n\n   preview(files) {\n    if (files.length === 0) return;\n\n    var mimeType = files[0].type;\n    if (mimeType.match(/image\\/*/) == null) {\n      // this.message = \"Only images are supported.\";\n      return;\n    }\n\n    var reader = new FileReader();\n    this.imagePath = files;\n    reader.readAsDataURL(files[0]);\n    reader.onload = (_event) => {\n      this.imgURL = reader.result;\n    };\n  }\n\n  //Single Image Preview Upload\n  shopPreview(files) {\n    if (files.length === 0) return;\n\n    var mimeType = files[0].type;\n    if (mimeType.match(/image\\/*/) == null) {\n      //this.shopMessage = \"Only images are supported.\";\n      return;\n    }\n\n    var reader = new FileReader();\n    this.shopImagePath = files;\n    reader.readAsDataURL(files[0]);\n    reader.onload = (_event) => {\n      this.shopImgURL = reader.result;\n    };\n  }\n\n  \n  \n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ShopperService } from '../../../services/shopper.service';\nimport { HttpClient } from '@angular/common/http';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  templateUrl: 'shopperlist.component.html'\n})\nexport class ShopperlistComponent implements OnInit {\n\n  //List data property\n  userData: any;\n\n\n  constructor(private shopperData: ShopperService, \n    private router: Router, private httpClient : HttpClient,\n    private toastr: ToastrService) { }\n\n  \n  \n  ngOnInit(){\n\n\n    this.getUserData();\n  }\n\n  \n  getUserData(){\n    this.shopperData.getUserData().subscribe(data => {\n\n      this.userData= data;\n      console.log(this.userData);\n    })\n\n  }\n\n\n\n\n}\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nimport { AdmininfoComponent } from './admininfo/admininfo/admininfo.component';\nimport { MyinfoComponent } from './shoperInfo/myinfo.component';\nimport { ProductComponent } from './productinfo/product/product.component'\nimport { ShopperlistComponent } from './shoperInfo/shopperlist.component';\nimport { CustomerComponent } from './customer/customer.component';\nimport { CustomeraddComponent } from './customer/customeradd.component';\nimport { ProductlistComponent } from './productinfo/productlist.component';\nimport { BanneraddComponent } from './banner/banneradd.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { CategoryaddComponent } from './category/categoryadd.component';\nimport { CategorylistComponent } from './category/categorylist.component';\nimport { ResetPassComponent } from './resetpass/resetpass.component';\nimport { from } from 'rxjs';\n\nconst routes: Routes = [\n  {\n    path: '',\n    data: {\n      title: 'Theme'\n    },\n    children: [\n     \n      {\n        path: '',\n        redirectTo: 'product'\n      },\n\n      {\n        path: 'product',\n        component: ProductComponent,\n        data: {\n          title: 'Product'\n        }\n      },\n      {\n        path: 'product/edit/:pid',\n        component: ProductComponent,\n        data: {\n          title: 'Product'\n        }\n      },\n      {\n        path: 'myinfo',\n        component: MyinfoComponent,\n        data: {\n          title: 'Myinfo'\n        }\n      },\n\n      {\n        path: 'myinfo/:u_id',\n        component: MyinfoComponent,\n        data: {\n          title: 'Myinfo'\n        }\n      },\n\n      {\n        path: 'shopperlist',\n        component: ShopperlistComponent,\n        data: {\n          title: 'Shopperlist'\n        }\n      },\n\n      {\n        path: 'customer',\n        component: CustomerComponent,\n        data: {\n          title: 'Customer'\n        }\n      },\n      {\n        path: 'customeradd',\n        component: CustomeraddComponent,\n        data: {\n          title: 'Customeradd'\n        }\n      },\n\n\n\n      {\n        path: 'productlist',\n        component: ProductlistComponent,\n        data: {\n          title: 'Productlist'\n        }\n      },\n      {\n        path: 'categoryadd',\n        component: CategoryaddComponent,\n        data: {\n          title: 'Categoryadd'\n        }\n      },\n\n\n      {\n        path: 'categoryadd/edit/:cat_id',\n        component: CategoryaddComponent,\n        data: {\n          title: 'Categoryedit'\n        }\n      },\n      {\n        path: 'categorylist',\n        component: CategorylistComponent,\n        data: {\n          title: 'Categorylist'\n        }\n      },\n\n\n      {\n        path: 'banneradd',\n        component: BanneraddComponent,\n        data: {\n          title: 'Banner'\n        }\n      },\n\n      {\n        path: 'admininfo',\n        component: AdmininfoComponent,\n        data: {\n          title: 'Admin'\n        }\n      },\n      {\n        path: 'settings',\n        component: SettingsComponent,\n        data: {\n          title: 'Settings'\n        }\n      },\n\n      {\n        path: 'resetpass',\n        component: ResetPassComponent,\n        data: {\n          title: 'Resetpass'\n        }\n      }\n\n     \n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ThemeRoutingModule {}\n","// Angular\nimport { CommonModule } from '@angular/common';\n//For Spinners\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { AngularEditorModule } from '@kolkov/angular-editor';\nimport {MyinfoModule} from \"./shoperInfo/myinfo.module\";\nimport { AdminInfoModule } from './admininfo/admininfo.module';\nimport { ProductinfoModule } from './productinfo/productinfo.module';\n// for getting ng model\nimport { FormsModule, ReactiveFormsModule, NgForm } from '@angular/forms'; //Needed\n\n//protected-Field & Equal-field validation Directive\n//import { ConfirmEqualValidatorDirective } from './confirm-equal-validator.directive';\n//import { ProtectedfieldDirective } from '../../middlewares/protectedfield.directive';//Needed\n\n//NGRX Modules\n//import { StoreModule } from '@ngrx/store';\n//For Spinners\nimport { NgxSpinnerModule } from \"ngx-spinner\";\n//For Spinners2\nimport { LoadingBarRouterModule } from '@ngx-loading-bar/router';\nimport { LoadingBarModule } from '@ngx-loading-bar/core';\n\n\n\nimport { CustomerComponent } from './customer/customer.component';\nimport { CustomeraddComponent } from './customer/customeradd.component';\nimport { BanneraddComponent } from './banner/banneradd.component';\nimport { CategoryaddComponent } from './category/categoryadd.component';\nimport { CategorylistComponent } from './category/categorylist.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { ResetPassComponent } from './resetpass/resetpass.component';\n\n\n// Theme Routing\nimport { ThemeRoutingModule } from './theme-routing.module';\nimport { from } from 'rxjs';\n//Confirmation edit-delete\nimport { ConfirmationPopoverModule } from 'angular-confirmation-popover';//Confirmation Popup \n\n\n@NgModule({\n  imports: [\n    CommonModule, //Needed\n    ThemeRoutingModule,\n    FormsModule, //Needed\n    AngularEditorModule,\n    //NgForm, //Needed\n    NgxSpinnerModule,//For Spinners\n    LoadingBarRouterModule,//For Spinners2\n    LoadingBarModule,//For Spinners2\n    ReactiveFormsModule, //Needed \n    MyinfoModule,\n    ConfirmationPopoverModule.forRoot({\n      confirmButtonType: 'success', // set defaults here\n    }),\n    AdminInfoModule,\n    ProductinfoModule,\n    //NGRX Module import\n    //StoreModule.forRoot({}),\n  ],\n  declarations: [\n   \n    CustomerComponent,\n    CustomeraddComponent,\n    BanneraddComponent,\n    CategoryaddComponent,\n    CategorylistComponent,\n    SettingsComponent,\n    ResetPassComponent,\n    //Directives beeded\n    //ConfirmEqualValidatorDirective,\n    //ProtectedfieldDirective,\n  ],\n\n  schemas: [CUSTOM_ELEMENTS_SCHEMA], //For Spinners\n\n\n\n})\nexport class ThemeModule { }\n"],"sourceRoot":"webpack:///"}