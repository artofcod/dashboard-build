{"version":3,"sources":["./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/containers/default-layout/default-layout.component.html","./src/app/sample/sample.component.html","./src/app/views/error/404.component.html","./src/app/views/error/500.component.html","./src/app/views/forgetpassword/forgetpassword.component.html","./src/app/views/login/login.component.html","./src/app/views/otp/otp.component.html","./src/app/views/register/register.component.html","./src/app/views/resetpassword/resetpassword.component.html","./src/$_lazy_route_resource lazy namespace object","./src/app/_nav.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app.routing.ts","./src/app/containers/default-layout/default-layout.component.ts","./src/app/containers/default-layout/index.ts","./src/app/containers/index.ts","./src/app/middlewares/protectedfield.directive.ts","./src/app/sample/sample.component.css","./src/app/sample/sample.component.ts","./src/app/services/auth/auth.guard.service.ts","./src/app/services/auth/auth.redirector.service.ts","./src/app/services/auth/auth.service.ts","./src/app/services/auth/heade.auth.module.ts","./src/app/services/auth/token.interceptor.ts","./src/app/services/product.service.ts","./src/app/services/quantity.service.ts","./src/app/services/settings.service.ts","./src/app/stores/index.ts","./src/app/stores/product/product.actions.ts","./src/app/stores/product/product.effects.ts","./src/app/stores/product/product.reducer.ts","./src/app/stores/quantity/quantity.actions.ts","./src/app/stores/quantity/quantity.effects.ts","./src/app/stores/quantity/quantity.reducer.ts","./src/app/stores/settings/settings.actions.ts","./src/app/stores/settings/settings.effects.ts","./src/app/stores/settings/settings.reducer.ts","./src/app/views/error/404.component.ts","./src/app/views/error/500.component.ts","./src/app/views/forgetpassword/forgetpassword.component.ts","./src/app/views/login/login.component.ts","./src/app/views/otp/otp.component.ts","./src/app/views/register/confirm-equal-validator.directive.ts","./src/app/views/register/register.component.ts","./src/app/views/register/service/reg.service.ts","./src/app/views/register/unique-validator.directive.ts","./src/app/views/resetpassword/resetpassword.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"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","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-in\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-in.js\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-sg\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./en-sg.js\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fil\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fil.js\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-deva\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-deva.js\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./oc-lnc\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./oc-lnc.js\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tk\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tk.js\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-mo\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-mo.js\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","export default \"<!--ngx-loading-bar [height]=\\\"'20px'\\\"></ngx-loading-bar-->\\n\\n\\n<app-header\\n  [navbarBrandRouterLink]=\\\"['/dashboard']\\\"\\n  [fixed]=\\\"true\\\"\\n  [navbarBrandFull]=\\\"{src: 'assets/img/brand/logo2.png', width: 89, height: 25, alt: 'Local2Vocals Logo'}\\\"\\n  [navbarBrandMinimized]=\\\"{src: 'assets/fav.png', width: 30, height: 30, alt: 'Local2Vocals Logo'}\\\"\\n  [sidebarToggler]=\\\"'lg'\\\"\\n  [asideMenuToggler]=\\\"'lg'\\\">\\n  <!--ul class=\\\"nav navbar-nav d-md-down-none\\\">\\n    <li class=\\\"nav-item px-3\\\">\\n      <a class=\\\"nav-link\\\" href=\\\"#\\\">Dashboard</a>\\n    </li>\\n    <li class=\\\"nav-item px-3\\\">\\n      <a class=\\\"nav-link\\\" href=\\\"#\\\">Users</a>\\n    </li>\\n    <li class=\\\"nav-item px-3\\\">\\n      <a class=\\\"nav-link\\\" href=\\\"#\\\">Settings</a>\\n    </li>\\n  </ul-->\\n  <ngx-spinner></ngx-spinner>\\n  <!---Notification PopUp Code Start---->\\n  <div class=\\\"modal fade modal-box\\\" id=\\\"notifyModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"notifyModalLabel\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n          <h5 class=\\\"modal-title\\\" id=\\\"notifyModalLabel\\\">Notifications</h5>\\n          <!--button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n          </button-->\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n          <div class=\\\"all_notification\\\">\\n          <p class=\\\"notifypara\\\">Services like AWS and Azure is providing notification frameworks. If you use any of those then you may not need to worry about the table structures. All you need is to trigger the notification from different point of your application.</p>\\n          <p class=\\\"notifypara\\\">For example when a user likes something from another user, then your application can trigger a send event (can be sent to thousands of users with a single API call). The API will store and forward the record to the destination user or users.\\n            </p>\\n          <p class=\\\"notifypara\\\">The implementation depends on the design, where it will go in future and the environment you will implement in. You might choose a twitter-esque implementation, a SAN-backed system of XML, Relational Databases, Hadoop and tons of others.</p>\\n          <p class=\\\"notifypara\\\">Paradoxically, it’s rather challenging to come up with a real world example of an observer pattern that doesn’t involve computing, because nearly every technological service or device we use on a daily basis implements an observer pattern in one way or another. App notifications on your phone or email alerts from your favorite shopping site are just two of the extremely common observer pattern scenarios many of us frequently experience.</p>\\n          <p class=\\\"notifypara\\\">One slightly less technical real world example of the observer pattern is when you sign up for a magazine subscription, such as WIRED (one of my personal favorites). While computers are obviously handling all the logic behind-the-scenes, the observer pattern is still being used in this case. You (an observer) have subscribed to a magazine provider. When the provider publishes a new issue (the data), you receive it in the mail a few days later. Critically, this is not a one-to-one relationship, in which the provider is sending the notification (magazine) only to you. Instead, they’re able to send it to thousands of people all at once, just as most digital services do when you sign-up for their email newsletter.</p>\\n        </div>\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n          \\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <!---Notification PopUp Code End---->\\n  <!---Notification PopUp Code Start---->\\n  <div class=\\\"modal fade modal-box\\\" id=\\\"locationModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"locationModalLabel\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n          <h5 class=\\\"modal-title\\\" id=\\\"locationModalLabel\\\">Location</h5>\\n          <!--button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n          </button-->\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n          <div class=\\\"all_notification\\\">\\n          <p class=\\\"locationpara\\\">Howard Administration Building\\n            2800 University Blvd N\\n            Jacksonville, FL 32211</p>\\n            <p class=\\\"locationmap\\\"><iframe src=\\\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3442.92357853116!2d-81.60780438487761!3d30.35312173177107!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x0%3A0x253b9cdf84de4cff!2sHoward%20Administration%20Building!5e0!3m2!1sen!2sin!4v1596558383156!5m2!1sen!2sin\\\" width=\\\"450\\\" height=\\\"150\\\" frameborder=\\\"0\\\" style=\\\"border:0;\\\" allowfullscreen=\\\"\\\" aria-hidden=\\\"false\\\" tabindex=\\\"0\\\"></iframe></p>\\n          \\n        </div>\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n          \\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <!---Notification PopUp Code End---->\\n  <ul class=\\\"nav navbar-nav ml-auto\\\">\\n    <li class=\\\"nav-item d-md-down-none\\\">\\n      <a class=\\\"nav-link\\\" href=\\\"#\\\" data-toggle=\\\"modal\\\" data-target=\\\"#notifyModal\\\"><i class=\\\"icon-bell\\\"></i><span class=\\\"badge badge-pill badge-danger\\\">5</span></a>\\n    </li>\\n    <!--li class=\\\"nav-item d-md-down-none\\\">\\n      <a class=\\\"nav-link\\\" href=\\\"#\\\"><i class=\\\"icon-list\\\"></i></a>\\n    </li-->\\n    <li class=\\\"nav-item d-md-down-none\\\">\\n      <a class=\\\"nav-link\\\" href=\\\"#\\\" data-toggle=\\\"modal\\\" data-target=\\\"#locationModal\\\"><i class=\\\"icon-location-pin\\\"></i></a>\\n    </li>\\n\\n    \\n\\n\\n    <li class=\\\"nav-item dropdown\\\" dropdown placement=\\\"bottom right\\\">\\n      <a class=\\\"nav-link\\\" data-toggle=\\\"dropdown\\\" href=\\\"#\\\" \\n      role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\" dropdownToggle (click)=\\\"false\\\">\\n\\n        <img title=\\\"Raja\\\" src=\\\"assets/img/avatars/6.jpg\\\" class=\\\"img-avatar\\\" alt=\\\"admin@bootstrapmaster.com\\\"/>\\n      </a>\\n      <div class=\\\"dropdown-menu dropdown-menu-right\\\" *dropdownMenu aria-labelledby=\\\"simple-dropdown\\\">\\n        <div class=\\\"dropdown-header text-center\\\"><strong>Account</strong></div>\\n        <!--a class=\\\"dropdown-item\\\" href=\\\"#\\\"><i class=\\\"fa fa-bell-o\\\"></i> Updates<span class=\\\"badge badge-info\\\">42</span></a-->\\n        <!--a class=\\\"dropdown-item\\\" href=\\\"#\\\"><i class=\\\"fa fa-envelope-o\\\"></i> Messages<span class=\\\"badge badge-success\\\">42</span></a-->\\n        <a class=\\\"dropdown-item\\\" routerLink=\\\"/theme/myinfo\\\"><i class=\\\"fa fa-user\\\"></i> Profile</a> \\n        <a class=\\\"dropdown-item\\\" href=\\\"#\\\" data-toggle=\\\"modal\\\" data-target=\\\"#notifyModal\\\"><i class=\\\"icon-bell\\\"></i> Notification</a> \\n        <a class=\\\"dropdown-item\\\" href=\\\"#\\\" data-toggle=\\\"modal\\\" data-target=\\\"#locationModal\\\"><i class=\\\"icon-location-pin\\\"></i> Location</a>  \\n        <a class=\\\"dropdown-item\\\" href=\\\"#\\\"><i class=\\\"fa fa-tasks\\\"></i> Selling History<span class=\\\"badge badge-danger\\\">42</span></a>\\n        <!--a class=\\\"dropdown-item\\\" href=\\\"#\\\"><i class=\\\"fa fa-comments\\\"></i> Comment<span class=\\\"badge badge-warning\\\">42</span></a-->\\n        <!--div class=\\\"dropdown-header text-center\\\"><strong>Settings</strong></div-->\\n        \\n        <!--a class=\\\"dropdown-item\\\" href=\\\"#\\\"><i class=\\\"fa fa-wrench\\\"></i> Setting</a-->\\n        <!--a class=\\\"dropdown-item\\\" href=\\\"#\\\"><i class=\\\"fa fa-usd\\\"></i> Payments<span class=\\\"badge badge-dark\\\">42</span></a>\\n        <a class=\\\"dropdown-item\\\" href=\\\"#\\\"><i class=\\\"fa fa-file\\\"></i> Projects<span class=\\\"badge badge-primary\\\">42</span></a-->\\n        <div class=\\\"divider\\\"></div>\\n        <!--a class=\\\"dropdown-item\\\" href=\\\"#\\\"><i class=\\\"fa fa-shield\\\"></i> Lock account</a-->\\n        <a class=\\\"dropdown-item\\\" href=\\\"#\\\" (click)='logout()'><i class=\\\"fa fa-lock\\\"></i> Logout</a>\\n      </div >\\n    </li>\\n  </ul>\\n</app-header>\\n<div class=\\\"app-body\\\">\\n  <app-sidebar #appSidebar [fixed]=\\\"true\\\" [display]=\\\"'lg'\\\" [minimized]=\\\"sidebarMinimized\\\" (minimizedChange)=\\\"toggleMinimize($event)\\\">\\n    <app-sidebar-nav [navItems]=\\\"navItems\\\" [perfectScrollbar] [disabled]=\\\"appSidebar.minimized\\\"></app-sidebar-nav>\\n    <app-sidebar-minimizer></app-sidebar-minimizer>\\n  </app-sidebar>\\n \\n  <main class=\\\"main\\\">\\n    \\n    \\n    <cui-breadcrumb>\\n      \\n      <li class=\\\"breadcrumb-menu d-md-down-none\\\">\\n        <div class=\\\"btn-group\\\" role=\\\"group\\\" aria-label=\\\"Button group with nested dropdown\\\">\\n          <!-- a class=\\\"btn\\\" href=\\\"#\\\"><i class=\\\"icon-speech\\\"></i></a>\\n          <a class=\\\"btn\\\" [routerLink]=\\\"['/dashboard']\\\"><i class=\\\"icon-graph\\\"></i> &nbsp;Dashboard</a>\\n          <a class=\\\"btn\\\" href=\\\"#\\\"><i class=\\\"icon-settings\\\"></i> &nbsp;Settings</a-->\\n        </div>\\n      </li>\\n    </cui-breadcrumb>\\n    \\n    <div class=\\\"container-fluid\\\">\\n      <router-outlet></router-outlet>\\n    </div>\\n  </main>\\n  \\n</div>\\n<app-footer>\\n  <span><a href=\\\"#\\\">All Right reserved</a> &copy; 2020 Local2Vocals.</span>\\n  <span class=\\\"ml-auto\\\">Powered by <a href=\\\"#\\\">Local2Vocals</a></span>\\n</app-footer>\\n\";","export default \"<!--button (click)=\\\"openConfirmationDialog()\\\" (confirm)=\\\"confirmClicked = true\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\">Open dialog</button-->\\n<button\\n      class=\\\"btn btn-primary\\\"\\n      mwlConfirmationPopover\\n      [popoverTitle]=\\\"popoverTitle\\\"\\n      [popoverMessage]=\\\"popoverMessage\\\"\\n      placement=\\\"left\\\"\\n      (confirm)=\\\"removeListElement(i)\\\"\\n      (cancel)=\\\"cancelClicked = true\\\"\\n    >\\n      Click me!\\n    </button>\\n<p>Open the console to see log statements.</p>\";","export default \"<div class=\\\"app flex-row align-items-center\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row justify-content-center\\\">\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"clearfix\\\">\\n          <h1 class=\\\"float-left display-3 mr-4\\\">404</h1>\\n          <h4 class=\\\"pt-3\\\">Oops! You're lost.</h4>\\n          <p class=\\\"text-muted\\\">The page you are looking for was not found.</p>\\n        </div>\\n        <div class=\\\"input-prepend input-group\\\">\\n          <div class=\\\"input-group-prepend\\\">\\n            <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\n          </div>\\n          <input id=\\\"prependedInput\\\" class=\\\"form-control\\\" size=\\\"16\\\" type=\\\"text\\\" placeholder=\\\"What are you looking for?\\\">\\n          <span class=\\\"input-group-append\\\">\\n            <button class=\\\"btn btn-info\\\" type=\\\"button\\\">Search</button>\\n          </span>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";","export default \"<div class=\\\"app flex-row align-items-center\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row justify-content-center\\\">\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"clearfix\\\">\\n          <h1 class=\\\"float-left display-3 mr-4\\\">500</h1>\\n          <h4 class=\\\"pt-3\\\">Houston, we have a problem!</h4>\\n          <p class=\\\"text-muted\\\">The page you are looking for is temporarily unavailable.</p>\\n        </div>\\n        <div class=\\\"input-prepend input-group\\\">\\n          <div class=\\\"input-group-prepend\\\">\\n            <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\n          </div>\\n          <input id=\\\"prependedInput\\\" class=\\\"form-control\\\" size=\\\"16\\\" type=\\\"text\\\" placeholder=\\\"What are you looking for?\\\">\\n          <span class=\\\"input-group-append\\\">\\n            <button class=\\\"btn btn-info\\\" type=\\\"button\\\">Search</button>\\n          </span>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";","export default \"<div class=\\\"app-body\\\">\\n  <main class=\\\"main d-flex align-items-center\\\">\\n    <div class=\\\"container\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-8 mx-auto\\\">\\n          <div class=\\\"card-group\\\">\\n            <div class=\\\"card p-4 frogetpass_enter\\\">\\n              <div class=\\\"card-body\\\">\\n                <form id=\\\"forgetPassword\\\" name=\\\"forgetPassword\\\" [formGroup]=\\\"forgetPassword\\\" (ngSubmit)=\\\"forgetPassword.valid && onSubmit()\\\">\\n                  <h1>Forget Password</h1>\\n                  <p class=\\\"text-muted\\\">Type your valid existing phone number</p>\\n                  <div class=\\\"input-group mb-3\\\" >\\n                    <div class=\\\"input-group-prepend\\\">\\n                      <span class=\\\"input-group-text\\\"><i class=\\\"icon-phone\\\"></i></span>\\n                    </div>\\n                    \\n                    \\n\\n                      <!--------------Validation Start-->\\n\\n                      <input type=\\\"text\\\" autocomplete=\\\"phone\\\" placeholder=\\\"Phone*\\\" class=\\\"form-control\\\" id=\\\"phone\\\"  [(ngModel)]=\\\"phone\\\"\\n                      formControlName=\\\"phone\\\" appProtectedfield\\n                      [ngClass]=\\\"{'is-invalid': forgetPassword.get('phone').touched && forgetPassword.get('phone').invalid}\\\" />\\n                      <div *ngIf= \\\"forgetPassword.get('phone').touched && forgetPassword.get('phone').invalid\\\" class=\\\"invalid-feedback\\\">\\n                      <div *ngIf=\\\"forgetPassword.get('phone').errors.required\\\"  class=\\\"error_msg\\\">Phone is required</div>\\n                      <div *ngIf=\\\"forgetPassword.get('phone').errors.pattern\\\" class=\\\"error_msg\\\">Type valid phone number 10 charecters</div>\\n                    </div>\\n\\n\\n\\n                      <!--------------Validation End-->\\n\\n                  </div>\\n                 \\n                  <div class=\\\"row next_button \\\">\\n                    <div class=\\\"col-6\\\">\\n                      <button type=\\\"button\\\" (Click)=\\\"forgetPass()\\\"  class=\\\"btn btn-primary px-4\\\" [disabled] = \\\"!forgetPassword.valid\\\">Next</button>\\n                    </div>\\n                    \\n                  </div>\\n                  <div *ngIf=\\\"incorrectForgetpass\\\" class=\\\"alert alert-danger\\\"> {{ errMsg }} </div>\\n                </form>\\n              </div>\\n            </div>\\n\\n\\n            <!--------------------Right Blue Colour Sign Up Start-->\\n            <div class=\\\"card text-white bg-primary py-5 d-md-down-none\\\" style=\\\"width:44%\\\">\\n              <div class=\\\"card-body text-center\\\">\\n                <div>\\n                  <h2>Sign up</h2>\\n                  <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\\n                  <button type=\\\"button\\\" routerLink=\\\"/register\\\" class=\\\"btn btn-primary active mt-3\\\">Register Now!</button>\\n                </div>\\n              </div>\\n            </div>\\n\\n            <!--------------------Right Blue Colour Sign Up End-->\\n\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </main>\\n</div>\\n\";","export default \"<ngx-spinner></ngx-spinner>\\n\\n<div class=\\\"app-body\\\">\\n  <main class=\\\"main d-flex align-items-center\\\">\\n    <div class=\\\"container\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-8 mx-auto\\\">\\n          <div class=\\\"card-group\\\">\\n            <div class=\\\"card p-4 login_enter\\\">\\n              <div class=\\\"card-body\\\">\\n\\n                <form autocomplete=\\\"off\\\"  id=\\\"loginInfo\\\" name=\\\"loginInfo\\\" [formGroup]=\\\"loginInfo\\\" (ngSubmit)=\\\"loginInfo.valid && onSubmit()\\\">\\n                  <h1>Login</h1>\\n                  <p class=\\\"text-muted\\\">Sign In to your account</p>\\n                  <div class=\\\"input-group mb-3\\\" >\\n                    <div class=\\\"input-group-prepend\\\">\\n                      <span class=\\\"input-group-text\\\"><i class=\\\"icon-phone\\\"></i></span>\\n                    </div>\\n                    \\n                    \\n\\n                      <!--------------Validation Start-->\\n\\n                      <input type=\\\"text\\\" autocomplete=\\\"phone\\\" placeholder=\\\"Phone*\\\" class=\\\"form-control\\\" id=\\\"phone\\\"  [(ngModel)]=\\\"phone\\\"\\n                      formControlName=\\\"phone\\\" appProtectedfield\\n                      [ngClass]=\\\"{'is-invalid': loginInfo.get('phone').touched && loginInfo.get('phone').invalid}\\\" />\\n                      <div *ngIf= \\\"loginInfo.get('phone').touched && loginInfo.get('phone').invalid\\\" class=\\\"invalid-feedback\\\">\\n                      <div *ngIf=\\\"loginInfo.get('phone').errors.required\\\"  class=\\\"error_msg\\\">Phone is required</div>\\n                      <div *ngIf=\\\"loginInfo.get('phone').errors.pattern\\\" class=\\\"error_msg\\\">Type valid phone number 10 charecters</div>\\n                    </div>\\n\\n\\n\\n                      <!--------------Validation End-->\\n\\n                  </div>\\n                  <div class=\\\"input-group mb-4\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                      <span class=\\\"input-group-text\\\"><i class=\\\"icon-lock\\\"></i></span>\\n                    </div>\\n                    <!--input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password*\\\" autocomplete=\\\"current-password\\\" required-->\\n\\n                    <!--------------Validation Start-->\\n\\n                    <input [type]=\\\"fieldTextType ? 'text' : 'password'\\\" placeholder=\\\"Password*\\\" autocomplete=\\\"current-password\\\" class=\\\"form-control\\\" id=\\\"password\\\"  [(ngModel)]=\\\"password\\\"\\n                    formControlName=\\\"password\\\" appProtectedfield\\n                    [ngClass]=\\\"{'is-invalid': loginInfo.get('password').touched && loginInfo.get('password').invalid}\\\" />\\n                     <!---------------Password Show Hide-->\\n                     <div class=\\\"input-group-append\\\">\\n                      <span class=\\\"input-group-text\\\">\\n                            <i\\n                          class=\\\"fa\\\"\\n                          [ngClass]=\\\"{\\n                            'fa-eye-slash': !fieldTextType,\\n                            'fa-eye': fieldTextType\\n                          }\\\"\\n                          (click)=\\\"toggleFieldTextType()\\\"\\n                        ></i>\\n                      </span>\\n                   </div>\\n                    <!---------------Password Show Hide end-->\\n                    <div *ngIf= \\\"loginInfo.get('password').touched && loginInfo.get('password').invalid\\\" class=\\\"invalid-feedback\\\">\\n                    <div *ngIf=\\\"loginInfo.get('password').errors.required\\\"  class=\\\"error_msg\\\">Password is required at least 8 characters</div>\\n                    <div *ngIf=\\\"loginInfo.get('password').errors.pattern\\\" class=\\\"error_msg\\\">First letter should capital</div>\\n                    <div *ngIf=\\\"loginInfo.get('password').errors.pattern\\\" class=\\\"error_msg\\\">Next is number & special-character(1, 2, @)</div>\\n                  </div>\\n\\n\\n\\n                    <!--------------Validation End-->\\n\\n\\n\\n                  </div>\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col-6\\\">\\n                      <button type=\\\"button\\\" (click)=\\\"login()\\\" class=\\\"btn btn-primary px-4\\\" [disabled] = \\\"!loginInfo.valid\\\">Login</button>\\n                     \\n                   \\n                    </div>\\n                    <div class=\\\"col-6 text-right\\\">\\n                      <button type=\\\"button\\\" routerLink=\\\"/forgetpassword\\\" class=\\\"btn btn-link px-0\\\">Forgot password?</button>\\n                    </div>\\n                  </div>\\n                </form>\\n\\n                \\n                  <!--div *ngIf=\\\"incorrectLogin\\\" class=\\\"alert alert-danger\\\"  id=\\\"notification-alert\\\"> {{ errMsg }} </div-->\\n                  <div class=\\\"responsive_register\\\">\\n                    <p class=\\\"responsive_text_body\\\"><span class=\\\"responsive_text\\\">If you have not any account, please</span> \\n                      <button type=\\\"button\\\" routerLink=\\\"/register\\\" class=\\\"btn btn-primary active responsive_reg\\\">Register Now!</button></p>\\n                  </div>\\n                \\n                \\n              </div>\\n            \\n            </div>\\n\\n\\n            <!--------------------Right Blue Colour Sign Up Start-->\\n            <div class=\\\"card text-white bg-primary py-5 d-md-down-none\\\" style=\\\"width:44%\\\">\\n              <div class=\\\"card-body text-center\\\">\\n                <div>\\n                  <h2>Sign up</h2>\\n                  <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\\n                  <button type=\\\"button\\\" routerLink=\\\"/register\\\" class=\\\"btn btn-primary active mt-3\\\">Register Now!</button>\\n                </div>\\n              </div>\\n            </div>\\n\\n<!--------------------Right Blue Colour Sign Up End-->\\n\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </main>\\n</div>\\n\";","export default \"<div class=\\\"app-body\\\">\\n  <main class=\\\"main d-flex align-items-center\\\">\\n    <div class=\\\"container\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-8 mx-auto\\\">\\n          <div class=\\\"card-group\\\">\\n            <div class=\\\"card p-4\\\">\\n              <div class=\\\"card-body\\\">\\n                <form id=\\\"otpInfo\\\" name=\\\"otpInfo\\\" [formGroup]=\\\"otpInfo\\\" (ngSubmit)=\\\"otpInfo.valid && onSubmit()\\\">\\n                  <h1>OTP</h1>\\n                  <p class=\\\"text-muted\\\">Type your OTP here</p>\\n                  <div class=\\\"input-group mb-3\\\" >\\n                    <div class=\\\"input-group-prepend\\\">\\n                      <span class=\\\"input-group-text\\\"><i class=\\\"icon-phone\\\"></i></span>\\n                    </div>\\n                    \\n                    \\n\\n                      <!--------------Validation Start-->\\n\\n                      <input type=\\\"text\\\"  placeholder=\\\"OTP*\\\" class=\\\"form-control\\\" id=\\\"otp\\\"  [(ngModel)]=\\\"otp\\\"\\n                      formControlName=\\\"otp\\\" appProtectedfield\\n                      [ngClass]=\\\"{'is-invalid': otpInfo.get('otp').touched && otpInfo.get('otp').invalid}\\\" />\\n                      <div *ngIf= \\\"otpInfo.get('otp').touched && otpInfo.get('otp').invalid\\\" class=\\\"invalid-feedback\\\">\\n                      <div *ngIf=\\\"otpInfo.get('otp').errors.required\\\"  class=\\\"error_msg\\\">OTP is required</div>\\n                      <div *ngIf=\\\"otpInfo.get('otp').errors.pattern\\\" class=\\\"error_msg\\\">Type valid OTP</div>\\n                    </div>\\n\\n\\n\\n                      <!--------------Validation End-->\\n\\n                  </div>\\n                  \\n                  <div class=\\\"row next_button\\\">\\n                    <div class=\\\"col-6\\\">\\n                      <button type=\\\"button\\\" class=\\\"btn btn-primary px-4\\\" [disabled] = \\\"!otpInfo.valid\\\">Submit</button>\\n                    </div>\\n                   \\n                  </div>\\n                </form>\\n              </div>\\n            </div>\\n\\n\\n            <!--------------------Right Blue Colour Sign Up Start-->\\n            <div class=\\\"card text-white bg-primary py-5 d-md-down-none\\\" style=\\\"width:44%\\\">\\n              <div class=\\\"card-body text-center\\\">\\n                <div>\\n                  <h2>Sign up</h2>\\n                  <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\\n                  <button type=\\\"button\\\" routerLink=\\\"/register\\\" class=\\\"btn btn-primary active mt-3\\\">Register Now!</button>\\n                </div>\\n              </div>\\n            </div>\\n\\n<!--------------------Right Blue Colour Sign Up End-->\\n\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </main>\\n</div>\\n\";","export default \"<ngx-spinner></ngx-spinner>\\n\\n<div class=\\\"app-body\\\">\\n  <main class=\\\"main d-flex align-items-center\\\">\\n    <div class=\\\"container\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6 mx-auto\\\">\\n          <div class=\\\"card mx-4\\\">\\n            <div class=\\\"card-body p-4\\\">\\n              <!--form name=\\\"registerForm\\\" autocomplete=\\\"off\\\" name=\\\"registerForm\\\" (ngSubmit)=\\\"registerForm.valid && onSubmit()\\\"-->\\n              <form name=\\\"registerForm\\\" autocomplete=\\\"off\\\" name=\\\"registerForm\\\" (ngSubmit)=\\\"registerForm.valid\\\">\\n                <h1>Register</h1>\\n                <p class=\\\"text-muted\\\">Create your account</p>\\n                <!--span class=\\\"text-danger\\\">{{error}}</span-->\\n                <div class=\\\"input-group mb-3\\\" [formGroup]=\\\"registerForm\\\">\\n                  <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"icon-user\\\"></i></span>\\n                  </div>\\n\\n                  <!----Validation Start-->\\n                  <input type=\\\"text\\\" placeholder=\\\"First name*\\\" autocomplete=\\\"fname\\\" class=\\\"form-control\\\" id=\\\"f_name\\\"\\n                    [(ngModel)]=\\\"f_name\\\" formControlName=\\\"firstName\\\" appProtectedfield\\n                    [ngClass]=\\\"{'is-invalid': registerForm.get('firstName').touched && registerForm.get('firstName').invalid}\\\" />\\n\\n                  <div class=\\\"invalid-feedback\\\">\\n                    <div class=\\\"error_msg\\\">First name is required</div>\\n                  </div>\\n                  <!----Validation End-->\\n\\n\\n                </div>\\n                <div class=\\\"input-group mb-3\\\" [formGroup]=\\\"registerForm\\\">\\n                  <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"icon-user\\\"></i></span>\\n                  </div>\\n\\n                  <!----Validation Start-->\\n                  <input type=\\\"text\\\" placeholder=\\\"Last name*\\\" autocomplete=\\\"lname\\\" class=\\\"form-control\\\" id=\\\"l_name\\\"\\n                    [(ngModel)]=\\\"l_name\\\" formControlName=\\\"lastName\\\" appProtectedfield\\n                    [ngClass]=\\\"{'is-invalid': registerForm.get('lastName').touched && registerForm.get('lastName').invalid}\\\" />\\n\\n                  <div class=\\\"invalid-feedback\\\">\\n                    <div class=\\\"error_msg\\\">Last name is required</div>\\n                  </div>\\n                  <!----Validation End-->\\n\\n                </div>\\n\\n                <div class=\\\"input-group mb-3\\\" [formGroup]=\\\"registerForm\\\">\\n                  <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"icon-envelope\\\"></i></span>\\n                  </div>\\n\\n                  <!----Validation Start-->\\n                  <input type=\\\"text\\\" placeholder=\\\"Email(Optional)\\\" autocomplete=\\\"email\\\" appProtectedfield\\n                    class=\\\"form-control\\\" id=\\\"email\\\" [(ngModel)]=\\\"email\\\" formControlName=\\\"Email\\\"\\n                    addUniqueValidatorDirective\\n                    [ngClass]=\\\"{'is-invalid': registerForm.get('Email').touched && registerForm.get('Email').invalid}\\\" />\\n\\n                  <div *ngIf=\\\"registerForm.get('Email').touched && registerForm.get('Email').invalid\\\"\\n                    class=\\\"invalid-feedback\\\">\\n                    <!--div *ngIf=\\\"registerForm.get('Email').errors.required\\\" class=\\\"error_msg\\\">Email is required</div-->\\n                    <div *ngIf=\\\"registerForm.get('Email').errors.pattern\\\" class=\\\"error_msg\\\">Type valid email address\\n                    </div>\\n                    <div *ngIf=\\\"registerForm.get('Email').errors.addUniqueValidatorDirective\\\" class=\\\"error_msg\\\">Email\\n                      already exists use\\n                      another one</div>\\n                  </div>\\n                  <!----Validation End-->\\n\\n                </div>\\n\\n\\n\\n\\n                <div class=\\\"input-group mb-3\\\" [formGroup]=\\\"registerForm\\\">\\n                  <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"icon-phone\\\"></i></span>\\n                  </div>\\n\\n                  <!--------------Validation Start-->\\n\\n                  <input type=\\\"text\\\" autocomplete=\\\"phone\\\" appProtectedfield placeholder=\\\"Phone*\\\" class=\\\"form-control\\\"\\n                    id=\\\"phone\\\" [(ngModel)]=\\\"phone\\\" formControlName=\\\"phone\\\" addUniquePhoneValidatorDirective\\n                    maxlength=\\\"10\\\" minlength=\\\"10\\\"\\n                    [ngClass]=\\\"{'is-invalid': registerForm.get('phone').touched && registerForm.get('phone').invalid}\\\" />\\n\\n                  <div *ngIf=\\\"registerForm.get('phone').touched && registerForm.get('phone').invalid\\\"\\n                    class=\\\"invalid-feedback\\\">\\n\\n\\n                    <div *ngIf=\\\"registerForm.get('phone').errors.required\\\" class=\\\"error_msg\\\">Phone is required</div>\\n\\n                    <div *ngIf=\\\"registerForm.get('phone').errors.addUniquePhoneValidatorDirective\\\" class=\\\"error_msg\\\">\\n                      Phone\\n                      already exists use\\n                      another one</div>\\n                    <div *ngIf=\\\"registerForm.get('phone').errors.pattern\\\" class=\\\"error_msg\\\">Type valid phone number 10\\n                      charecters</div>\\n                    <!--div *ngIf=\\\"registerForm.get('phone').errors.uniqueValidator\\\" class=\\\"error_msg\\\">Phone number already exists use another one</div-->\\n\\n\\n                  </div>\\n\\n\\n\\n                  <!--------------Validation End-->\\n\\n                </div>\\n                <div class=\\\"input-group mb-3\\\" [formGroup]=\\\"registerForm\\\">\\n                  <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"icon-symbol-male\\\"></i></span>\\n                  </div>\\n                  <!--input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"gender\\\" name=\\\"gender\\\" placeholder=\\\"gender\\\" required-->\\n\\n                  <select id=\\\"gender\\\" class=\\\"form-control\\\" id=\\\"gender\\\" ng-Model=\\\"gender\\\" formControlName=\\\"genderControl\\\"\\n                    (change)=\\\"changeGender($event)\\\">\\n                    <option value=\\\"\\\"> ---Select Gender---</option>\\n                    <option [ngValue]=\\\"gender\\\" *ngFor=\\\"let gender of genders\\\"> {{gender}}</option>\\n                  </select>\\n                  <div class=\\\"invalid-feedback1\\\">\\n                    <div\\n                      *ngIf=\\\"registerForm.get('genderControl').hasError('required') && registerForm.get('genderControl').touched\\\"\\n                      class='error_msg' padding>Gender is a required</div>\\n                  </div>\\n\\n                </div>\\n\\n\\n                <div class=\\\"input-group mb-3\\\" [formGroup]=\\\"registerForm\\\">\\n                  <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"icon-lock\\\"></i></span>\\n                  </div>\\n\\n                  <!--input type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"Password\\\" autocomplete=\\\"new-password\\\" required-->\\n\\n\\n                  <!--------------Validation Start-->\\n\\n                  <input [type]=\\\"fieldTextType ? 'text' : 'password'\\\" placeholder=\\\"Password*\\\"\\n                    autocomplete=\\\"current-password\\\" class=\\\"form-control\\\" id=\\\"password\\\" [(ngModel)]=\\\"password\\\"\\n                    formControlName=\\\"password\\\" appProtectedfield maxlength=\\\"10\\\" minlength=\\\"10\\\"\\n                    [ngClass]=\\\"{'is-invalid': registerForm.get('password').touched && registerForm.get('password').invalid}\\\" />\\n                  <!---------------Password Show Hide-->\\n                  <div class=\\\"input-group-append\\\">\\n                    <span class=\\\"input-group-text\\\">\\n                      <i class=\\\"fa\\\" [ngClass]=\\\"{\\n                            'fa-eye-slash': !fieldTextType,\\n                            'fa-eye': fieldTextType\\n                          }\\\" (click)=\\\"toggleFieldTextType()\\\"></i>\\n                    </span>\\n                  </div>\\n                  <!---------------Password Show Hide end-->\\n\\n\\n                  <div *ngIf=\\\"registerForm.get('password').touched && registerForm.get('password').invalid\\\"\\n                    class=\\\"invalid-feedback\\\">\\n\\n                    <div *ngIf=\\\"registerForm.get('password').errors.required\\\" class=\\\"error_msg\\\">Password is required at\\n                      least 8 characters</div>\\n                    <div *ngIf=\\\"registerForm.get('password').errors.pattern\\\" class=\\\"error_msg\\\">First is upper case</div>\\n                    <div *ngIf=\\\"registerForm.get('password').errors.pattern\\\" class=\\\"error_msg\\\">Next is number &\\n                      character(1, 2, @)</div>\\n                    <div *ngIf=\\\"registerForm.get('password').errors.pattern\\\" class=\\\"error_msg\\\">(eg. Local2@code)</div>\\n\\n                  </div>\\n                  <!--------------Validation End-->\\n\\n                </div>\\n\\n                <div class=\\\"input-group mb-4\\\" [formGroup]=\\\"registerForm\\\">\\n                  <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"icon-lock\\\"></i></span>\\n                  </div>\\n                  <!--input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Confirm password*\\\" autocomplete=\\\"new-password\\\" required-->\\n\\n                  <!--------------Validation Start-->\\n\\n                  <input [type]=\\\"repeatFieldTextType ? 'text' : 'password'\\\" placeholder=\\\"Confirm password*\\\"\\n                    autocomplete=\\\"current-password\\\" class=\\\"form-control\\\" id=\\\"confirm_password\\\" name=\\\"confirm_password\\\"\\n                    appProtectedfield appConfirmEqualValidatorDirective=\\\"password\\\" [(ngModel)]=\\\"confirm_password\\\"\\n                    formControlName=\\\"confirmPassword\\\" maxlength=\\\"10\\\" minlength=\\\"10\\\"\\n                    [ngClass]=\\\"{'is-invalid': registerForm.get('confirmPassword').touched && registerForm.get('confirmPassword').invalid}\\\" />\\n                  <!---------------Password Show Hide-->\\n                  <div class=\\\"input-group-append\\\">\\n                    <span class=\\\"input-group-text\\\">\\n                      <i class=\\\"fa\\\" [ngClass]=\\\"{\\n                          'fa-eye-slash': !repeatFieldTextType,\\n                          'fa-eye': repeatFieldTextType\\n                        }\\\" (click)=\\\"toggleRepeatFieldTextType()\\\"></i>\\n                    </span>\\n                  </div>\\n                  <!---------------Password Show Hide end-->\\n\\n                  <div\\n                    *ngIf=\\\"registerForm.get('confirmPassword').touched && registerForm.get('confirmPassword').invalid\\\"\\n                    class=\\\"invalid-feedback\\\">\\n\\n                    <div *ngIf=\\\"registerForm.get('confirmPassword').errors.required\\\" class=\\\"error_msg\\\">Confirm Password\\n                      is required </div>\\n                    <div *ngIf=\\\"registerForm.get('confirmPassword').errors.pattern\\\" class=\\\"error_msg\\\">Confirm Password\\n                      should be same as password pattern</div>\\n                    <div *ngIf=\\\"registerForm.get('confirmPassword').errors.notEqual\\\" class=\\\"error_msg\\\">Password &\\n                      Confirm Password does not match</div>\\n                  </div>\\n\\n\\n\\n                  <!--------------Validation End-->\\n\\n                </div>\\n                <button type=\\\"button\\\" (click)=\\\"createObject()\\\" class=\\\"btn btn-block btn-success\\\"\\n                  [disabled]=\\\"!registerForm.valid\\\">Create Account</button>\\n              </form>\\n\\n              <!-----------Bottom Portion-->\\n              <p>Already have an account? Please <a routerLink=\\\"/login\\\">Login</a></p>\\n            </div>\\n            <div class=\\\"card-footer p-4\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-6\\\">\\n                  <button class=\\\"btn btn-block btn-facebook\\\" type=\\\"button\\\"><span>facebook</span></button>\\n                </div>\\n                <div class=\\\"col-6\\\">\\n                  <button class=\\\"btn btn-block btn-twitter\\\" type=\\\"button\\\"><span>twitter</span></button>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </main>\\n</div>\";","export default \"<div class=\\\"app-body\\\">\\n  <main class=\\\"main d-flex align-items-center\\\">\\n    <div class=\\\"container\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-8 mx-auto\\\">\\n          <div class=\\\"card-group\\\">\\n            <div class=\\\"card p-4\\\">\\n              <div class=\\\"card-body\\\">\\n                <form id=\\\"resetPassword\\\" name=\\\"resetPassword\\\" [formGroup]=\\\"resetPassword\\\" (ngSubmit)=\\\"resetPassword.valid && onSubmit()\\\">\\n                  <h1>Reset Password</h1>\\n                  <p class=\\\"text-muted\\\">Make your new password</p>\\n                  \\n                  <div class=\\\"input-group mb-4\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                      <span class=\\\"input-group-text\\\"><i class=\\\"icon-lock\\\"></i></span>\\n                    </div>\\n                   \\n                    <!--------------Validation Start-->\\n\\n                    <input [type]=\\\"fieldTextType ? 'text' : 'password'\\\" placeholder=\\\"New password*\\\"  class=\\\"form-control\\\" id=\\\"password\\\"  [(ngModel)]=\\\"password\\\"\\n                    formControlName=\\\"password\\\" appProtectedfield\\n                    [ngClass]=\\\"{'is-invalid': resetPassword.get('password').touched && resetPassword.get('password').invalid}\\\" />\\n                     <!---------------Password Show Hide-->\\n                     <div class=\\\"input-group-append\\\">\\n                      <span class=\\\"input-group-text\\\">\\n                            <i\\n                          class=\\\"fa\\\"\\n                          [ngClass]=\\\"{\\n                            'fa-eye-slash': !fieldTextType,\\n                            'fa-eye': fieldTextType\\n                          }\\\"\\n                          (click)=\\\"toggleFieldTextType()\\\"\\n                        ></i>\\n                      </span>\\n                   </div>\\n                    <!---------------Password Show Hide end-->\\n                    <div *ngIf= \\\"resetPassword.get('password').touched && resetPassword.get('password').invalid\\\" class=\\\"invalid-feedback\\\">\\n                    <div *ngIf=\\\"resetPassword.get('password').errors.required\\\"  class=\\\"error_msg\\\">Password is required at least 11 characters</div>\\n                    <div *ngIf=\\\"resetPassword.get('password').errors.pattern\\\" class=\\\"error_msg\\\">First letter should capital</div>\\n                    <div *ngIf=\\\"resetPassword.get('password').errors.pattern\\\" class=\\\"error_msg\\\">Next is number & character(1, 2, @ )</div>\\n                    <div *ngIf=\\\"resetPassword.get('password').errors.pattern\\\" class=\\\"error_msg\\\">Last is letter(eg. Local2@code)</div>\\n                  </div>\\n\\n\\n\\n                    <!--------------Validation End-->\\n\\n\\n\\n                  </div>\\n\\n\\n                  <!----Confirm password start-->\\n                  <div class=\\\"input-group mb-4\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                      <span class=\\\"input-group-text\\\"><i class=\\\"icon-lock\\\"></i></span>\\n                    </div>\\n                   \\n                    <!--------------Validation Start-->\\n\\n                  <input [type]=\\\"repeatFieldTextType ? 'text' : 'password'\\\" placeholder=\\\"Confirm new password*\\\" \\n                  class=\\\"form-control\\\" id=\\\"confirm_password\\\" name=\\\"confirm_password\\\" appProtectedfield\\n                  appConfirmEqualValidatorDirective=\\\"password\\\" [(ngModel)]=\\\"confirm_password\\\"\\n                  formControlName=\\\"confirmPassword\\\"\\n                  [ngClass]=\\\"{'is-invalid': resetPassword.get('confirmPassword').touched && resetPassword.get('confirmPassword').invalid}\\\"\\n                   />\\n                    <!---------------Password Show Hide-->\\n                   <div class=\\\"input-group-append\\\">\\n                    <span class=\\\"input-group-text\\\">\\n                      <i\\n                      class=\\\"fa\\\"\\n                      [ngClass]=\\\"{\\n                        'fa-eye-slash': !repeatFieldTextType,\\n                        'fa-eye': repeatFieldTextType\\n                      }\\\"\\n                      (click)=\\\"toggleRepeatFieldTextType()\\\"\\n                    ></i>\\n                    </span>\\n                 </div>\\n                  <!---------------Password Show Hide end-->\\n\\n                <div\\n                  *ngIf=\\\"resetPassword.get('confirmPassword').touched && resetPassword.get('confirmPassword').invalid\\\"\\n                  class=\\\"invalid-feedback\\\">\\n\\n                  <div *ngIf=\\\"resetPassword.get('confirmPassword').errors.required\\\" class=\\\"error_msg\\\">Confirm Password\\n                    is required </div>\\n                  <div *ngIf=\\\"resetPassword.get('confirmPassword').errors.pattern\\\" class=\\\"error_msg\\\">Confirm Password\\n                    should be same as password pattern</div>\\n                  <div *ngIf=\\\"resetPassword.get('confirmPassword').errors.notEqual\\\" class=\\\"error_msg\\\">Password &\\n                    Confirm Password does not match</div>\\n                </div>\\n\\n\\n\\n                <!--------------Validation End-->\\n\\n\\n\\n                  </div>\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col-6\\\">\\n                      <button type=\\\"button\\\"  class=\\\"btn btn-primary px-4\\\" [disabled] = \\\"!resetPassword.valid\\\">Submit</button>\\n                    </div>\\n                   \\n                  </div>\\n                </form>\\n              </div>\\n            </div>\\n\\n\\n            <!--------------------Right Blue Colour Sign Up Start-->\\n            <div class=\\\"card text-white bg-primary py-5 d-md-down-none\\\" style=\\\"width:44%\\\">\\n              <div class=\\\"card-body text-center\\\">\\n                <div>\\n                  <h2>Sign up</h2>\\n                  <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\\n                  <button type=\\\"button\\\" routerLink=\\\"/register\\\" class=\\\"btn btn-primary active mt-3\\\">Register Now!</button>\\n                </div>\\n              </div>\\n            </div>\\n\\n<!--------------------Right Blue Colour Sign Up End-->\\n\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </main>\\n</div>\\n\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { INavData } from '@coreui/angular';\n\nexport const navItems: INavData[] = [\n  {\n    name: 'Dashboard',\n    url: '/dashboard',\n    icon: 'icon-speedometer',\n    badge: {\n      variant: 'info',\n      text: 'NEW'\n    }\n  },\n  {\n    title: true,\n    name: 'Raja Kumar Panda'\n    \n  },\n\n  {\n    name: 'Admin Information',\n    url: '/theme/admininfo',\n    icon: 'icon-diamond'\n  },\n  {\n    name: 'Shopper Information',\n    url: '/theme/myinfo',\n    icon: 'icon-user'\n  },\n  {\n    name: 'Shopper List',\n    url: '/theme/shopperlist',\n    icon: 'icon-list'\n  },\n  {\n    name: 'Category',\n    url: '/theme',\n    icon: 'icon-compass',\n    children: [\n      {\n        name: 'Add',\n        url: '/theme/categoryadd',\n        icon: 'icon-notebook'\n      },\n      {\n        name: 'List',\n        url: '/theme/categorylist',\n        icon: 'icon-equalizer'\n      }\n    ]\n  },\n  {\n    name: 'Product',\n    url: '/theme',\n    icon: 'icon-cursor',\n    children: [\n      {\n        name: 'Add',\n        url: '/theme/product',\n        icon: 'icon-notebook'\n      },\n      {\n        name: 'List',\n        url: '/theme/productlist',\n        icon: 'icon-equalizer'\n      }\n    ]\n  },\n \n\n  {\n    name: 'Customer',\n    url: '/theme/customer',\n    icon: 'icon-people'\n  },\n  {\n    name: 'Banner',\n    url: '/theme/banneradd',\n    icon: 'icon-screen-desktop'\n  },\n  {\n    name: 'Reset Password',\n    url: '/theme/resetpass',\n    icon: 'icon-key'\n  },\n  {\n    name: 'Settings',\n    url: '/theme/settings',\n    icon: 'icon-settings'\n  }\n\n\n  \n];\n","import { Component, OnInit } from '@angular/core';\n\nimport { Router, NavigationEnd } from '@angular/router';\n\n@Component({\n  // tslint:disable-next-line\n  selector: 'body',\n  template: '<router-outlet></router-outlet>',\n \n})\nexport class AppComponent implements OnInit {\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n    this.router.events.subscribe((evt) => {\n      if (!(evt instanceof NavigationEnd)) {\n        return;\n      }\n      window.scrollTo(0, 0);\n    });\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\n//For Spinners\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LocationStrategy, HashLocationStrategy } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n//Toastermodule\nimport { ToastrModule, ToastrService } from 'ngx-toastr';\n\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\nimport { PERFECT_SCROLLBAR_CONFIG } from 'ngx-perfect-scrollbar';\nimport { PerfectScrollbarConfigInterface } from 'ngx-perfect-scrollbar';\n\n\n\n// for getting ng model\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n// For api intregration\nimport { HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\";\n\n\n\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\n  suppressScrollX: true\n};\n\nimport { AppComponent } from './app.component';\n\n// Import containers\nimport { DefaultLayoutComponent } from './containers';\n\nimport { P404Component } from './views/error/404.component';\nimport { P500Component } from './views/error/500.component';\nimport { LoginComponent } from './views/login/login.component';\nimport { RegisterComponent } from './views/register/register.component';\n\n//import { AuthModule } from './auth/auth.module';\nimport { ConfirmEqualValidatorDirective } from './views/register/confirm-equal-validator.directive';\nimport { UniqueValidatorDirective } from './views/register/unique-validator.directive';\nimport { uniquePhoneValidator } from './views/register/unique-validator.directive';  // multi directive\n//For Spinners\nimport { NgxSpinnerModule } from \"ngx-spinner\";\n//For Spinners2\nimport { LoadingBarRouterModule } from '@ngx-loading-bar/router';\nimport { LoadingBarModule } from '@ngx-loading-bar/core';\n\nconst APP_CONTAINERS = [\n  DefaultLayoutComponent\n];\n\nimport {\n  AppAsideModule,\n\n  AppBreadcrumbModule,\n  AppHeaderModule,\n  AppFooterModule,\n  AppSidebarModule,\n} from '@coreui/angular';\n\n// Import routing module\nimport { AppRoutingModule } from './app.routing';\n\n// Import 3rd party components\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { ChartsModule } from 'ng2-charts';\nimport { AuthModule } from './services/auth/heade.auth.module';\nimport { TokenInterceptor } from './services/auth/token.interceptor';\nimport { AngularEditorModule } from '@kolkov/angular-editor';\nimport { SampleComponent } from './sample/sample.component';\nimport { ProtectedfieldDirective } from './middlewares/protectedfield.directive';\nimport { ResetpasswordComponent } from './views/resetpassword/resetpassword.component';\nimport { OtpComponent } from './views/otp/otp.component';\nimport { ForgetpasswordComponent } from './views/forgetpassword/forgetpassword.component';\nimport { NgbModule} from '@ng-bootstrap/ng-bootstrap';\n//Confirmation edit-delete\nimport { environment } from '../environments/environment';//Confirmation Popup \nimport { ConfirmationPopoverModule } from 'angular-confirmation-popover';\n//NGRX Modules\nimport { StoreModule } from '@ngrx/store';\nimport { reducers, metaReducers } from './stores';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { EffectsModule } from '@ngrx/effects';\nimport { SettingsEffects } from './stores/settings/settings.effects';\n//import { SettingsCustomSerializer } from './stores/settings/utils';\n//import { RouterStateSerializer } from '@ngrx/router-store';\nimport { ProductEffects } from './stores/product/product.effects';\n//import { ProductCustomSerializer } from './stores/product/utils';\nimport { QuantityEffects } from './stores/quantity/quantity.effects';\n\n\n\n\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    CommonModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    AppAsideModule,\n    AppBreadcrumbModule.forRoot(),\n    AppFooterModule,\n    AppHeaderModule,\n    AppSidebarModule,\n    PerfectScrollbarModule,\n    BsDropdownModule.forRoot(),\n    TabsModule.forRoot(),\n    ChartsModule,\n    HttpClientModule,\n    AngularEditorModule,\n    NgxSpinnerModule,//For Spinners\n    LoadingBarRouterModule,//For Spinners2\n    LoadingBarModule,\n    AuthModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ConfirmationPopoverModule.forRoot({\n      confirmButtonType: 'danger', // set defaults here\n    }),\n    //AuthModule, \n    ToastrModule.forRoot({\n      timeOut: 1000,\n      progressBar: true,\n      progressAnimation: 'increasing',\n      preventDuplicates: true\n    }),  \n   \n    NgbModule, \n    //NGRX Module import\n    StoreModule.forRoot(reducers, \n      { metaReducers }), \n      !environment.production ? StoreDevtoolsModule.instrument() : [], \n      EffectsModule.forRoot([SettingsEffects, ProductEffects, QuantityEffects]),\n    \n    \n\n  ],\n\n  declarations: [\n    AppComponent,\n    ...APP_CONTAINERS,\n    P404Component,\n    P500Component,\n    LoginComponent,\n    RegisterComponent,\n    ConfirmEqualValidatorDirective,\n    SampleComponent,\n    ProtectedfieldDirective,\n    UniqueValidatorDirective,\n    uniquePhoneValidator, // multi directive\n    ResetpasswordComponent,\n    OtpComponent,\n    ForgetpasswordComponent,\n  \n    \n    \n  ],\n  providers: [\n    {\n      provide: LocationStrategy,\n      useClass: HashLocationStrategy,\n\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptor,\n      multi: true\n    },\n    /* {\n      provide: RouterStateSerializer,\n      useClass: SettingsCustomSerializer,\n    }, */\n    /* {\n      provide: RouterStateSerializer,\n      useClass: ProductCustomSerializer,\n    }, */\n      \n  ],\n  \nschemas: [CUSTOM_ELEMENTS_SCHEMA], //For Spinners\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// Import Containers\nimport { DefaultLayoutComponent } from './containers';\n\nimport { P404Component } from './views/error/404.component';\nimport { P500Component } from './views/error/500.component';\nimport { LoginComponent } from './views/login/login.component';\nimport { RegisterComponent } from './views/register/register.component';\nimport { AuthGuard } from './services/auth/auth.guard.service';\nimport { RedirectorService } from './services/auth/auth.redirector.service';\nimport { SampleComponent } from './sample/sample.component';\nimport { ResetpasswordComponent } from './views/resetpassword/resetpassword.component';\nimport { OtpComponent } from './views/otp/otp.component';\nimport { ForgetpasswordComponent } from './views/forgetpassword/forgetpassword.component';\n// import { DashboardModule } from './views/dashboard/dashboard.component';\n\n\n\nexport const routes: Routes = [\n  { path: '', redirectTo: 'login', pathMatch: 'full'},\n  {\n    path: 'resetpassword',\n    component: ResetpasswordComponent,\n    data: {\n      title: 'Reset Password'\n    }\n  },\n\n  {\n    path: 'forgetpassword',\n    component: ForgetpasswordComponent,\n    data: {\n      title: 'Forget Password'\n    }\n  },\n\n  {\n    path: 'otp',\n    component: OtpComponent,\n    data: {\n      title: 'OTP'\n    }\n  },\n\n  {\n    path: 'sample',\n    component: SampleComponent,\n    data: {\n      title: 'Sample'\n    }\n  },\n \n  {\n    path: '404',\n    component: P404Component,\n    data: {\n      title: 'Page 404'\n    }\n  },\n  {\n    path: '500',\n    component: P500Component,\n    data: {\n      title: 'Page 500'\n    }\n  },\n  {\n    path: 'login',\n    component: LoginComponent,\n    canActivate:[RedirectorService],\n    data: {\n      title: 'Login Page'\n    }\n  },\n  {\n    path: 'register',\n    component: RegisterComponent,\n    canActivate:[RedirectorService],\n    data: {\n      title: 'Register Page'\n    }\n  },\n  \n  {\n    path: '',\n    component: DefaultLayoutComponent,\n    canActivate:[AuthGuard],\n    data: {\n      title: 'Home'\n    },\n    children: [\n      {\n        path: 'base',\n        loadChildren: () => import('./views/base/base.module').then(m => m.BaseModule)\n      },\n      /* {\n        path: 'buttons',\n        loadChildren: () => import('./views/buttons/buttons.module').then(m => m.ButtonsModule)\n      }, */\n      {\n        path: 'charts',\n        loadChildren: () => import('./views/chartjs/chartjs.module').then(m => m.ChartJSModule)\n      },\n      {\n        path: 'dashboard',\n        loadChildren: () => import('./views/dashboard/dashboard.module').then(m => m.DashboardModule)\n      },\n      /* {\n        path: 'icons',\n        loadChildren: () => import('./views/icons/icons.module').then(m => m.IconsModule)\n      }, */\n      {\n        path: 'notifications',\n        loadChildren: () => import('./views/notifications/notifications.module').then(m => m.NotificationsModule)\n      },\n      {\n        path: 'theme',\n        loadChildren: () => import('./views/theme/theme.module').then(m => m.ThemeModule)\n      },\n      {\n        path: 'widgets',\n        loadChildren: () => import('./views/widgets/widgets.module').then(m => m.WidgetsModule)\n      }\n    ]\n  },\n\n  \n  { path: '**', component: P404Component }\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule {}\n","import {Component, OnInit} from '@angular/core';\nimport { navItems } from '../../_nav';\nimport { AuthService } from '../../services/auth/auth.service';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { NgxSpinnerService } from \"ngx-spinner\"; //For Spinner\n\n\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './default-layout.component.html'\n})\nexport class DefaultLayoutComponent implements OnInit {\n  public sidebarMinimized = false;\n  public navItems = navItems;\n\n  constructor(private user:AuthService, \n              private route:Router, private spinner: NgxSpinnerService,\n              private toastr: ToastrService){}\n\n  ngOnInit() {\n\n    this.spinnerFunction();\n                \n  }\n\n  spinnerFunction(){\n    /** spinner starts on init */\n    this.spinner.show();\n \n    setTimeout(() => {\n      /** spinner ends after 5 seconds */\n      this.spinner.hide();\n    }, 2000);\n  }\n  \n  toggleMinimize(e) {\n    this.sidebarMinimized = e;\n  }\n\n  logout(){\n    this.user.Logout().subscribe(\n      (success)=>{\n         //Alert msg\n      this.toastr.info('You are exiting from dashboard', 'Logout Successfully', {\n        timeOut: 1000,\n        progressBar: false\n  \n      })\n\n        this.route.navigate(['/login']);\n      }\n    )\n  }\n}\n","export * from './default-layout.component';\n","export * from './default-layout';\n","import { Directive, HostListener, OnInit } from '@angular/core';\n//import { RegService } from '../views/register/register.component';\n\n@Directive({\n  selector: '[appProtectedfield]'\n})\nexport class ProtectedfieldDirective implements OnInit {\n\n  @HostListener('paste', ['$event']) blockPaste(e: KeyboardEvent) {\n    e.preventDefault();\n  }\n\n  @HostListener('copy', ['$event']) blockCopy(e: KeyboardEvent) {\n    e.preventDefault();\n  }\n\n  @HostListener('cut', ['$event']) blockCut(e: KeyboardEvent) {\n    e.preventDefault();\n  }\n\n  constructor() { }\n\n  ngOnInit() {}\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NhbXBsZS9zYW1wbGUuY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\n//import { ConfirmationDialogService } from '../middlewares/confirmation-dialog/confirmation-dialog.service';\n@Component({\n  selector: 'app-sample',\n  templateUrl: './sample.component.html',\n  styleUrls: ['./sample.component.css']\n})\nexport class SampleComponent implements OnInit {\n\n  popoverTitle = 'Popover title';\n  popoverMessage = 'Popover description';\n  confirmClicked = false;\n  cancelClicked = false;\n \n  constructor(\n    private formBuilder: FormBuilder,\n    //private confirmationDialogService: ConfirmationDialogService,\n    ) { }\n  //title = 'reactive-form-validation-in-angular8';\n \n  ngOnInit() {\n  \n   \n \n }\n\n /* this.store.pipe(select(ProductSelector.selectProducts),tap((e)=>{\n        console.log('sd',e)\n      })).subscribe(res=>{\n       \n        console.log('getData->', res);\n      }); */\n/*  public openConfirmationDialog() {\n  this.confirmationDialogService.confirm('Please confirm..', 'Do you really want to ... ?')\n  .then((confirmed) => console.log('User confirmed:', confirmed))\n  .catch(() => console.log('User dismissed the dialog (e.g., by using ESC, clicking the cross icon, or clicking outside the dialog)'));\n} */\n\n /*  getProductDetails (){\n      this.productService.getProducts().subscribe(list=>{\n        this.prodata = list;\n        console.log(\"List Pro\", this.prodata);\n      })\n    } */\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate,CanLoad,Router } from '@angular/router'\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthGuard implements CanActivate,CanLoad {\n\n  constructor(private authService:AuthService,private router : Router) { }\n\n  canActivate() {\n    return this.canLoad();\n  }\n\n  canLoad(){\n    if(!this.authService.isLoggedIn()){\n      this.router.navigate(['/login']);\n    }\n    return this.authService.isLoggedIn();\n  }\n}\n\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RedirectorService implements CanActivate {\n\n  constructor(private authService:AuthService,private router:Router) { }\n\n  canActivate(){\n    if(this.authService.isLoggedIn()){\n      this.router.navigate(['dashboard'])\n    }\n    return true;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { tap,mapTo,catchError} from 'rxjs/operators';\nimport { of,Observable } from 'rxjs';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  getEmitter() {\n    return this.http.get(\"api/login\")  ;\n  }\n  \n  // Token Identifire in localstorage\n  private readonly JWT_AUT_TOKEN = 'AUTHORISE_TOKEN';\n  private readonly REFRESH_TOKEN = 'REFRESH_TOKEN';\n\n  private loggedUser: string;\n\n\n  \n  constructor(private http:HttpClient) { }\n//Forget Pass\n  ForgetPass(user:{ phone:string}):Observable<any>{\n    return this.http.post('api/login',user)\n      .pipe(\n        tap((tokens:Tokens)=>{\n          this.doForgetPass(user.phone,tokens)\n        }),\n        mapTo(true), \n        catchError(error=>{\n          error.error\n          return of(false)\n        })\n        );\n    }\n  \n\n  Login(user:{ phone:string, password:string}):Observable<any>{\n  return this.http.post('api/login',user)\n    .pipe(\n      tap((tokens:Tokens)=>{\n        this.doUserLogin(user.phone,tokens)\n      }),\n      mapTo(true), \n      catchError(error=>{\n        error.error\n        return of(false)\n      })\n      );\n  }\n\n\n  Logout(){\n    console.log(this.getAuthTokenFromRefreshToken);\n    return this.http.post<any>('api/logout',\n    {\n      refreshToken: this.getLocalRefrashToken(),\n    }).pipe(\n      tap(()=>this.doUserLogout()),\n      mapTo(true),\n      catchError(err=>{\n        err.err\n        return of(false)\n      })\n    )\n  }\n\n\n  getAuthTokenFromRefreshToken(){\n   // console.log(this.getLocalRefrashToken());\n    return this.http.post<any>('api/token',{\n      'refresh_token':this.getLocalRefrashToken()\n    }).pipe(\n      tap((token)=>{\n        this.storeNewAuthToken(token)\n      })\n    )\n  }\n  \n  isLoggedIn(){\n    // Returning true of false from object\n    return !! this.getLocalAuthToken();\n  }\n\n  private doForgetPass(phone:string,tokens:Tokens){\n    this.loggedUser = phone;\n    this.storeTokens(tokens);\n  }\n  \n\n  private doUserLogin(phone:string,tokens:Tokens){\n    this.loggedUser = phone;\n    this.storeTokens(tokens);\n  }\n\n   doUserLogout(){\n    this.loggedUser = null;\n    this.removeTokens();\n  }\n\n  private storeNewAuthToken(token:Tokens){\n    console.log('for intersepter test from srvice',token)\n    localStorage.setItem(this.JWT_AUT_TOKEN,token.accessToken);\n  }\n\n  private storeTokens(tokens:Tokens){\n    localStorage.setItem(this.JWT_AUT_TOKEN,tokens.token.authorise_token);\n    localStorage.setItem(this.REFRESH_TOKEN,tokens.token.refreash_token)\n  }\n\n   getLocalAuthToken(){\n    //  console.info(localStorage.getItem(this.JWT_AUT_TOKEN));\n    return localStorage.getItem(this.JWT_AUT_TOKEN);\n  }\n\n  private getLocalRefrashToken(){\n    return  localStorage.getItem(this.REFRESH_TOKEN);\n  }\n\n\n  private removeTokens(){\n    localStorage.removeItem(this.JWT_AUT_TOKEN);\n    localStorage.removeItem(this.REFRESH_TOKEN);\n  }\n\n}\n\nclass Tokens{\n  authToken:string;\n  refreshToken:string;\n  token:any;\n  accessToken:any;\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from './auth.service';\nimport { AuthGuard } from './auth.guard.service';\nimport { TokenInterceptor } from './token.interceptor';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\n\n\n\n\n@NgModule({\n  declarations: [],\n  providers:[\n    AuthService,\n    AuthGuard,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptor,\n      multi: true\n    }\n  ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class AuthModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError, BehaviorSubject, observable } from 'rxjs';\nimport { catchError, filter, take, switchMap, map,first, tap } from 'rxjs/operators';\nimport { AuthService } from './auth.service';\nimport { Router } from '@angular/router';\n\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n\n  private isRefreshing = false;\n  private refreshTokenSubject: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n\n  constructor(public authService: AuthService,public router:Router) { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    \n    //adding authorised token stored in local storage\n    if(this.authService.getLocalAuthToken()){\n      request = this.addToken(request,this.authService.getLocalAuthToken());\n    }\n    \n    return next.handle(request)\n    .pipe(\n      catchError((error: HttpErrorResponse) => {\n        \n\n        if (error instanceof HttpErrorResponse && error.status === 403) {\n          //console.log(\"intersepter err \" ,error.status)\n          return this.handle403Error(request, next);\n        }\n        else if(error.status == 401){\n          console.log('handeled in intersepter')\n          this.router.navigate(['/login']);\n        }\n         else {\n          return throwError(error);\n        }\n      }),\n    )\n  }\n\n  private addToken(request:HttpRequest<any>,token){\n    //why in need to clone\n    return request.clone({\n      setHeaders: {\n        'Authorization': `Barer ${token}`\n      }\n    })\n  }\n\n  private handle403Error(request: HttpRequest<any>, next: HttpHandler) {\n    if (!this.isRefreshing) {\n      this.isRefreshing = true;\n      this.refreshTokenSubject.next(null);\n      \n      return this.authService.getAuthTokenFromRefreshToken().pipe(\n        switchMap((token: any) => {\n          console.log('getting aut fron refresh',this.refreshTokenSubject);\n          if(token == 401){\n            console.log(\"hiii 401\");\n            this.router.navigate(['/login']);\n          }\n          else{\n\n            this.isRefreshing = false;\n            this.refreshTokenSubject.next(token.jwt);\n            console.log('body observable',this.refreshTokenSubject.next(token.accessToken))\n            return next.handle(this.addToken(request, token.accessToken));\n          }\n          \n        }));\n\n    }\n      \n  }\n\n\n  \n}\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n  constructor(private http: HttpClient) { }\n\n  //Add\n  addProduct(product:any){\n    return this.http.post('api/addproduct', product);\n    \n  }\n\n  //List\n  getProducts(){\n   return this.http.get('api/getproductfulldetails');\n  }\n\n  //Edit\n  updateProduct(product:any, pid:any){\n    console.log('Service-Update>',pid);\n    return this.http.put('api/putproduct/'+pid.pid,pid); //Here only 'pid' only for data parseInt\n\n  }\n\n  //Single data\n  getSingleProduct(pid:number){\n    return this.http.get('api/singleproduct/'+pid);\n  }\n\n  //Delete\n   deleteProduct(pid:number){\n     return this.http.delete('api/delproduct/'+pid);\n    /* var x = this.http.delete('api/delproduct/'+pid);\n    console.log('Del Data->', x);\n    return x; */\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuantityService {\n\n  constructor( private http: HttpClient ) { }\n\n  //Without NGRX select all selling units\n  getAllUnits(){\n    return this.http.get('api/getsellingunit');\n  }\n\n  //Using NGRX All function\n\n  //update\n  updateQuantity(quantity: any, pid: number){\n    return this.http.put('api/putproductpricing'+pid, quantity);\n  }\n\n  //Single data\n  getOnequantity(pid: number){\n    return this.http.get('api/getoneproductpricing'+pid);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SettingsService {\n\n  \n\n  constructor(private http: HttpClient ) { }\n\n  // Settings api start\n\n  //Add\n  addSettings(settingsData: any){\n    return this.http.post('api/addsettings', settingsData);\n  }\n\n  //Get List\n  getSettings(){\n    return this.http.get('api/getsettings');\n  }\n\n  //Edit\n  updateSettings(sid: number, settings){\n    \n    return this.http.put('api/putsettings/'+sid, settings);\n  }\n\n  //Single get data for update\n  getSingleSettings(sid: number){\n    return this.http.get('api/singlesettings/'+sid);\n  }\n\n  //Delete data\n  deleteSettings(sid: Number){\n    return this.http.delete('api/delsettings/'+sid);\n  }\n\n\n}\n","import {\n  ActionReducer,\n  ActionReducerMap,\n  createFeatureSelector,\n  createSelector,\n  MetaReducer\n} from '@ngrx/store';\nimport { environment } from '../../environments/environment';\nimport { SettingsReducer, SettingsState } from './settings/settings.reducer';\nimport {ProductState, ProductReducer} from './product/product.reducer';\nimport { QuantityState, QuantityReducer} from './quantity/quantity.reducer';\n\n\nexport interface MainState {\n  settings: SettingsState;\n  product: ProductState;\n  //[fromQuantityReducer.quantityFeatureKey]: fromQuantityReducer.QuantityState;\n  quantity: QuantityState;\n\n}\n\nexport const reducers: ActionReducerMap<MainState> = {\n  settings: SettingsReducer,\n  product: ProductReducer,\n  //[fromQuantityReducer.quantityFeatureKey]: fromQuantityReducer.QuantityReducer,\n  quantity: QuantityReducer,\n  \n};\n\n\nexport const metaReducers: MetaReducer<MainState>[] = !environment.production ? [] : [];\n","import { Action, createAction, props } from '@ngrx/store';\nimport { ProductModel } from '../../views/theme/productinfo/model/product.model'\nimport { create } from 'domain';\nimport { Update } from '@ngrx/entity';\n\n//List of data\nexport const loadProducts = createAction(\n  '[Product List] Load Products',\n);\n\nexport const loadProductsSucess = createAction(\n  '[Product List Effect] Load Products Success',\n  props<{products:any}> ()\n);\n\nexport const loadProductsFail = createAction(\n  '[Product List Effect] Load Products Fail',\n  props <{error:any}> ()\n)\n\n//Single data\nexport const loadProduct = createAction(\n  '[Product] Load Product',\n  props< {productId:number} > ()\n);\n\n//Create\nexport const createProduct = createAction(\n  '[Product] Create Product',\n  props< {product:any} >()\n);\n\nexport const createProductSuccess = createAction(\n  '[Product] Create Product Success',\n  props< {product:any} >()\n);\n\nexport const createProductFail = createAction(\n  '[Product] Create Product Fail',\n  props< {error:any} >()\n);\n\n//Update\nexport const updateProduct = createAction(\n  '[Product] Update Product',\n  props<{product:any, pid:any}>()\n);\n\nexport const updateProductSuccess = createAction(\n  '[Product] Update Product Success',\n  props<{product:Update<ProductModel>}>()\n  //'Update'Taken from '@ngrx/entity' file and 'productModel' taken from model\n);\n\nexport const updateProductFail = createAction(\n  '[Product] Update Product Fail',\n  props<{error:any}>()\n);\n\n//Delete\nexport const deleteProduct = createAction(\n  '[Product] Delete Product',\n  props<{pid:number}>()\n);\n\nexport const deleteProductSuccess = createAction(\n  '[Product] Delete Product',\n  props<{pid:number}>()\n);\n\nexport const deleteProductFail = createAction(\n  '[Product] Delete Product',\n  props<{error:any}>()\n);\n\n\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType, createEffect, act } from '@ngrx/effects';\nimport * as ProductAction from './product.actions';\nimport { ProductService } from '../../services/product.service';\nimport { mergeMap, map, catchError, tap } from 'rxjs/operators';\nimport { of } from 'rxjs';\n\n\n\n@Injectable()\nexport class ProductEffects {\n\n //Extra Date Store for a few moment\n HoldInsert: any = undefined;\n HoldUpdate: any = undefined;\n HoldDelete: any = undefined;\n\n  constructor(private actions$: Actions,\n    private productService: ProductService) {}\n\n    //All Data List\n  loadProducts$ = createEffect(() => this.actions$.pipe(\n    ofType(ProductAction.loadProducts),\n    mergeMap(() => this.productService.getProducts()\n      .pipe(\n        map(products =>{\n          //console.log(\"effect->>\",products)\n          return ProductAction.loadProductsSucess({ products: products })\n        }),\n          catchError(error => of(ProductAction.loadProductsFail({ error })))\n      ))\n    ));\n\n  //Insert Data\n  insertProduct$ = createEffect(() => this.actions$.pipe(\n    ofType(ProductAction.createProduct),\n    tap((action) => {\n      //console.log('Product & Action', action);\n      this.HoldInsert = action.product;\n    }),\n    mergeMap((action) => this.productService.addProduct(action.product).pipe(\n      map((product, action) => {\n        //console.log('Product & Action', product, action);\n        return ProductAction.createProductSuccess({ product: this.HoldInsert })\n      }),\n      catchError(error => of(ProductAction.createProductFail({ error }))),\n    )),\n  )); \n  \n  //Update Data\n updateProduct$ = createEffect(() => this.actions$\n  .pipe(\n    ofType(ProductAction.updateProduct),\n    tap((action) => {\n      this.HoldUpdate = action;\n    }),\n    mergeMap((action) => this.productService.updateProduct(action.pid, action.product).pipe(\n      map((product) => {\n        return ProductAction.updateProductSuccess({\n          product: {\n            id: this.HoldUpdate.id,\n            changes: this.HoldUpdate.product\n          }\n        });\n      }),\n      catchError(error => of(ProductAction.updateProductFail({ error })))\n    ))\n  ));\n\n//Delete Data\ndeleteProduct$ = createEffect(() => this.actions$.pipe(\n  ofType(ProductAction.deleteProduct),\n  tap((action)=>{\n    this.HoldDelete = action.pid;\n  }),\n  mergeMap((action)=>this.productService.deleteProduct(action.pid).pipe(\n    map((product)=>{\n      //console.log('Del-Product & Action', product, action);\n      return ProductAction.deleteProductSuccess({pid:this.HoldDelete})\n    }),\n    catchError(error => of(ProductAction.deleteProductFail({error})))\n  ))\n));\n\n\n}\n","import { Action, createReducer, on } from '@ngrx/store';\nimport { EntityState, EntityAdapter, createEntityAdapter } from \"@ngrx/entity\";\nimport { ProductModel } from '../../views/theme/productinfo/model/product.model';\n\n\nimport * as ProductAction from './product.actions';\n\n\n\n\nexport const productFeatureKey = 'product';\n\n\n//For Entity\nexport interface ProductState extends EntityState<ProductModel> {\n  error: any;\n  currentSelectedProduct: number;\n}\n//Adding & create entityadapter for entity if created\nexport const adapter: EntityAdapter<ProductModel> = createEntityAdapter<ProductModel>();\n\n//Making initial state using Entity and entityadapter that is get\nexport const initialState: ProductState = adapter.getInitialState({\n  error: undefined,\n  currentSelectedProduct: null,\n});\n\n//Set all values in reducer\nexport const ProductReducer = createReducer(\n  initialState,\n  \n\n  //Get all date from db\n  on(ProductAction.loadProductsSucess, (state, action)=>{\n    return adapter.setAll(action.products, state);\n    /* console.log('Before Reducer',action);\n    var x = adapter.setAll(action.products, state);\n    console.log('After reducer return', x);\n    console.log('State>', state)\n    return x; */\n  }),\n\n  //Creating or inserting data into db & success\n  on(ProductAction.createProductSuccess, (state, action)=>{\n    return adapter.addOne(action.product, state);\n  }),\n\n  //Set error if any error occur during insert\n  on(ProductAction.createProductFail, (state, action)=>({\n    ...state,\n    error: action.error,\n    \n  })),\n\n  //Set id to state using single-data\n  on(ProductAction.loadProduct, (state, action)=>{\n    console.log('Reducer->', action.productId);\n    return {\n      ...state,\n      currentSelectedProduct: action.productId,\n      \n       \n      \n    };\n  }),\n\n  //Update single data into db and state success\n  on(ProductAction.updateProductSuccess, (state, action)=>{\n    return adapter.updateOne(action.product, state);\n  }),\n\n  //Delete data & Success from db & Store\n  on(ProductAction.deleteProductSuccess, (state, action)=>{\n    return adapter.removeOne(action.pid, state);\n  }),\n\n  //For delete Error or fail\n  on(ProductAction.deleteProductFail, (state, action)=>({\n    ...state,\n    error: action.error,\n  })),\n\n\n);\n\n//getting and exporting state to access from another file Selector\nexport const getSelectedProductId = (state: ProductState) => {\n  return state.currentSelectedProduct;\n}\n\n//Reducer exported & Add to index.js\nexport function reducer(state: ProductState, action: Action) {\n  return ProductReducer(state, action);\n}\n\nexport const {\n  selectIds,\n  selectEntities,\n  selectAll,\n  selectTotal,\n} = adapter.getSelectors(); //Take selector from new selector file\n\n\n","import { Action, createAction, props } from '@ngrx/store';\nimport { QuantityModel } from '../../views/theme/productinfo/model/quantity.model';\nimport { Update } from '@ngrx/entity'; //For Update 'Entity used'\n\n//List Data\nexport const loadQuantities = createAction(\n  '[Load Quantities] List Quantities',\n);\n\nexport const loadQuantitiesSuccess = createAction(\n  '[Load Quantities] List Quantities Success',\n  props<{quantity: any}>()\n);\n\nexport const loadQuantitiesFail = createAction(\n  '[Load Quantities] List Quantities Fail',\n  props<{error: any}>()\n)\n\n\n//Load Single data\nexport const loadQuantity = createAction(\n  '[Load Quantity] Single Quantity',\n  props<{pid: any}>()\n);\n\n//Load update data \nexport const updateQuantity = createAction(\n  '[Quantity] Update Quantity',\n  props<{ quantity: any; pid: any }>()\n);\n\nexport const updateQuantitySuccess = createAction(\n  '[Quantity] Update Quantity Success',\n  props<{ quantity: Update<QuantityModel> }>() \n  //'Update'Taken from '@ngrx/entity' file and 'QuantityModel' taken from model\n);\n\nexport const updateQuantityFail = createAction(\n  '[Quantity] Update Quantity Fail',\n  props<{ error: any }>()\n);","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType, createEffect, act } from '@ngrx/effects';\nimport * as QuantityAction from './quantity.actions';\nimport { QuantityService } from '../../services/quantity.service';\nimport { mergeMap, map, catchError, tap } from 'rxjs/operators';\nimport { of } from 'rxjs';\n\n\n\n@Injectable()\nexport class QuantityEffects {\n    //Extra Date Store for a few moment\n    HoldInsert: any = undefined;\n    HoldUpdate: any = undefined;\n    HoldDelete: any = undefined;\n\n\n  constructor(private actions$: Actions,\n    private quantityService: QuantityService) {}\n\n    //Update Data\n\n    updateQuantity$ = createEffect(() => this.actions$\n    .pipe(\n      ofType(QuantityAction.updateQuantity),\n      tap((action) => {\n        this.HoldUpdate = action;\n      }),\n      mergeMap((action) => this.quantityService.updateQuantity(action.pid, action.quantity).pipe(\n        map((quantity) => {\n          return QuantityAction.updateQuantitySuccess({\n            quantity: {\n              id: this.HoldUpdate.id,\n              changes: this.HoldUpdate.quantity\n            }\n          });\n        }),\n        catchError(error => of(QuantityAction.updateQuantityFail({ error })))\n      ))\n    ));\n\n}\n","import {\n  Action, createReducer, on,\n  createFeatureSelector, createSelector, State, } from \"@ngrx/store\";\nimport { EntityState, EntityAdapter, createEntityAdapter } from \"@ngrx/entity\";\n\nimport * as QuantityAction from './quantity.actions';\nimport { QuantityModel } from '../../views/theme/productinfo/model/quantity.model';\n\n\nexport const quantityFeatureKey = 'quantity';\n\nexport interface QuantityState extends EntityState<QuantityModel> {\n  error: any;\n  currentSelectedQuantity: any;\n}\n\n//Adding & create entityadapter\nexport const adapter: EntityAdapter<QuantityModel> = createEntityAdapter<QuantityModel>();\n\nexport const initialState: QuantityState = adapter.getInitialState({\n  error: undefined,\n  currentSelectedQuantity: null,\n});\n\n//Set all values in reducer\nexport const QuantityReducer = createReducer(\n  initialState,\n\n  //Get all date from db\n  on(QuantityAction.loadQuantitiesSuccess, (state, action) => {\n    return adapter.addAll(action.quantity, state);\n  }),\n\n  //Set id to state using single-data\n  on(QuantityAction.loadQuantity, (state, action) => {\n    return {\n      ...state,\n      currentSelectedQuantity: action.pid, //'pid' taken from action\n    };\n  }),\n\n  //Update single data into db and state success\n  on(QuantityAction.updateQuantitySuccess, (state, action) => {\n    return adapter.updateOne(action.quantity, state);//'quantity' taken from action\n  }),\n);\n\n//getting and exporting state to access from another file Selector\nexport const getSelectdQuantityId = (state: QuantityState) => {\n  return state.currentSelectedQuantity;\n};\n\n//Reducer exported & Add to index.js\nexport function reducer(state: QuantityState, action: Action) {\n  return QuantityReducer(state, action);\n}\n\nexport const {\n  selectIds,\n  selectEntities,\n  selectAll,\n  selectTotal,\n} = adapter.getSelectors(); //Take selector from new selector file","import { Action, createAction, props } from '@ngrx/store';\nimport { Settings } from '../../views/theme/settings/model/settings.model'\nimport { Update } from '@ngrx/entity'; //For Update 'Entity used'\n\n//Load settings list\nexport const loadSettings = createAction(\n  '[Settings] Load Settings',\n);\n\nexport const loadSettingsSuccess = createAction(\n  '[Settings] Load Settings Success',\n  props<{ settings: any }>()\n);\n\nexport const loadSettingsFailure = createAction(\n  '[Settings] Load Settings Failure',\n  props<{ error: any }>()\n);\n\n//Load single settings data\nexport const loadSetting = createAction(\n  '[Settings] Load Setting',\n  props<{ settingsId: number }>()\n);\n\n/* export const loadSettingSuccess = createAction(\n  '[Settings] Load Setting Success',\n  props<{ settings: any }>()\n);\n\nexport const loadSettingFailure = createAction(\n  '[Settings] Load Setting Failure',\n  props<{ error: any }>()\n); */\n\n//Load create settings \nexport const createSetting = createAction(\n  '[Settings] Create Setting',\n  props<{ settings: any }>()\n);\n\nexport const createSettingSuccess = createAction(\n  '[Settings] Create Setting Success',\n  props<{ settings: any }>()\n);\n\nexport const createSettingFailure = createAction(\n  '[Settings] Create Setting Failure',\n  props<{ error: any }>()\n);\n\n//Load update settings \nexport const updateSetting = createAction(\n  '[Settings] Update Setting',\n  props<{ settings: any; sid: number }>()\n);\n\nexport const updateSettingSuccess = createAction(\n  '[Settings] Update Setting Success',\n  props<{ settings: Update<Settings> }>() \n  //'Update'Taken from '@ngrx/entity' file and 'Settings' taken from model\n);\n\nexport const updateSettingFailure = createAction(\n  '[Settings] Update Setting Failure',\n  props<{ error: any }>()\n);\n\n//Load delete settings \nexport const daleteSetting = createAction(\n  '[Settings] Delete Setting',\n  props<{ id: any }>()\n);\n\nexport const daleteSettingSuccess = createAction(\n  '[Settings] Delete Setting Success',\n  props<{ id: any }>()\n);\n\nexport const daleteSettingFailure = createAction(\n  '[Settings] Delete Setting Failure',\n  props<{ error: any }>()\n);\n\n\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType, createEffect, act } from '@ngrx/effects';\nimport * as settingsAction from \"./settings.actions\";\nimport { SettingsService } from '../../services/settings.service';\nimport { mergeMap, map, catchError, tap } from 'rxjs/operators';\nimport { of } from 'rxjs';\n\n@Injectable()\nexport class SettingsEffects {\n\n  //Extra Date Store for a few moment\n  HoldInsert: any = undefined;\n  HoldUpdate: any = undefined;\n  HoldDelete: any = undefined;\n\n  constructor(private actions$: Actions,\n    private settingsService: SettingsService) {}\n\n  //All Data List\n  loadSettings$ = createEffect(() => this.actions$.pipe(\n    ofType(settingsAction.loadSettings),\n    mergeMap(() => this.settingsService.getSettings()\n      .pipe(\n        map(settings => (settingsAction.loadSettingsSuccess({ settings })),\n          catchError(error => of(settingsAction.loadSettingsFailure({ error }))))\n      ))\n    ));\n\n  //Insert Data\n  insertSetting$ = createEffect(() => this.actions$.pipe(\n    ofType(settingsAction.createSetting),\n    tap((action) => {\n      this.HoldInsert = action.settings;\n    }),\n    mergeMap((action) => this.settingsService.addSettings(action.settings).pipe(\n      map((settings, action) => {\n        return settingsAction.createSettingSuccess({ settings: this.HoldInsert })\n      }),\n      catchError(error => of(settingsAction.createSettingFailure({ error }))),\n    )),\n  ));\n\n  //Update Data\n\n  updateSetting$ = createEffect(() => this.actions$\n  .pipe(\n    ofType(settingsAction.updateSetting),\n    tap((action) => {\n      this.HoldUpdate = action;\n    }),\n    mergeMap((action) => this.settingsService.updateSettings(action.sid, action.settings).pipe(\n      map((settings) => {\n        return settingsAction.updateSettingSuccess({\n          settings: {\n            id: this.HoldUpdate.id,\n            changes: this.HoldUpdate.settings\n          }\n        });\n      }),\n      catchError(error => of(settingsAction.updateSettingFailure({ error })))\n    ))\n  ));\n//Delete Data\n  deleteSetting$ = createEffect(() => this.actions$.pipe(\n    ofType(settingsAction.daleteSetting),\n    tap((action)=>{\n      this.HoldDelete = action.id;\n    }),\n    mergeMap((action)=>this.settingsService.deleteSettings(action.id).pipe(\n      map((settings)=>{\n        return settingsAction.daleteSettingSuccess({id:this.HoldDelete})\n      }),\n      catchError(error => of(settingsAction.daleteSettingFailure({error})))\n    ))\n  ));\n \n\n  \n\n}\n","import {\n  Action,\n  createReducer,\n  on,\n  createFeatureSelector,\n  createSelector,\n  State,\n} from \"@ngrx/store\";\n\nimport { EntityState, EntityAdapter, createEntityAdapter } from \"@ngrx/entity\";\n\nimport * as SettingsAction from \"./settings.actions\";\nimport { Settings } from \"../../views/theme/settings/model/settings.model\";\n\n\nexport const settingsFeatureKey = \"settings\";\n\n//For entity\nexport interface SettingsState extends EntityState<Settings> {\n  error: any;\n  currentSelectedSettings: number;\n}\n\n//Adding & create entityadapter\nexport const adapter: EntityAdapter<Settings> = createEntityAdapter<Settings>();\n\n//Making initial state using Entity and entityadapter\nexport const initialState: SettingsState = adapter.getInitialState({\n  error: undefined,\n  currentSelectedSettings: null,\n});\n\n//Set all values in reducer\nexport const SettingsReducer = createReducer(\n  initialState,\n\n  //Get all date from db\n  on(SettingsAction.loadSettingsSuccess, (state, action) => {\n    return adapter.addAll(action.settings, state);\n  }),\n\n  //Creating or inserting data into db & success\n  on(SettingsAction.createSettingSuccess, (state, action) => {\n    return adapter.addOne(action.settings, state);\n  }),\n\n  //Set error if any error occur during insert\n  on(SettingsAction.createSettingFailure, (state, action) => ({\n    ...state,\n    error: action.error,\n  })),\n\n  //Set id to state using single-data\n  on(SettingsAction.loadSetting, (state, action) => {\n    return {\n      ...state,\n      currentSelectedSettings: action.settingsId,\n    };\n  }),\n\n  //Update single data into db and state success\n  on(SettingsAction.updateSettingSuccess, (state, action) => {\n    return adapter.updateOne(action.settings, state);\n  }),\n\n  //Delete data & Success from db & Store\n  on(SettingsAction.daleteSettingSuccess, (state, action) => {\n    return adapter.removeOne(action.id, state);\n  }),\n\n  //For delete Error\n  on(SettingsAction.daleteSettingFailure, (state, action) => ({\n    ...state,\n    error: action.error,\n  }))\n);\n\n//getting and exporting state to access from another file Selector\nexport const getSelectdSettingsId = (state: SettingsState) => {\n  return state.currentSelectedSettings;\n};\n\n//Reducer exported & Add to index.js\nexport function reducer(state: SettingsState, action: Action) {\n  return SettingsReducer(state, action);\n}\n\nexport const {\n  selectIds,\n  selectEntities,\n  selectAll,\n  selectTotal,\n} = adapter.getSelectors(); //Take selector from new selector file\n","import { Component } from '@angular/core';\n\n@Component({\n  templateUrl: '404.component.html'\n})\nexport class P404Component {\n\n  constructor() { }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  templateUrl: '500.component.html'\n})\nexport class P500Component {\n\n  constructor() { }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from \"../../services/auth/auth.service\"\n  //import {AuthenticationService, TokenPayload} from '../../services/authentication.service';\n\n  import { Router } from '@angular/router';\n  import { FormGroup, FormControl, Validators } from '@angular/forms';\n  import { from } from 'rxjs';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: 'forgetpassword.component.html'\n})\nexport class ForgetpasswordComponent implements OnInit  {\n\n  // Password show and hide\n  fieldTextType: boolean;\n  phone: string;\n  \n  errMsg: any;\n  incorrectForgetpass= false;\n\n\n  onSubmit() {\n    \n    //alert(JSON.stringify(this.myInfo.value));\n    alert(\"Login successfully\");\n  }\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n  ngOnInit() {\n    this.observeDOMCredential();\n\n  }\n\n  observeDOMCredential(){\n    let forgetPass = document.getElementsByClassName('frogetpass_enter');\n    \n    forgetPass[0].addEventListener(\"keypress\", (e:KeyboardEvent)=>{\n      if(e.key.toLowerCase() == \"enter\"){\n        this.forgetPass();\n        console.log(this.forgetPass());\n\n      }\n    })\n  }\n//Button click\n  forgetPass() {\n\n    this.authService.ForgetPass({\n      phone: this.phone\n      \n    })\n      .subscribe(success => {\n        if (success) {\n\n          this.router.navigate(['/otp']);\n        }\n        else {\n\n          this.errMsg = \"Invalid credentials\";\n          this.incorrectForgetpass = true;\n          setInterval(()=>{\n            this.incorrectForgetpass = false;\n          },1000*60*1)\n        }\n      })\n  }\n\n  //Password Validation\n  forgetPassword = new FormGroup({\n    phone: new FormControl('', [Validators.required, Validators.pattern(\"^((\\\\+91-?)|0)?[0-9]{10}$\")])\n    \n  })\n\n  //Password show & hide\n  toggleFieldTextType() {\n    this.fieldTextType = !this.fieldTextType;\n  }\n\n  \n  \n\n\n }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AuthService } from \"../../services/auth/auth.service\";\nimport { NgbModal, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\nimport { NgxSpinnerService } from \"ngx-spinner\"; //For Spinner\n\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: 'login.component.html'\n})\nexport class LoginComponent implements OnInit {\ntitle= 'Login';\n  //Define variables\n  phone: string;\n  password: string;\n  //errMsg: any;\n  incorrectLogin= false;\n  //Show-hide password\n  fieldTextType: boolean;\n\n\n  constructor(\n    private authService: AuthService, \n    private router: Router, private spinner: NgxSpinnerService,\n    private toastr: ToastrService) { }\n\n  ngOnInit() {\n\n    this.observeDOMCredential();\n    this.spinnerFunction();\n    \n  }\n\n  spinnerFunction(){\n    /** spinner starts on init */\n    this.spinner.show();\n \n    setTimeout(() => {\n      /** spinner ends after 5 seconds */\n      this.spinner.hide();\n    }, 800);\n  }\n  \n\n \n\n  //Show-hide password\n  toggleFieldTextType() {\n    this.fieldTextType = !this.fieldTextType;\n  }\n\n  //Field Validation \n  loginInfo = new FormGroup({\n    phone: new FormControl('', [Validators.required, Validators.pattern(\"^((\\\\+91-?)|0)?[0-9]{10}$\")]),\n    password: new FormControl('', [Validators.required, Validators.pattern(\"((?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%]).{8,12})\")])\n\n\n  })\n\n  onSubmit() {\n\n    alert(\"Login successfully\");\n  }\n\n  //Submit using Enter button \n  observeDOMCredential(){\n    let login = document.getElementsByClassName('login_enter');\n    \n    login[0].addEventListener(\"keypress\", (e:KeyboardEvent)=>{\n      if(e.key.toLowerCase() == \"enter\"){\n        this.login();\n        console.log(this.login());\n\n      }\n    })\n  }\n\n  //Valid & invalid credentials\n  login() {\n  \n    \n    this.authService.Login({\n      phone: this.phone,\n      password: this.password\n    })\n      .subscribe(success => {\n        if (success) {\n\n          this.toastr.success('You are entering dashboard', 'Login Successfully', {\n            timeOut: 1000,\n            progressBar: false\n      \n          })\n\n          this.router.navigate(['/dashboard']);\n        }\n        else {\n\n         // this.errMsg = \"Invalid credentials\";\n         this.toastr.error('Type valid credentials', 'Invalid', {\n          timeOut: 1000*30,\n          progressBar: false\n    \n        })\n          /* this.incorrectLogin = true;\n          setInterval(()=>{\n            this.incorrectLogin = false;\n          },1000*60*1) */\n        }\n      })\n  }\n\n \n   \n\n\n\n}\n","import { Component, OnInit } from '@angular/core';\n  //import {AuthenticationService, TokenPayload} from '../../services/authentication.service';\n\n  import { Router } from '@angular/router';\n  import { FormGroup, FormControl, Validators } from '@angular/forms';\n  import { from } from 'rxjs';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: 'otp.component.html'\n})\nexport class OtpComponent implements OnInit  {\n/*******Password show and hide****** */\n  fieldTextType: boolean;\n\n\n  toggleFieldTextType() {\n    this.fieldTextType = !this.fieldTextType;\n  }\n\n\n\n/*******Password show and hide end****** */\n\n\n   /*******Form Validation reactive */\n   otpInfo = new FormGroup({\n    otp: new FormControl('', [Validators.required, Validators.pattern(\"[0-9]{4,8}\")])\n\n\n  })\n\n  onSubmit() {\n    \n    //alert(JSON.stringify(this.myInfo.value));\n    alert(\"OTP sumbitted successfully\");\n  }\n\n\n\n/*******Form Validation reactive end */\n\n\n\n\n\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n\n\n  }\n\n   /* credentials: TokenPayload{\n\n      id: 0,\n      f_name: '',\n      l_name: '',\n      phone: '',\n      gender: '',\n      password: '',\n      type_id: ''\n\n    }\n\n    constructor(private auth: AuthenticationService, private router: Router) {}\n\n    login() {\n\n      this.auth.login(this.Credentials).subscribe(\n        () =>{\n            this.router.navigateByUrl('/dashboard')\n\n        },\n        err => {\n\n          console.error(err)\n        }\n\n\n      )\n\n\n\n    }*/\n\n\n }\n","import { Validator, NG_VALIDATORS, AbstractControl } from '@angular/forms';\nimport { Directive, Input } from '@angular/core';\nimport { Key } from 'protractor';\n\n\n@Directive({\n\n    selector: '[appConfirmEqualValidatorDirective]',\n    providers: [{\n\n        provide: NG_VALIDATORS,\n        useExisting: ConfirmEqualValidatorDirective,\n        multi: true\n\n    }]\n})\n\nexport class ConfirmEqualValidatorDirective implements Validator{\n\n    @Input() appConfirmEqualValidatorDirective: string;\n\n    validate( control: AbstractControl ): {[Key:string]: any} | null {\n\n        const controlToCompare = control.parent.get(this.appConfirmEqualValidatorDirective);\n        if(controlToCompare && controlToCompare.value !== control.value){\n\n            return {'notEqual': true };\n        }\n\n        return null;\n\n    }\n\n\n} ","import { Component, OnInit, HostListener  } from '@angular/core';\nimport { RegService } from './service/reg.service';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { FormBuilder } from \"@angular/forms\";\nimport { ToastrService } from 'ngx-toastr';\nimport { NgxSpinnerService } from \"ngx-spinner\"; //For Spinner\n\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: 'register.component.html'\n})\n\n\n\nexport class RegisterComponent implements OnInit {\n\n  // Password show and hide\n  fieldTextType: boolean;\n  repeatFieldTextType: boolean;\n\n  // Gender Value\n  //registergForm: FormGroup;\n  genders: any = ['Male', 'Female', 'Others']\n\n  // will go to database for registration\n  f_name: string;\n  l_name: string;\n  phone: number;\n  gender: string;\n  password: any;\n  u_type: 2;\n  \n  // leter will add to database\n  email: string;\n\n  // For Extra data\n  titles: any;\n  test: any;\n  error: string;\n\n\n  constructor(private userData: RegService, \n              private router: Router, \n              private fb: FormBuilder, private spinner: NgxSpinnerService,\n              private toastr: ToastrService) { }\n\n  ngOnInit() {\n    //this.genderControl();\n    this.spinnerFunction();\n  }\n\n  spinnerFunction(){\n    /** spinner starts on init */\n    this.spinner.show();\n \n    setTimeout(() => {\n      /** spinner ends after 5 seconds */\n      this.spinner.hide();\n    }, 600);\n  }\n  \n\n  // Form Validation reactive \n  registerForm = new FormGroup({\n    firstName: new FormControl('', Validators.required),\n    lastName: new FormControl('', Validators.required),\n    genderControl: new FormControl('', [Validators.required]),\n    //Email: new FormControl('', [Validators.required, Validators.email]),\n    Email: new FormControl('', [Validators.pattern(\"^[^@\\\\s]+@[^@\\\\s]+\\\\.[^@\\\\s]+$\")]),\n    phone: new FormControl('', [Validators.required, Validators.pattern(\"^((\\\\+91-?)|0)?[0-9]{10}$\")]),\n    password: new FormControl('', [Validators.required, Validators.pattern(\"((?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%]).{8,12})\")]),\n    confirmPassword: new FormControl('', [Validators.required, Validators.pattern(\"((?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%]).{8,12})\")])\n  })\n\n  // Toggle Eye button\n  toggleFieldTextType() {\n    this.fieldTextType = !this.fieldTextType;\n  }\n\n  // Toggle Eye button\n  toggleRepeatFieldTextType() {\n    this.repeatFieldTextType = !this.repeatFieldTextType;\n  }\n\n  /* onSubmit() {\n    alert(JSON.stringify(this.registerForm.value));\n    alert(\"Login successfully\");\n  } */\n\n  changeGender(gender){\n    \n    \n    this.gender = gender.target.value.split(' ')[1];\n    \n  }\n\n  \n /*  genderControl() {\n    return this.registergForm = this.fb.group({\n      genderControl: ['']\n    });\n\n\n    \n  } */\n\n\n  createObject() {\n    let organizedData = {\n      first_name: this.f_name,\n      last_name: this.l_name,\n      phone: this.phone,\n      gender: this.gender,\n      password: this.password,\n      type: 1\n    };\n    this.insertData(organizedData);\n  }\n\n  private insertData(objectData) {\n    this.userData.addUser(objectData).subscribe(res => {\n      this.test = res;\n      console.log(res);\n\n      //Alert msg\n      this.toastr.success('Please login', 'Register Successfully', {\n        timeOut: 1000,\n        progressBar: false\n  \n      })\n      \n      this.router.navigate(['/login']);\n    })\n  }\n\n}\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\nimport { tap, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegService {\n\n  //private fake_url = 'https://jsonplaceholder.typicode.com/users';\n\n\n  url = \"api\";\n\n\n  constructor(private http: HttpClient) { }\n\n  //Email and phone number already exists validation\n  /*getUserByEmail(email: string) {\n    return this.http.get<any[]>(`${this.fake_url}?email = ${email}`);\n  }*/\n\n   \n\n getUserByEmail(email: string) {\n\n    return this.http.get<any[]>(\"api/checkemail\",{\n      params: new HttpParams().set('email', email)\n    });\n  } \n\n  /* getUserByPhone(phone: string) {\n\n    return this.http.get<any[]>(this.fake_url,{\n      params: new HttpParams().set('phone', phone)\n    });\n  }  */\n\n   getUserByPhone(phone: string) {\n     \n    return this.http.get<any[]>(\"api/checkuser\",{\n      params: new HttpParams().set('phone', phone)\n    });\n\n    \n  } \n\n\n  //inserting user or registration\n  addUser(data: any) {\n    return this.http.post(this.url + \"/adduser\", data);\n  }\n  \n\n\n}\n","import { Directive } from '@angular/core';\nimport { AsyncValidator, AbstractControl, ValidationErrors, NG_ASYNC_VALIDATORS, AsyncValidatorFn } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { RegService } from './service/reg.service';\n\n\n@Directive({\n    selector: '[addUniqueValidatorDirective]',\n    providers: [{ provide: NG_ASYNC_VALIDATORS, useExisting: UniqueValidatorDirective, multi: true }]\n    \n})\nexport class UniqueValidatorDirective   implements AsyncValidator {\n\n    constructor(private regService: RegService) { }\n\n    validate(c: AbstractControl): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> {\n        \n        return this.regService.getUserByEmail(c.value).pipe(\n            map((users:any) => {\n                \n                \n                return users.email ? { 'addUniqueValidatorDirective': true } : null; //data geting as object\n                \n\n            })\n           \n        );\n    }\n    \n\n\n\n}\n\n@Directive({\n    selector: '[addUniquePhoneValidatorDirective]',\n    providers: [{ provide: NG_ASYNC_VALIDATORS, useExisting: uniquePhoneValidator, multi: true }]\n    \n})\n\n\n\nexport class uniquePhoneValidator implements AsyncValidator {\n\n    constructor(private regService: RegService) { }\n\n    validate(c: AbstractControl): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> {\n        \n        return this.regService.getUserByPhone(c.value).pipe(\n            /*  tap(phones =>{\n                console.log(\"phone data\", phones);\n               return phones.user_present ? { 'addUniquePhoneValidatorDirective': true } : null; //data geting as single object\n\n            }),  */\n            map((phones:any) => {\n                //console.log(\"in directive\", phones);\n\n                return phones.user_present ? { 'addUniquePhoneValidatorDirective': true } : null; //data geting as single object\n               //return phones && phones.length > 0 ? { 'addUniquePhoneValidatorDirective': true } : null; //data geting as array\n            }), \n            \n\n           \n        );\n    }\n\n\n\n}\n\n\n\n\n/* export function uniquePhoneValidator(regService: RegService): AsyncValidatorFn {\n    console.log(regService);\n    return (c: AbstractControl): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> => {\n        console.log(c);\n        return regService.getUserByPhone(c.value).pipe(\n            map((phones : any) => {\n                \n                return phones && phones.length > 0 ? { 'addUniquePhoneValidatorDirective': true } : null; //data geting as array\n                \n            }),\n            tap(phone => {\n                console.warn(\"incoming\",phone)\n            })\n        );\n    };\n\n} */\n\n","import { Component, OnInit } from '@angular/core';\n  //import {AuthenticationService, TokenPayload} from '../../services/authentication.service';\n\n  import { Router } from '@angular/router';\n  import { FormGroup, FormControl, Validators } from '@angular/forms';\n  import { from } from 'rxjs';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: 'resetpassword.component.html'\n})\nexport class ResetpasswordComponent implements OnInit  {\n\n  /*******Password show and hide****** */\n  fieldTextType: boolean;\n  repeatFieldTextType: boolean;\n  \n  toggleFieldTextType() {\n    this.fieldTextType = !this.fieldTextType;\n  }\n\n  toggleRepeatFieldTextType() {\n    this.repeatFieldTextType = !this.repeatFieldTextType;\n  }\n\n  /*******Password show and hide end****** */\n\n\n   /*******Form Validation reactive */\n   resetPassword = new FormGroup({\n    password: new FormControl('', [Validators.required, Validators.pattern(\"((?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%]).{6,20})\")]),\n    confirmPassword: new FormControl('', [Validators.required, Validators.pattern(\"((?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%]).{6,20})\")])\n\n    \n\n\n  })\n\n  onSubmit() {\n    \n    //alert(JSON.stringify(this.myInfo.value));\n    alert(\"Request send successfully\");\n  }\n\n\n\n/*******Form Validation reactive end */\n\n\n\n\n\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n\n\n  }\n\n   /* credentials: TokenPayload{\n\n      id: 0,\n      f_name: '',\n      l_name: '',\n      phone: '',\n      gender: '',\n      password: '',\n      type_id: ''\n\n    }\n\n    constructor(private auth: AuthenticationService, private router: Router) {}\n\n    login() {\n\n      this.auth.login(this.Credentials).subscribe(\n        () =>{\n            this.router.navigateByUrl('/dashboard')\n\n        },\n        err => {\n\n          console.error(err)\n        }\n\n\n      )\n\n\n\n    }*/\n\n\n }\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule, {\n  useJit: true,\n  preserveWhitespaces: true\n})\n  .catch(err => console.log(err));\n"],"sourceRoot":"webpack:///"}